{
  "version": 3,
  "sources": ["../../node_modules/@microsoft/signalr/src/Errors.ts", "../../node_modules/@microsoft/signalr/src/HttpClient.ts", "../../node_modules/@microsoft/signalr/src/ILogger.ts", "../../node_modules/@microsoft/signalr/src/Loggers.ts", "../../node_modules/@microsoft/signalr/src/Utils.ts", "../../node_modules/@microsoft/signalr/src/FetchHttpClient.ts", "../../node_modules/@microsoft/signalr/src/XhrHttpClient.ts", "../../node_modules/@microsoft/signalr/src/DefaultHttpClient.ts", "../../node_modules/@microsoft/signalr/src/TextMessageFormat.ts", "../../node_modules/@microsoft/signalr/src/HandshakeProtocol.ts", "../../node_modules/@microsoft/signalr/src/IHubProtocol.ts", "../../node_modules/@microsoft/signalr/src/Subject.ts", "../../node_modules/@microsoft/signalr/src/HubConnection.ts", "../../node_modules/@microsoft/signalr/src/DefaultReconnectPolicy.ts", "../../node_modules/@microsoft/signalr/src/HeaderNames.ts", "../../node_modules/@microsoft/signalr/src/ITransport.ts", "../../node_modules/@microsoft/signalr/src/AbortController.ts", "../../node_modules/@microsoft/signalr/src/LongPollingTransport.ts", "../../node_modules/@microsoft/signalr/src/ServerSentEventsTransport.ts", "../../node_modules/@microsoft/signalr/src/WebSocketTransport.ts", "../../node_modules/@microsoft/signalr/src/HttpConnection.ts", "../../node_modules/@microsoft/signalr/src/JsonHubProtocol.ts", "../../node_modules/@microsoft/signalr/src/HubConnectionBuilder.ts", "../../node_modules/@microsoft/signalr/src/index.ts", "../../src/index.ts", "../../node_modules/zod/lib/index.mjs", "../../src/mock/fakeGameEndResults.ts", "../../src/mock/fakeGameSettings.ts", "../../src/mock/fakeMapOptions.ts", "../../src/mock/fakeRoundInfo.ts", "../../src/mock/fakeRoundResults.ts", "../../src/mock/MockConnectionBuilder.ts"],
  "sourcesContent": ["// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\n\r\nimport { HttpTransportType } from \"./ITransport\";\r\n\r\n/** Error thrown when an HTTP request fails. */\r\nexport class HttpError extends Error {\r\n    // @ts-ignore: Intentionally unused.\r\n    // eslint-disable-next-line @typescript-eslint/naming-convention\r\n    private __proto__: Error;\r\n\r\n    /** The HTTP status code represented by this error. */\r\n    public statusCode: number;\r\n\r\n    /** Constructs a new instance of {@link @microsoft/signalr.HttpError}.\r\n     *\r\n     * @param {string} errorMessage A descriptive error message.\r\n     * @param {number} statusCode The HTTP status code represented by this error.\r\n     */\r\n    constructor(errorMessage: string, statusCode: number) {\r\n        const trueProto = new.target.prototype;\r\n        super(`${errorMessage}: Status code '${statusCode}'`);\r\n        this.statusCode = statusCode;\r\n\r\n        // Workaround issue in Typescript compiler\r\n        // https://github.com/Microsoft/TypeScript/issues/13965#issuecomment-278570200\r\n        this.__proto__ = trueProto;\r\n    }\r\n}\r\n\r\n/** Error thrown when a timeout elapses. */\r\nexport class TimeoutError extends Error {\r\n    // @ts-ignore: Intentionally unused.\r\n    // eslint-disable-next-line @typescript-eslint/naming-convention\r\n    private __proto__: Error;\r\n\r\n    /** Constructs a new instance of {@link @microsoft/signalr.TimeoutError}.\r\n     *\r\n     * @param {string} errorMessage A descriptive error message.\r\n     */\r\n    constructor(errorMessage: string = \"A timeout occurred.\") {\r\n        const trueProto = new.target.prototype;\r\n        super(errorMessage);\r\n\r\n        // Workaround issue in Typescript compiler\r\n        // https://github.com/Microsoft/TypeScript/issues/13965#issuecomment-278570200\r\n        this.__proto__ = trueProto;\r\n    }\r\n}\r\n\r\n/** Error thrown when an action is aborted. */\r\nexport class AbortError extends Error {\r\n    // @ts-ignore: Intentionally unused.\r\n    // eslint-disable-next-line @typescript-eslint/naming-convention\r\n    private __proto__: Error;\r\n\r\n    /** Constructs a new instance of {@link AbortError}.\r\n     *\r\n     * @param {string} errorMessage A descriptive error message.\r\n     */\r\n    constructor(errorMessage: string = \"An abort occurred.\") {\r\n        const trueProto = new.target.prototype;\r\n        super(errorMessage);\r\n\r\n        // Workaround issue in Typescript compiler\r\n        // https://github.com/Microsoft/TypeScript/issues/13965#issuecomment-278570200\r\n        this.__proto__ = trueProto;\r\n    }\r\n}\r\n\r\n/** Error thrown when the selected transport is unsupported by the browser. */\r\n/** @private */\r\nexport class UnsupportedTransportError extends Error {\r\n    // @ts-ignore: Intentionally unused.\r\n    // eslint-disable-next-line @typescript-eslint/naming-convention\r\n    private __proto__: Error;\r\n\r\n    /** The {@link @microsoft/signalr.HttpTransportType} this error occured on. */\r\n    public transport: HttpTransportType;\r\n\r\n    /** The type name of this error. */\r\n    public errorType: string;\r\n\r\n    /** Constructs a new instance of {@link @microsoft/signalr.UnsupportedTransportError}.\r\n     *\r\n     * @param {string} message A descriptive error message.\r\n     * @param {HttpTransportType} transport The {@link @microsoft/signalr.HttpTransportType} this error occured on.\r\n     */\r\n    constructor(message: string, transport: HttpTransportType) {\r\n        const trueProto = new.target.prototype;\r\n        super(message);\r\n        this.transport = transport;\r\n        this.errorType = 'UnsupportedTransportError';\r\n\r\n        // Workaround issue in Typescript compiler\r\n        // https://github.com/Microsoft/TypeScript/issues/13965#issuecomment-278570200\r\n        this.__proto__ = trueProto;\r\n    }\r\n}\r\n\r\n/** Error thrown when the selected transport is disabled by the browser. */\r\n/** @private */\r\nexport class DisabledTransportError extends Error {\r\n    // @ts-ignore: Intentionally unused.\r\n    // eslint-disable-next-line @typescript-eslint/naming-convention\r\n    private __proto__: Error;\r\n\r\n    /** The {@link @microsoft/signalr.HttpTransportType} this error occured on. */\r\n    public transport: HttpTransportType;\r\n\r\n    /** The type name of this error. */\r\n    public errorType: string;\r\n\r\n    /** Constructs a new instance of {@link @microsoft/signalr.DisabledTransportError}.\r\n     *\r\n     * @param {string} message A descriptive error message.\r\n     * @param {HttpTransportType} transport The {@link @microsoft/signalr.HttpTransportType} this error occured on.\r\n     */\r\n    constructor(message: string, transport: HttpTransportType) {\r\n        const trueProto = new.target.prototype;\r\n        super(message);\r\n        this.transport = transport;\r\n        this.errorType = 'DisabledTransportError';\r\n\r\n        // Workaround issue in Typescript compiler\r\n        // https://github.com/Microsoft/TypeScript/issues/13965#issuecomment-278570200\r\n        this.__proto__ = trueProto;\r\n    }\r\n}\r\n\r\n/** Error thrown when the selected transport cannot be started. */\r\n/** @private */\r\nexport class FailedToStartTransportError extends Error {\r\n    // @ts-ignore: Intentionally unused.\r\n    // eslint-disable-next-line @typescript-eslint/naming-convention\r\n    private __proto__: Error;\r\n\r\n    /** The {@link @microsoft/signalr.HttpTransportType} this error occured on. */\r\n    public transport: HttpTransportType;\r\n\r\n    /** The type name of this error. */\r\n    public errorType: string;\r\n\r\n    /** Constructs a new instance of {@link @microsoft/signalr.FailedToStartTransportError}.\r\n     *\r\n     * @param {string} message A descriptive error message.\r\n     * @param {HttpTransportType} transport The {@link @microsoft/signalr.HttpTransportType} this error occured on.\r\n     */\r\n    constructor(message: string, transport: HttpTransportType) {\r\n        const trueProto = new.target.prototype;\r\n        super(message);\r\n        this.transport = transport;\r\n        this.errorType = 'FailedToStartTransportError';\r\n\r\n        // Workaround issue in Typescript compiler\r\n        // https://github.com/Microsoft/TypeScript/issues/13965#issuecomment-278570200\r\n        this.__proto__ = trueProto;\r\n    }\r\n}\r\n\r\n/** Error thrown when the negotiation with the server failed to complete. */\r\n/** @private */\r\nexport class FailedToNegotiateWithServerError extends Error {\r\n    // @ts-ignore: Intentionally unused.\r\n    // eslint-disable-next-line @typescript-eslint/naming-convention\r\n    private __proto__: Error;\r\n\r\n    /** The type name of this error. */\r\n    public errorType: string;\r\n\r\n    /** Constructs a new instance of {@link @microsoft/signalr.FailedToNegotiateWithServerError}.\r\n     *\r\n     * @param {string} message A descriptive error message.\r\n     */\r\n    constructor(message: string) {\r\n        const trueProto = new.target.prototype;\r\n        super(message);\r\n        this.errorType = 'FailedToNegotiateWithServerError';\r\n\r\n        // Workaround issue in Typescript compiler\r\n        // https://github.com/Microsoft/TypeScript/issues/13965#issuecomment-278570200\r\n        this.__proto__ = trueProto;\r\n    }\r\n}\r\n\r\n/** Error thrown when multiple errors have occured. */\r\n/** @private */\r\nexport class AggregateErrors extends Error {\r\n    // @ts-ignore: Intentionally unused.\r\n    // eslint-disable-next-line @typescript-eslint/naming-convention\r\n    private __proto__: Error;\r\n\r\n    /** The collection of errors this error is aggregating. */\r\n    public innerErrors: Error[];\r\n\r\n    /** Constructs a new instance of {@link @microsoft/signalr.AggregateErrors}.\r\n     *\r\n     * @param {string} message A descriptive error message.\r\n     * @param {Error[]} innerErrors The collection of errors this error is aggregating.\r\n     */\r\n    constructor(message: string, innerErrors: Error[]) {\r\n        const trueProto = new.target.prototype;\r\n        super(message);\r\n\r\n        this.innerErrors = innerErrors;\r\n\r\n        // Workaround issue in Typescript compiler\r\n        // https://github.com/Microsoft/TypeScript/issues/13965#issuecomment-278570200\r\n        this.__proto__ = trueProto;\r\n    }\r\n}\r\n", "// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\n\r\nimport { AbortSignal } from \"./AbortController\";\r\nimport { MessageHeaders } from \"./IHubProtocol\";\r\n\r\n/** Represents an HTTP request. */\r\nexport interface HttpRequest {\r\n    /** The HTTP method to use for the request. */\r\n    method?: string;\r\n\r\n    /** The URL for the request. */\r\n    url?: string;\r\n\r\n    /** The body content for the request. May be a string or an ArrayBuffer (for binary data). */\r\n    content?: string | ArrayBuffer;\r\n\r\n    /** An object describing headers to apply to the request. */\r\n    headers?: MessageHeaders;\r\n\r\n    /** The XMLHttpRequestResponseType to apply to the request. */\r\n    responseType?: XMLHttpRequestResponseType;\r\n\r\n    /** An AbortSignal that can be monitored for cancellation. */\r\n    abortSignal?: AbortSignal;\r\n\r\n    /** The time to wait for the request to complete before throwing a TimeoutError. Measured in milliseconds. */\r\n    timeout?: number;\r\n\r\n    /** This controls whether credentials such as cookies are sent in cross-site requests. */\r\n    withCredentials?: boolean;\r\n}\r\n\r\n/** Represents an HTTP response. */\r\nexport class HttpResponse {\r\n    /** Constructs a new instance of {@link @microsoft/signalr.HttpResponse} with the specified status code.\r\n     *\r\n     * @param {number} statusCode The status code of the response.\r\n     */\r\n    constructor(statusCode: number);\r\n\r\n    /** Constructs a new instance of {@link @microsoft/signalr.HttpResponse} with the specified status code and message.\r\n     *\r\n     * @param {number} statusCode The status code of the response.\r\n     * @param {string} statusText The status message of the response.\r\n     */\r\n    constructor(statusCode: number, statusText: string);\r\n\r\n    /** Constructs a new instance of {@link @microsoft/signalr.HttpResponse} with the specified status code, message and string content.\r\n     *\r\n     * @param {number} statusCode The status code of the response.\r\n     * @param {string} statusText The status message of the response.\r\n     * @param {string} content The content of the response.\r\n     */\r\n    constructor(statusCode: number, statusText: string, content: string);\r\n\r\n    /** Constructs a new instance of {@link @microsoft/signalr.HttpResponse} with the specified status code, message and binary content.\r\n     *\r\n     * @param {number} statusCode The status code of the response.\r\n     * @param {string} statusText The status message of the response.\r\n     * @param {ArrayBuffer} content The content of the response.\r\n     */\r\n    constructor(statusCode: number, statusText: string, content: ArrayBuffer);\r\n\r\n    /** Constructs a new instance of {@link @microsoft/signalr.HttpResponse} with the specified status code, message and binary content.\r\n     *\r\n     * @param {number} statusCode The status code of the response.\r\n     * @param {string} statusText The status message of the response.\r\n     * @param {string | ArrayBuffer} content The content of the response.\r\n     */\r\n    constructor(statusCode: number, statusText: string, content: string | ArrayBuffer);\r\n    constructor(\r\n        public readonly statusCode: number,\r\n        public readonly statusText?: string,\r\n        public readonly content?: string | ArrayBuffer) {\r\n    }\r\n}\r\n\r\n/** Abstraction over an HTTP client.\r\n *\r\n * This class provides an abstraction over an HTTP client so that a different implementation can be provided on different platforms.\r\n */\r\nexport abstract class HttpClient {\r\n    /** Issues an HTTP GET request to the specified URL, returning a Promise that resolves with an {@link @microsoft/signalr.HttpResponse} representing the result.\r\n     *\r\n     * @param {string} url The URL for the request.\r\n     * @returns {Promise<HttpResponse>} A Promise that resolves with an {@link @microsoft/signalr.HttpResponse} describing the response, or rejects with an Error indicating a failure.\r\n     */\r\n    public get(url: string): Promise<HttpResponse>;\r\n\r\n    /** Issues an HTTP GET request to the specified URL, returning a Promise that resolves with an {@link @microsoft/signalr.HttpResponse} representing the result.\r\n     *\r\n     * @param {string} url The URL for the request.\r\n     * @param {HttpRequest} options Additional options to configure the request. The 'url' field in this object will be overridden by the url parameter.\r\n     * @returns {Promise<HttpResponse>} A Promise that resolves with an {@link @microsoft/signalr.HttpResponse} describing the response, or rejects with an Error indicating a failure.\r\n     */\r\n    public get(url: string, options: HttpRequest): Promise<HttpResponse>;\r\n    public get(url: string, options?: HttpRequest): Promise<HttpResponse> {\r\n        return this.send({\r\n            ...options,\r\n            method: \"GET\",\r\n            url,\r\n        });\r\n    }\r\n\r\n    /** Issues an HTTP POST request to the specified URL, returning a Promise that resolves with an {@link @microsoft/signalr.HttpResponse} representing the result.\r\n     *\r\n     * @param {string} url The URL for the request.\r\n     * @returns {Promise<HttpResponse>} A Promise that resolves with an {@link @microsoft/signalr.HttpResponse} describing the response, or rejects with an Error indicating a failure.\r\n     */\r\n    public post(url: string): Promise<HttpResponse>;\r\n\r\n    /** Issues an HTTP POST request to the specified URL, returning a Promise that resolves with an {@link @microsoft/signalr.HttpResponse} representing the result.\r\n     *\r\n     * @param {string} url The URL for the request.\r\n     * @param {HttpRequest} options Additional options to configure the request. The 'url' field in this object will be overridden by the url parameter.\r\n     * @returns {Promise<HttpResponse>} A Promise that resolves with an {@link @microsoft/signalr.HttpResponse} describing the response, or rejects with an Error indicating a failure.\r\n     */\r\n    public post(url: string, options: HttpRequest): Promise<HttpResponse>;\r\n    public post(url: string, options?: HttpRequest): Promise<HttpResponse> {\r\n        return this.send({\r\n            ...options,\r\n            method: \"POST\",\r\n            url,\r\n        });\r\n    }\r\n\r\n    /** Issues an HTTP DELETE request to the specified URL, returning a Promise that resolves with an {@link @microsoft/signalr.HttpResponse} representing the result.\r\n     *\r\n     * @param {string} url The URL for the request.\r\n     * @returns {Promise<HttpResponse>} A Promise that resolves with an {@link @microsoft/signalr.HttpResponse} describing the response, or rejects with an Error indicating a failure.\r\n     */\r\n    public delete(url: string): Promise<HttpResponse>;\r\n\r\n    /** Issues an HTTP DELETE request to the specified URL, returning a Promise that resolves with an {@link @microsoft/signalr.HttpResponse} representing the result.\r\n     *\r\n     * @param {string} url The URL for the request.\r\n     * @param {HttpRequest} options Additional options to configure the request. The 'url' field in this object will be overridden by the url parameter.\r\n     * @returns {Promise<HttpResponse>} A Promise that resolves with an {@link @microsoft/signalr.HttpResponse} describing the response, or rejects with an Error indicating a failure.\r\n     */\r\n    public delete(url: string, options: HttpRequest): Promise<HttpResponse>;\r\n    public delete(url: string, options?: HttpRequest): Promise<HttpResponse> {\r\n        return this.send({\r\n            ...options,\r\n            method: \"DELETE\",\r\n            url,\r\n        });\r\n    }\r\n\r\n    /** Issues an HTTP request to the specified URL, returning a {@link Promise} that resolves with an {@link @microsoft/signalr.HttpResponse} representing the result.\r\n     *\r\n     * @param {HttpRequest} request An {@link @microsoft/signalr.HttpRequest} describing the request to send.\r\n     * @returns {Promise<HttpResponse>} A Promise that resolves with an HttpResponse describing the response, or rejects with an Error indicating a failure.\r\n     */\r\n    public abstract send(request: HttpRequest): Promise<HttpResponse>;\r\n\r\n    /** Gets all cookies that apply to the specified URL.\r\n     *\r\n     * @param url The URL that the cookies are valid for.\r\n     * @returns {string} A string containing all the key-value cookie pairs for the specified URL.\r\n     */\r\n    // @ts-ignore\r\n    public getCookieString(url: string): string {\r\n        return \"\";\r\n    }\r\n}\r\n", "// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\n\r\n// These values are designed to match the ASP.NET Log Levels since that's the pattern we're emulating here.\r\n/** Indicates the severity of a log message.\r\n *\r\n * Log Levels are ordered in increasing severity. So `Debug` is more severe than `Trace`, etc.\r\n */\r\nexport enum LogLevel {\r\n    /** Log level for very low severity diagnostic messages. */\r\n    Trace = 0,\r\n    /** Log level for low severity diagnostic messages. */\r\n    Debug = 1,\r\n    /** Log level for informational diagnostic messages. */\r\n    Information = 2,\r\n    /** Log level for diagnostic messages that indicate a non-fatal problem. */\r\n    Warning = 3,\r\n    /** Log level for diagnostic messages that indicate a failure in the current operation. */\r\n    Error = 4,\r\n    /** Log level for diagnostic messages that indicate a failure that will terminate the entire application. */\r\n    Critical = 5,\r\n    /** The highest possible log level. Used when configuring logging to indicate that no log messages should be emitted. */\r\n    None = 6,\r\n}\r\n\r\n/** An abstraction that provides a sink for diagnostic messages. */\r\nexport interface ILogger {\r\n    /** Called by the framework to emit a diagnostic message.\r\n     *\r\n     * @param {LogLevel} logLevel The severity level of the message.\r\n     * @param {string} message The message.\r\n     */\r\n    log(logLevel: LogLevel, message: string): void;\r\n}\r\n", "// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\n\r\nimport { ILogger, LogLevel } from \"./ILogger\";\r\n\r\n/** A logger that does nothing when log messages are sent to it. */\r\nexport class NullLogger implements ILogger {\r\n    /** The singleton instance of the {@link @microsoft/signalr.NullLogger}. */\r\n    public static instance: ILogger = new NullLogger();\r\n\r\n    private constructor() {}\r\n\r\n    /** @inheritDoc */\r\n    // eslint-disable-next-line\r\n    public log(_logLevel: LogLevel, _message: string): void {\r\n    }\r\n}\r\n", "// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\n\r\nimport { HttpClient } from \"./HttpClient\";\r\nimport { ILogger, LogLevel } from \"./ILogger\";\r\nimport { NullLogger } from \"./Loggers\";\r\nimport { IStreamSubscriber, ISubscription } from \"./Stream\";\r\nimport { Subject } from \"./Subject\";\r\nimport { IHttpConnectionOptions } from \"./IHttpConnectionOptions\";\r\n\r\n// Version token that will be replaced by the prepack command\r\n/** The version of the SignalR client. */\r\n\r\nexport const VERSION: string = \"0.0.0-DEV_BUILD\";\r\n/** @private */\r\nexport class Arg {\r\n    public static isRequired(val: any, name: string): void {\r\n        if (val === null || val === undefined) {\r\n            throw new Error(`The '${name}' argument is required.`);\r\n        }\r\n    }\r\n    public static isNotEmpty(val: string, name: string): void {\r\n        if (!val || val.match(/^\\s*$/)) {\r\n            throw new Error(`The '${name}' argument should not be empty.`);\r\n        }\r\n    }\r\n\r\n    public static isIn(val: any, values: any, name: string): void {\r\n        // TypeScript enums have keys for **both** the name and the value of each enum member on the type itself.\r\n        if (!(val in values)) {\r\n            throw new Error(`Unknown ${name} value: ${val}.`);\r\n        }\r\n    }\r\n}\r\n\r\n/** @private */\r\nexport class Platform {\r\n    // react-native has a window but no document so we should check both\r\n    public static get isBrowser(): boolean {\r\n        return typeof window === \"object\" && typeof window.document === \"object\";\r\n    }\r\n\r\n    // WebWorkers don't have a window object so the isBrowser check would fail\r\n    public static get isWebWorker(): boolean {\r\n        return typeof self === \"object\" && \"importScripts\" in self;\r\n    }\r\n\r\n    // react-native has a window but no document\r\n    static get isReactNative(): boolean {\r\n        return typeof window === \"object\" && typeof window.document === \"undefined\";\r\n    }\r\n\r\n    // Node apps shouldn't have a window object, but WebWorkers don't either\r\n    // so we need to check for both WebWorker and window\r\n    public static get isNode(): boolean {\r\n        return !this.isBrowser && !this.isWebWorker && !this.isReactNative;\r\n    }\r\n}\r\n\r\n/** @private */\r\nexport function getDataDetail(data: any, includeContent: boolean): string {\r\n    let detail = \"\";\r\n    if (isArrayBuffer(data)) {\r\n        detail = `Binary data of length ${data.byteLength}`;\r\n        if (includeContent) {\r\n            detail += `. Content: '${formatArrayBuffer(data)}'`;\r\n        }\r\n    } else if (typeof data === \"string\") {\r\n        detail = `String data of length ${data.length}`;\r\n        if (includeContent) {\r\n            detail += `. Content: '${data}'`;\r\n        }\r\n    }\r\n    return detail;\r\n}\r\n\r\n/** @private */\r\nexport function formatArrayBuffer(data: ArrayBuffer): string {\r\n    const view = new Uint8Array(data);\r\n\r\n    // Uint8Array.map only supports returning another Uint8Array?\r\n    let str = \"\";\r\n    view.forEach((num) => {\r\n        const pad = num < 16 ? \"0\" : \"\";\r\n        str += `0x${pad}${num.toString(16)} `;\r\n    });\r\n\r\n    // Trim of trailing space.\r\n    return str.substr(0, str.length - 1);\r\n}\r\n\r\n// Also in signalr-protocol-msgpack/Utils.ts\r\n/** @private */\r\nexport function isArrayBuffer(val: any): val is ArrayBuffer {\r\n    return val && typeof ArrayBuffer !== \"undefined\" &&\r\n        (val instanceof ArrayBuffer ||\r\n            // Sometimes we get an ArrayBuffer that doesn't satisfy instanceof\r\n            (val.constructor && val.constructor.name === \"ArrayBuffer\"));\r\n}\r\n\r\n/** @private */\r\nexport async function sendMessage(logger: ILogger, transportName: string, httpClient: HttpClient, url: string, accessTokenFactory: (() => string | Promise<string>) | undefined,\r\n                                  content: string | ArrayBuffer, options: IHttpConnectionOptions): Promise<void> {\r\n    let headers: {[k: string]: string} = {};\r\n    if (accessTokenFactory) {\r\n        const token = await accessTokenFactory();\r\n        if (token) {\r\n            headers = {\r\n                [\"Authorization\"]: `Bearer ${token}`,\r\n            };\r\n        }\r\n    }\r\n\r\n    const [name, value] = getUserAgentHeader();\r\n    headers[name] = value;\r\n\r\n    logger.log(LogLevel.Trace, `(${transportName} transport) sending data. ${getDataDetail(content, options.logMessageContent!)}.`);\r\n\r\n    const responseType = isArrayBuffer(content) ? \"arraybuffer\" : \"text\";\r\n    const response = await httpClient.post(url, {\r\n        content,\r\n        headers: { ...headers, ...options.headers},\r\n        responseType,\r\n        timeout: options.timeout,\r\n        withCredentials: options.withCredentials,\r\n    });\r\n\r\n    logger.log(LogLevel.Trace, `(${transportName} transport) request complete. Response status: ${response.statusCode}.`);\r\n}\r\n\r\n/** @private */\r\nexport function createLogger(logger?: ILogger | LogLevel): ILogger {\r\n    if (logger === undefined) {\r\n        return new ConsoleLogger(LogLevel.Information);\r\n    }\r\n\r\n    if (logger === null) {\r\n        return NullLogger.instance;\r\n    }\r\n\r\n    if ((logger as ILogger).log !== undefined) {\r\n        return logger as ILogger;\r\n    }\r\n\r\n    return new ConsoleLogger(logger as LogLevel);\r\n}\r\n\r\n/** @private */\r\nexport class SubjectSubscription<T> implements ISubscription<T> {\r\n    private _subject: Subject<T>;\r\n    private _observer: IStreamSubscriber<T>;\r\n\r\n    constructor(subject: Subject<T>, observer: IStreamSubscriber<T>) {\r\n        this._subject = subject;\r\n        this._observer = observer;\r\n    }\r\n\r\n    public dispose(): void {\r\n        const index: number = this._subject.observers.indexOf(this._observer);\r\n        if (index > -1) {\r\n            this._subject.observers.splice(index, 1);\r\n        }\r\n\r\n        if (this._subject.observers.length === 0 && this._subject.cancelCallback) {\r\n            this._subject.cancelCallback().catch((_) => { });\r\n        }\r\n    }\r\n}\r\n\r\n/** @private */\r\nexport class ConsoleLogger implements ILogger {\r\n    private readonly _minLevel: LogLevel;\r\n\r\n    // Public for testing purposes.\r\n    public out: {\r\n        error(message: any): void,\r\n        warn(message: any): void,\r\n        info(message: any): void,\r\n        log(message: any): void,\r\n    };\r\n\r\n    constructor(minimumLogLevel: LogLevel) {\r\n        this._minLevel = minimumLogLevel;\r\n        this.out = console;\r\n    }\r\n\r\n    public log(logLevel: LogLevel, message: string): void {\r\n        if (logLevel >= this._minLevel) {\r\n            const msg = `[${new Date().toISOString()}] ${LogLevel[logLevel]}: ${message}`;\r\n            switch (logLevel) {\r\n                case LogLevel.Critical:\r\n                case LogLevel.Error:\r\n                    this.out.error(msg);\r\n                    break;\r\n                case LogLevel.Warning:\r\n                    this.out.warn(msg);\r\n                    break;\r\n                case LogLevel.Information:\r\n                    this.out.info(msg);\r\n                    break;\r\n                default:\r\n                    // console.debug only goes to attached debuggers in Node, so we use console.log for Trace and Debug\r\n                    this.out.log(msg);\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n/** @private */\r\nexport function getUserAgentHeader(): [string, string] {\r\n    let userAgentHeaderName = \"X-SignalR-User-Agent\";\r\n    if (Platform.isNode) {\r\n        userAgentHeaderName = \"User-Agent\";\r\n    }\r\n    return [ userAgentHeaderName, constructUserAgent(VERSION, getOsName(), getRuntime(), getRuntimeVersion()) ];\r\n}\r\n\r\n/** @private */\r\nexport function constructUserAgent(version: string, os: string, runtime: string, runtimeVersion: string | undefined): string {\r\n    // Microsoft SignalR/[Version] ([Detailed Version]; [Operating System]; [Runtime]; [Runtime Version])\r\n    let userAgent: string = \"Microsoft SignalR/\";\r\n\r\n    const majorAndMinor = version.split(\".\");\r\n    userAgent += `${majorAndMinor[0]}.${majorAndMinor[1]}`;\r\n    userAgent += ` (${version}; `;\r\n\r\n    if (os && os !== \"\") {\r\n        userAgent += `${os}; `;\r\n    } else {\r\n        userAgent += \"Unknown OS; \";\r\n    }\r\n\r\n    userAgent += `${runtime}`;\r\n\r\n    if (runtimeVersion) {\r\n        userAgent += `; ${runtimeVersion}`;\r\n    } else {\r\n        userAgent += \"; Unknown Runtime Version\";\r\n    }\r\n\r\n    userAgent += \")\";\r\n    return userAgent;\r\n}\r\n\r\n// eslint-disable-next-line spaced-comment\r\n/*#__PURE__*/ function getOsName(): string {\r\n    if (Platform.isNode) {\r\n        switch (process.platform) {\r\n            case \"win32\":\r\n                return \"Windows NT\";\r\n            case \"darwin\":\r\n                return \"macOS\";\r\n            case \"linux\":\r\n                return \"Linux\";\r\n            default:\r\n                return process.platform;\r\n        }\r\n    } else {\r\n        return \"\";\r\n    }\r\n}\r\n\r\n// eslint-disable-next-line spaced-comment\r\n/*#__PURE__*/ function getRuntimeVersion(): string | undefined {\r\n    if (Platform.isNode) {\r\n        return process.versions.node;\r\n    }\r\n    return undefined;\r\n}\r\n\r\nfunction getRuntime(): string {\r\n    if (Platform.isNode) {\r\n        return \"NodeJS\";\r\n    } else {\r\n        return \"Browser\";\r\n    }\r\n}\r\n\r\n/** @private */\r\nexport function getErrorString(e: any): string {\r\n    if (e.stack) {\r\n        return e.stack;\r\n    } else if (e.message) {\r\n        return e.message;\r\n    }\r\n    return `${e}`;\r\n}\r\n\r\n/** @private */\r\nexport function getGlobalThis(): unknown {\r\n    // globalThis is semi-new and not available in Node until v12\r\n    if (typeof globalThis !== \"undefined\") {\r\n        return globalThis;\r\n    }\r\n    if (typeof self !== \"undefined\") {\r\n        return self;\r\n    }\r\n    if (typeof window !== \"undefined\") {\r\n        return window;\r\n    }\r\n    if (typeof global !== \"undefined\") {\r\n        return global;\r\n    }\r\n    throw new Error(\"could not find global\");\r\n}", "// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\n\r\n// @ts-ignore: This will be removed from built files and is here to make the types available during dev work\r\nimport { CookieJar } from \"@types/tough-cookie\";\r\n\r\nimport { AbortError, HttpError, TimeoutError } from \"./Errors\";\r\nimport { HttpClient, HttpRequest, HttpResponse } from \"./HttpClient\";\r\nimport { ILogger, LogLevel } from \"./ILogger\";\r\nimport { Platform, getGlobalThis } from \"./Utils\";\r\n\r\nexport class FetchHttpClient extends HttpClient {\r\n    private readonly _abortControllerType: { prototype: AbortController, new(): AbortController };\r\n    private readonly _fetchType: (input: RequestInfo, init?: RequestInit) => Promise<Response>;\r\n    private readonly _jar?: CookieJar;\r\n\r\n    private readonly _logger: ILogger;\r\n\r\n    public constructor(logger: ILogger) {\r\n        super();\r\n        this._logger = logger;\r\n\r\n        if (typeof fetch === \"undefined\") {\r\n            // In order to ignore the dynamic require in webpack builds we need to do this magic\r\n            // @ts-ignore: TS doesn't know about these names\r\n            const requireFunc = typeof __webpack_require__ === \"function\" ? __non_webpack_require__ : require;\r\n\r\n            // Cookies aren't automatically handled in Node so we need to add a CookieJar to preserve cookies across requests\r\n            this._jar = new (requireFunc(\"tough-cookie\")).CookieJar();\r\n            this._fetchType = requireFunc(\"node-fetch\");\r\n\r\n            // node-fetch doesn't have a nice API for getting and setting cookies\r\n            // fetch-cookie will wrap a fetch implementation with a default CookieJar or a provided one\r\n            this._fetchType = requireFunc(\"fetch-cookie\")(this._fetchType, this._jar);\r\n        } else {\r\n            this._fetchType = fetch.bind(getGlobalThis());\r\n        }\r\n        if (typeof AbortController === \"undefined\") {\r\n            // In order to ignore the dynamic require in webpack builds we need to do this magic\r\n            // @ts-ignore: TS doesn't know about these names\r\n            const requireFunc = typeof __webpack_require__ === \"function\" ? __non_webpack_require__ : require;\r\n\r\n            // Node needs EventListener methods on AbortController which our custom polyfill doesn't provide\r\n            this._abortControllerType = requireFunc(\"abort-controller\");\r\n        } else {\r\n            this._abortControllerType = AbortController;\r\n        }\r\n    }\r\n\r\n    /** @inheritDoc */\r\n    public async send(request: HttpRequest): Promise<HttpResponse> {\r\n        // Check that abort was not signaled before calling send\r\n        if (request.abortSignal && request.abortSignal.aborted) {\r\n            throw new AbortError();\r\n        }\r\n\r\n        if (!request.method) {\r\n            throw new Error(\"No method defined.\");\r\n        }\r\n        if (!request.url) {\r\n            throw new Error(\"No url defined.\");\r\n        }\r\n\r\n        const abortController = new this._abortControllerType();\r\n\r\n        let error: any;\r\n        // Hook our abortSignal into the abort controller\r\n        if (request.abortSignal) {\r\n            request.abortSignal.onabort = () => {\r\n                abortController.abort();\r\n                error = new AbortError();\r\n            };\r\n        }\r\n\r\n        // If a timeout has been passed in, setup a timeout to call abort\r\n        // Type needs to be any to fit window.setTimeout and NodeJS.setTimeout\r\n        let timeoutId: any = null;\r\n        if (request.timeout) {\r\n            const msTimeout = request.timeout!;\r\n            timeoutId = setTimeout(() => {\r\n                abortController.abort();\r\n                this._logger.log(LogLevel.Warning, `Timeout from HTTP request.`);\r\n                error = new TimeoutError();\r\n            }, msTimeout);\r\n        }\r\n\r\n        let response: Response;\r\n        try {\r\n            response = await this._fetchType(request.url!, {\r\n                body: request.content!,\r\n                cache: \"no-cache\",\r\n                credentials: request.withCredentials === true ? \"include\" : \"same-origin\",\r\n                headers: {\r\n                    \"Content-Type\": \"text/plain;charset=UTF-8\",\r\n                    \"X-Requested-With\": \"XMLHttpRequest\",\r\n                    ...request.headers,\r\n                },\r\n                method: request.method!,\r\n                mode: \"cors\",\r\n                redirect: \"follow\",\r\n                signal: abortController.signal,\r\n            });\r\n        } catch (e) {\r\n            if (error) {\r\n                throw error;\r\n            }\r\n            this._logger.log(\r\n                LogLevel.Warning,\r\n                `Error from HTTP request. ${e}.`,\r\n            );\r\n            throw e;\r\n        } finally {\r\n            if (timeoutId) {\r\n                clearTimeout(timeoutId);\r\n            }\r\n            if (request.abortSignal) {\r\n                request.abortSignal.onabort = null;\r\n            }\r\n        }\r\n\r\n        if (!response.ok) {\r\n            const errorMessage = await deserializeContent(response, \"text\") as string;\r\n            throw new HttpError(errorMessage || response.statusText, response.status);\r\n        }\r\n\r\n        const content = deserializeContent(response, request.responseType);\r\n        const payload = await content;\r\n\r\n        return new HttpResponse(\r\n            response.status,\r\n            response.statusText,\r\n            payload,\r\n        );\r\n    }\r\n\r\n    public getCookieString(url: string): string {\r\n        let cookies: string = \"\";\r\n        if (Platform.isNode && this._jar) {\r\n            // @ts-ignore: unused variable\r\n            this._jar.getCookies(url, (e, c) => cookies = c.join(\"; \"));\r\n        }\r\n        return cookies;\r\n    }\r\n}\r\n\r\nfunction deserializeContent(response: Response, responseType?: XMLHttpRequestResponseType): Promise<string | ArrayBuffer> {\r\n    let content;\r\n    switch (responseType) {\r\n        case \"arraybuffer\":\r\n            content = response.arrayBuffer();\r\n            break;\r\n        case \"text\":\r\n            content = response.text();\r\n            break;\r\n        case \"blob\":\r\n        case \"document\":\r\n        case \"json\":\r\n            throw new Error(`${responseType} is not supported.`);\r\n        default:\r\n            content = response.text();\r\n            break;\r\n    }\r\n\r\n    return content;\r\n}\r\n", "// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\n\r\nimport { AbortError, HttpError, TimeoutError } from \"./Errors\";\r\nimport { HttpClient, HttpRequest, HttpResponse } from \"./HttpClient\";\r\nimport { ILogger, LogLevel } from \"./ILogger\";\r\n\r\nexport class XhrHttpClient extends HttpClient {\r\n    private readonly _logger: ILogger;\r\n\r\n    public constructor(logger: ILogger) {\r\n        super();\r\n        this._logger = logger;\r\n    }\r\n\r\n    /** @inheritDoc */\r\n    public send(request: HttpRequest): Promise<HttpResponse> {\r\n        // Check that abort was not signaled before calling send\r\n        if (request.abortSignal && request.abortSignal.aborted) {\r\n            return Promise.reject(new AbortError());\r\n        }\r\n\r\n        if (!request.method) {\r\n            return Promise.reject(new Error(\"No method defined.\"));\r\n        }\r\n        if (!request.url) {\r\n            return Promise.reject(new Error(\"No url defined.\"));\r\n        }\r\n\r\n        return new Promise<HttpResponse>((resolve, reject) => {\r\n            const xhr = new XMLHttpRequest();\r\n\r\n            xhr.open(request.method!, request.url!, true);\r\n            xhr.withCredentials = request.withCredentials === undefined ? true : request.withCredentials;\r\n            xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\r\n            // Explicitly setting the Content-Type header for React Native on Android platform.\r\n            xhr.setRequestHeader(\"Content-Type\", \"text/plain;charset=UTF-8\");\r\n\r\n            const headers = request.headers;\r\n            if (headers) {\r\n                Object.keys(headers)\r\n                    .forEach((header) => {\r\n                        xhr.setRequestHeader(header, headers[header]);\r\n                    });\r\n            }\r\n\r\n            if (request.responseType) {\r\n                xhr.responseType = request.responseType;\r\n            }\r\n\r\n            if (request.abortSignal) {\r\n                request.abortSignal.onabort = () => {\r\n                    xhr.abort();\r\n                    reject(new AbortError());\r\n                };\r\n            }\r\n\r\n            if (request.timeout) {\r\n                xhr.timeout = request.timeout;\r\n            }\r\n\r\n            xhr.onload = () => {\r\n                if (request.abortSignal) {\r\n                    request.abortSignal.onabort = null;\r\n                }\r\n\r\n                if (xhr.status >= 200 && xhr.status < 300) {\r\n                    resolve(new HttpResponse(xhr.status, xhr.statusText, xhr.response || xhr.responseText));\r\n                } else {\r\n                    reject(new HttpError(xhr.response || xhr.responseText || xhr.statusText, xhr.status));\r\n                }\r\n            };\r\n\r\n            xhr.onerror = () => {\r\n                this._logger.log(LogLevel.Warning, `Error from HTTP request. ${xhr.status}: ${xhr.statusText}.`);\r\n                reject(new HttpError(xhr.statusText, xhr.status));\r\n            };\r\n\r\n            xhr.ontimeout = () => {\r\n                this._logger.log(LogLevel.Warning, `Timeout from HTTP request.`);\r\n                reject(new TimeoutError());\r\n            };\r\n\r\n            xhr.send(request.content || \"\");\r\n        });\r\n    }\r\n}\r\n", "// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\n\r\nimport { AbortError } from \"./Errors\";\r\nimport { FetchHttpClient } from \"./FetchHttpClient\";\r\nimport { HttpClient, HttpRequest, HttpResponse } from \"./HttpClient\";\r\nimport { ILogger } from \"./ILogger\";\r\nimport { Platform } from \"./Utils\";\r\nimport { XhrHttpClient } from \"./XhrHttpClient\";\r\n\r\n/** Default implementation of {@link @microsoft/signalr.HttpClient}. */\r\nexport class DefaultHttpClient extends HttpClient {\r\n    private readonly _httpClient: HttpClient;\r\n\r\n    /** Creates a new instance of the {@link @microsoft/signalr.DefaultHttpClient}, using the provided {@link @microsoft/signalr.ILogger} to log messages. */\r\n    public constructor(logger: ILogger) {\r\n        super();\r\n\r\n        if (typeof fetch !== \"undefined\" || Platform.isNode) {\r\n            this._httpClient = new FetchHttpClient(logger);\r\n        } else if (typeof XMLHttpRequest !== \"undefined\") {\r\n            this._httpClient = new XhrHttpClient(logger);\r\n        } else {\r\n            throw new Error(\"No usable HttpClient found.\");\r\n        }\r\n    }\r\n\r\n    /** @inheritDoc */\r\n    public send(request: HttpRequest): Promise<HttpResponse> {\r\n        // Check that abort was not signaled before calling send\r\n        if (request.abortSignal && request.abortSignal.aborted) {\r\n            return Promise.reject(new AbortError());\r\n        }\r\n\r\n        if (!request.method) {\r\n            return Promise.reject(new Error(\"No method defined.\"));\r\n        }\r\n        if (!request.url) {\r\n            return Promise.reject(new Error(\"No url defined.\"));\r\n        }\r\n\r\n        return this._httpClient.send(request);\r\n    }\r\n\r\n    public getCookieString(url: string): string {\r\n        return this._httpClient.getCookieString(url);\r\n    }\r\n}\r\n", "// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\n\r\n// Not exported from index\r\n/** @private */\r\nexport class TextMessageFormat {\r\n    public static RecordSeparatorCode = 0x1e;\r\n    public static RecordSeparator = String.fromCharCode(TextMessageFormat.RecordSeparatorCode);\r\n\r\n    public static write(output: string): string {\r\n        return `${output}${TextMessageFormat.RecordSeparator}`;\r\n    }\r\n\r\n    public static parse(input: string): string[] {\r\n        if (input[input.length - 1] !== TextMessageFormat.RecordSeparator) {\r\n            throw new Error(\"Message is incomplete.\");\r\n        }\r\n\r\n        const messages = input.split(TextMessageFormat.RecordSeparator);\r\n        messages.pop();\r\n        return messages;\r\n    }\r\n}\r\n", "// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\n\r\nimport { TextMessageFormat } from \"./TextMessageFormat\";\r\nimport { isArrayBuffer } from \"./Utils\";\r\n\r\n/** @private */\r\nexport interface HandshakeRequestMessage {\r\n    readonly protocol: string;\r\n    readonly version: number;\r\n}\r\n\r\n/** @private */\r\nexport interface HandshakeResponseMessage {\r\n    readonly error: string;\r\n    readonly minorVersion: number;\r\n}\r\n\r\n/** @private */\r\nexport class HandshakeProtocol {\r\n    // Handshake request is always JSON\r\n    public writeHandshakeRequest(handshakeRequest: HandshakeRequestMessage): string {\r\n        return TextMessageFormat.write(JSON.stringify(handshakeRequest));\r\n    }\r\n\r\n    public parseHandshakeResponse(data: any): [any, HandshakeResponseMessage] {\r\n        let messageData: string;\r\n        let remainingData: any;\r\n\r\n        if (isArrayBuffer(data)) {\r\n            // Format is binary but still need to read JSON text from handshake response\r\n            const binaryData = new Uint8Array(data);\r\n            const separatorIndex = binaryData.indexOf(TextMessageFormat.RecordSeparatorCode);\r\n            if (separatorIndex === -1) {\r\n                throw new Error(\"Message is incomplete.\");\r\n            }\r\n\r\n            // content before separator is handshake response\r\n            // optional content after is additional messages\r\n            const responseLength = separatorIndex + 1;\r\n            messageData = String.fromCharCode.apply(null, Array.prototype.slice.call(binaryData.slice(0, responseLength)));\r\n            remainingData = (binaryData.byteLength > responseLength) ? binaryData.slice(responseLength).buffer : null;\r\n        } else {\r\n            const textData: string = data;\r\n            const separatorIndex = textData.indexOf(TextMessageFormat.RecordSeparator);\r\n            if (separatorIndex === -1) {\r\n                throw new Error(\"Message is incomplete.\");\r\n            }\r\n\r\n            // content before separator is handshake response\r\n            // optional content after is additional messages\r\n            const responseLength = separatorIndex + 1;\r\n            messageData = textData.substring(0, responseLength);\r\n            remainingData = (textData.length > responseLength) ? textData.substring(responseLength) : null;\r\n        }\r\n\r\n        // At this point we should have just the single handshake message\r\n        const messages = TextMessageFormat.parse(messageData);\r\n        const response = JSON.parse(messages[0]);\r\n        if (response.type) {\r\n            throw new Error(\"Expected a handshake response from the server.\");\r\n        }\r\n        const responseMessage: HandshakeResponseMessage = response;\r\n\r\n        // multiple messages could have arrived with handshake\r\n        // return additional data to be parsed as usual, or null if all parsed\r\n        return [remainingData, responseMessage];\r\n    }\r\n}\r\n", "// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\n\r\nimport { ILogger } from \"./ILogger\";\r\nimport { TransferFormat } from \"./ITransport\";\r\n\r\n/** Defines the type of a Hub Message. */\r\nexport enum MessageType {\r\n    /** Indicates the message is an Invocation message and implements the {@link @microsoft/signalr.InvocationMessage} interface. */\r\n    Invocation = 1,\r\n    /** Indicates the message is a StreamItem message and implements the {@link @microsoft/signalr.StreamItemMessage} interface. */\r\n    StreamItem = 2,\r\n    /** Indicates the message is a Completion message and implements the {@link @microsoft/signalr.CompletionMessage} interface. */\r\n    Completion = 3,\r\n    /** Indicates the message is a Stream Invocation message and implements the {@link @microsoft/signalr.StreamInvocationMessage} interface. */\r\n    StreamInvocation = 4,\r\n    /** Indicates the message is a Cancel Invocation message and implements the {@link @microsoft/signalr.CancelInvocationMessage} interface. */\r\n    CancelInvocation = 5,\r\n    /** Indicates the message is a Ping message and implements the {@link @microsoft/signalr.PingMessage} interface. */\r\n    Ping = 6,\r\n    /** Indicates the message is a Close message and implements the {@link @microsoft/signalr.CloseMessage} interface. */\r\n    Close = 7,\r\n}\r\n\r\n/** Defines a dictionary of string keys and string values representing headers attached to a Hub message. */\r\nexport interface MessageHeaders {\r\n    /** Gets or sets the header with the specified key. */\r\n    [key: string]: string;\r\n}\r\n\r\n/** Union type of all known Hub messages. */\r\nexport type HubMessage =\r\n    InvocationMessage |\r\n    StreamInvocationMessage |\r\n    StreamItemMessage |\r\n    CompletionMessage |\r\n    CancelInvocationMessage |\r\n    PingMessage |\r\n    CloseMessage;\r\n\r\n/** Defines properties common to all Hub messages. */\r\nexport interface HubMessageBase {\r\n    /** A {@link @microsoft/signalr.MessageType} value indicating the type of this message. */\r\n    readonly type: MessageType;\r\n}\r\n\r\n/** Defines properties common to all Hub messages relating to a specific invocation. */\r\nexport interface HubInvocationMessage extends HubMessageBase {\r\n    /** A {@link @microsoft/signalr.MessageHeaders} dictionary containing headers attached to the message. */\r\n    readonly headers?: MessageHeaders;\r\n    /** The ID of the invocation relating to this message.\r\n     *\r\n     * This is expected to be present for {@link @microsoft/signalr.StreamInvocationMessage} and {@link @microsoft/signalr.CompletionMessage}. It may\r\n     * be 'undefined' for an {@link @microsoft/signalr.InvocationMessage} if the sender does not expect a response.\r\n     */\r\n    readonly invocationId?: string;\r\n}\r\n\r\n/** A hub message representing a non-streaming invocation. */\r\nexport interface InvocationMessage extends HubInvocationMessage {\r\n    /** @inheritDoc */\r\n    readonly type: MessageType.Invocation;\r\n    /** The target method name. */\r\n    readonly target: string;\r\n    /** The target method arguments. */\r\n    readonly arguments: any[];\r\n    /** The target methods stream IDs. */\r\n    readonly streamIds?: string[];\r\n}\r\n\r\n/** A hub message representing a streaming invocation. */\r\nexport interface StreamInvocationMessage extends HubInvocationMessage {\r\n    /** @inheritDoc */\r\n    readonly type: MessageType.StreamInvocation;\r\n\r\n    /** The invocation ID. */\r\n    readonly invocationId: string;\r\n    /** The target method name. */\r\n    readonly target: string;\r\n    /** The target method arguments. */\r\n    readonly arguments: any[];\r\n    /** The target methods stream IDs. */\r\n    readonly streamIds?: string[];\r\n}\r\n\r\n/** A hub message representing a single item produced as part of a result stream. */\r\nexport interface StreamItemMessage extends HubInvocationMessage {\r\n    /** @inheritDoc */\r\n    readonly type: MessageType.StreamItem;\r\n\r\n    /** The invocation ID. */\r\n    readonly invocationId: string;\r\n\r\n    /** The item produced by the server. */\r\n    readonly item?: any;\r\n}\r\n\r\n/** A hub message representing the result of an invocation. */\r\nexport interface CompletionMessage extends HubInvocationMessage {\r\n    /** @inheritDoc */\r\n    readonly type: MessageType.Completion;\r\n    /** The invocation ID. */\r\n    readonly invocationId: string;\r\n    /** The error produced by the invocation, if any.\r\n     *\r\n     * Either {@link @microsoft/signalr.CompletionMessage.error} or {@link @microsoft/signalr.CompletionMessage.result} must be defined, but not both.\r\n     */\r\n    readonly error?: string;\r\n    /** The result produced by the invocation, if any.\r\n     *\r\n     * Either {@link @microsoft/signalr.CompletionMessage.error} or {@link @microsoft/signalr.CompletionMessage.result} must be defined, but not both.\r\n     */\r\n    readonly result?: any;\r\n}\r\n\r\n/** A hub message indicating that the sender is still active. */\r\nexport interface PingMessage extends HubMessageBase {\r\n    /** @inheritDoc */\r\n    readonly type: MessageType.Ping;\r\n}\r\n\r\n/** A hub message indicating that the sender is closing the connection.\r\n *\r\n * If {@link @microsoft/signalr.CloseMessage.error} is defined, the sender is closing the connection due to an error.\r\n */\r\nexport interface CloseMessage extends HubMessageBase {\r\n    /** @inheritDoc */\r\n    readonly type: MessageType.Close;\r\n    /** The error that triggered the close, if any.\r\n     *\r\n     * If this property is undefined, the connection was closed normally and without error.\r\n     */\r\n    readonly error?: string;\r\n\r\n    /** If true, clients with automatic reconnects enabled should attempt to reconnect after receiving the CloseMessage. Otherwise, they should not. */\r\n    readonly allowReconnect?: boolean;\r\n}\r\n\r\n/** A hub message sent to request that a streaming invocation be canceled. */\r\nexport interface CancelInvocationMessage extends HubInvocationMessage {\r\n    /** @inheritDoc */\r\n    readonly type: MessageType.CancelInvocation;\r\n    /** The invocation ID. */\r\n    readonly invocationId: string;\r\n}\r\n\r\n/** A protocol abstraction for communicating with SignalR Hubs.  */\r\nexport interface IHubProtocol {\r\n    /** The name of the protocol. This is used by SignalR to resolve the protocol between the client and server. */\r\n    readonly name: string;\r\n    /** The version of the protocol. */\r\n    readonly version: number;\r\n    /** The {@link @microsoft/signalr.TransferFormat} of the protocol. */\r\n    readonly transferFormat: TransferFormat;\r\n\r\n    /** Creates an array of {@link @microsoft/signalr.HubMessage} objects from the specified serialized representation.\r\n     *\r\n     * If {@link @microsoft/signalr.IHubProtocol.transferFormat} is 'Text', the `input` parameter must be a string, otherwise it must be an ArrayBuffer.\r\n     *\r\n     * @param {string | ArrayBuffer} input A string or ArrayBuffer containing the serialized representation.\r\n     * @param {ILogger} logger A logger that will be used to log messages that occur during parsing.\r\n     */\r\n    parseMessages(input: string | ArrayBuffer, logger: ILogger): HubMessage[];\r\n\r\n    /** Writes the specified {@link @microsoft/signalr.HubMessage} to a string or ArrayBuffer and returns it.\r\n     *\r\n     * If {@link @microsoft/signalr.IHubProtocol.transferFormat} is 'Text', the result of this method will be a string, otherwise it will be an ArrayBuffer.\r\n     *\r\n     * @param {HubMessage} message The message to write.\r\n     * @returns {string | ArrayBuffer} A string or ArrayBuffer containing the serialized representation of the message.\r\n     */\r\n    writeMessage(message: HubMessage): string | ArrayBuffer;\r\n}\r\n", "// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\n\r\nimport { IStreamResult, IStreamSubscriber, ISubscription } from \"./Stream\";\r\nimport { SubjectSubscription } from \"./Utils\";\r\n\r\n/** Stream implementation to stream items to the server. */\r\nexport class Subject<T> implements IStreamResult<T> {\r\n    /** @internal */\r\n    public observers: IStreamSubscriber<T>[];\r\n\r\n    /** @internal */\r\n    public cancelCallback?: () => Promise<void>;\r\n\r\n    constructor() {\r\n        this.observers = [];\r\n    }\r\n\r\n    public next(item: T): void {\r\n        for (const observer of this.observers) {\r\n            observer.next(item);\r\n        }\r\n    }\r\n\r\n    public error(err: any): void {\r\n        for (const observer of this.observers) {\r\n            if (observer.error) {\r\n                observer.error(err);\r\n            }\r\n        }\r\n    }\r\n\r\n    public complete(): void {\r\n        for (const observer of this.observers) {\r\n            if (observer.complete) {\r\n                observer.complete();\r\n            }\r\n        }\r\n    }\r\n\r\n    public subscribe(observer: IStreamSubscriber<T>): ISubscription<T> {\r\n        this.observers.push(observer);\r\n        return new SubjectSubscription(this, observer);\r\n    }\r\n}\r\n", "// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\n\r\nimport { HandshakeProtocol, HandshakeRequestMessage, HandshakeResponseMessage } from \"./HandshakeProtocol\";\r\nimport { IConnection } from \"./IConnection\";\r\nimport { CancelInvocationMessage, CompletionMessage, IHubProtocol, InvocationMessage, MessageType, StreamInvocationMessage, StreamItemMessage } from \"./IHubProtocol\";\r\nimport { ILogger, LogLevel } from \"./ILogger\";\r\nimport { IRetryPolicy } from \"./IRetryPolicy\";\r\nimport { IStreamResult } from \"./Stream\";\r\nimport { Subject } from \"./Subject\";\r\nimport { Arg, getErrorString, Platform } from \"./Utils\";\r\n\r\nconst DEFAULT_TIMEOUT_IN_MS: number = 30 * 1000;\r\nconst DEFAULT_PING_INTERVAL_IN_MS: number = 15 * 1000;\r\n\r\n/** Describes the current state of the {@link HubConnection} to the server. */\r\nexport enum HubConnectionState {\r\n    /** The hub connection is disconnected. */\r\n    Disconnected = \"Disconnected\",\r\n    /** The hub connection is connecting. */\r\n    Connecting = \"Connecting\",\r\n    /** The hub connection is connected. */\r\n    Connected = \"Connected\",\r\n    /** The hub connection is disconnecting. */\r\n    Disconnecting = \"Disconnecting\",\r\n    /** The hub connection is reconnecting. */\r\n    Reconnecting = \"Reconnecting\",\r\n}\r\n\r\n/** Represents a connection to a SignalR Hub. */\r\nexport class HubConnection {\r\n    private readonly _cachedPingMessage: string | ArrayBuffer;\r\n    // Needs to not start with _ for tests\r\n    // eslint-disable-next-line @typescript-eslint/naming-convention\r\n    private readonly connection: IConnection;\r\n    private readonly _logger: ILogger;\r\n    private readonly _reconnectPolicy?: IRetryPolicy;\r\n    private _protocol: IHubProtocol;\r\n    private _handshakeProtocol: HandshakeProtocol;\r\n    private _callbacks: { [invocationId: string]: (invocationEvent: StreamItemMessage | CompletionMessage | null, error?: Error) => void };\r\n    private _methods: { [name: string]: ((...args: any[]) => void)[] };\r\n    private _invocationId: number;\r\n\r\n    private _closedCallbacks: ((error?: Error) => void)[];\r\n    private _reconnectingCallbacks: ((error?: Error) => void)[];\r\n    private _reconnectedCallbacks: ((connectionId?: string) => void)[];\r\n\r\n    private _receivedHandshakeResponse: boolean;\r\n    private _handshakeResolver!: (value?: PromiseLike<{}>) => void;\r\n    private _handshakeRejecter!: (reason?: any) => void;\r\n    private _stopDuringStartError?: Error;\r\n\r\n    private _connectionState: HubConnectionState;\r\n    // connectionStarted is tracked independently from connectionState, so we can check if the\r\n    // connection ever did successfully transition from connecting to connected before disconnecting.\r\n    private _connectionStarted: boolean;\r\n    private _startPromise?: Promise<void>;\r\n    private _stopPromise?: Promise<void>;\r\n    private _nextKeepAlive: number = 0;\r\n\r\n    // The type of these a) doesn't matter and b) varies when building in browser and node contexts\r\n    // Since we're building the WebPack bundle directly from the TypeScript, this matters (previously\r\n    // we built the bundle from the compiled JavaScript).\r\n    private _reconnectDelayHandle?: any;\r\n    private _timeoutHandle?: any;\r\n    private _pingServerHandle?: any;\r\n\r\n    private _freezeEventListener = () =>\r\n    {\r\n        this._logger.log(LogLevel.Warning, \"The page is being frozen, this will likely lead to the connection being closed and messages being lost. For more information see the docs at https://docs.microsoft.com/aspnet/core/signalr/javascript-client#bsleep\");\r\n    };\r\n\r\n    /** The server timeout in milliseconds.\r\n     *\r\n     * If this timeout elapses without receiving any messages from the server, the connection will be terminated with an error.\r\n     * The default timeout value is 30,000 milliseconds (30 seconds).\r\n     */\r\n    public serverTimeoutInMilliseconds: number;\r\n\r\n    /** Default interval at which to ping the server.\r\n     *\r\n     * The default value is 15,000 milliseconds (15 seconds).\r\n     * Allows the server to detect hard disconnects (like when a client unplugs their computer).\r\n     * The ping will happen at most as often as the server pings.\r\n     * If the server pings every 5 seconds, a value lower than 5 will ping every 5 seconds.\r\n     */\r\n    public keepAliveIntervalInMilliseconds: number;\r\n\r\n    /** @internal */\r\n    // Using a public static factory method means we can have a private constructor and an _internal_\r\n    // create method that can be used by HubConnectionBuilder. An \"internal\" constructor would just\r\n    // be stripped away and the '.d.ts' file would have no constructor, which is interpreted as a\r\n    // public parameter-less constructor.\r\n    public static create(connection: IConnection, logger: ILogger, protocol: IHubProtocol, reconnectPolicy?: IRetryPolicy): HubConnection {\r\n        return new HubConnection(connection, logger, protocol, reconnectPolicy);\r\n    }\r\n\r\n    private constructor(connection: IConnection, logger: ILogger, protocol: IHubProtocol, reconnectPolicy?: IRetryPolicy) {\r\n        Arg.isRequired(connection, \"connection\");\r\n        Arg.isRequired(logger, \"logger\");\r\n        Arg.isRequired(protocol, \"protocol\");\r\n\r\n        this.serverTimeoutInMilliseconds = DEFAULT_TIMEOUT_IN_MS;\r\n        this.keepAliveIntervalInMilliseconds = DEFAULT_PING_INTERVAL_IN_MS;\r\n\r\n        this._logger = logger;\r\n        this._protocol = protocol;\r\n        this.connection = connection;\r\n        this._reconnectPolicy = reconnectPolicy;\r\n        this._handshakeProtocol = new HandshakeProtocol();\r\n\r\n        this.connection.onreceive = (data: any) => this._processIncomingData(data);\r\n        this.connection.onclose = (error?: Error) => this._connectionClosed(error);\r\n\r\n        this._callbacks = {};\r\n        this._methods = {};\r\n        this._closedCallbacks = [];\r\n        this._reconnectingCallbacks = [];\r\n        this._reconnectedCallbacks = [];\r\n        this._invocationId = 0;\r\n        this._receivedHandshakeResponse = false;\r\n        this._connectionState = HubConnectionState.Disconnected;\r\n        this._connectionStarted = false;\r\n\r\n        this._cachedPingMessage = this._protocol.writeMessage({ type: MessageType.Ping });\r\n    }\r\n\r\n    /** Indicates the state of the {@link HubConnection} to the server. */\r\n    get state(): HubConnectionState {\r\n        return this._connectionState;\r\n    }\r\n\r\n    /** Represents the connection id of the {@link HubConnection} on the server. The connection id will be null when the connection is either\r\n     *  in the disconnected state or if the negotiation step was skipped.\r\n     */\r\n    get connectionId(): string | null {\r\n        return this.connection ? (this.connection.connectionId || null) : null;\r\n    }\r\n\r\n    /** Indicates the url of the {@link HubConnection} to the server. */\r\n    get baseUrl(): string {\r\n        return this.connection.baseUrl || \"\";\r\n    }\r\n\r\n    /**\r\n     * Sets a new url for the HubConnection. Note that the url can only be changed when the connection is in either the Disconnected or\r\n     * Reconnecting states.\r\n     * @param {string} url The url to connect to.\r\n     */\r\n    set baseUrl(url: string) {\r\n        if (this._connectionState !== HubConnectionState.Disconnected && this._connectionState !== HubConnectionState.Reconnecting) {\r\n            throw new Error(\"The HubConnection must be in the Disconnected or Reconnecting state to change the url.\");\r\n        }\r\n\r\n        if (!url) {\r\n            throw new Error(\"The HubConnection url must be a valid url.\");\r\n        }\r\n\r\n        this.connection.baseUrl = url;\r\n    }\r\n\r\n    /** Starts the connection.\r\n     *\r\n     * @returns {Promise<void>} A Promise that resolves when the connection has been successfully established, or rejects with an error.\r\n     */\r\n    public start(): Promise<void> {\r\n        this._startPromise = this._startWithStateTransitions();\r\n        return this._startPromise;\r\n    }\r\n\r\n    private async _startWithStateTransitions(): Promise<void> {\r\n        if (this._connectionState !== HubConnectionState.Disconnected) {\r\n            return Promise.reject(new Error(\"Cannot start a HubConnection that is not in the 'Disconnected' state.\"));\r\n        }\r\n\r\n        this._connectionState = HubConnectionState.Connecting;\r\n        this._logger.log(LogLevel.Debug, \"Starting HubConnection.\");\r\n\r\n        try {\r\n            await this._startInternal();\r\n\r\n            if (Platform.isBrowser) {\r\n                // Log when the browser freezes the tab so users know why their connection unexpectedly stopped working\r\n                window.document.addEventListener(\"freeze\", this._freezeEventListener);\r\n            }\r\n\r\n            this._connectionState = HubConnectionState.Connected;\r\n            this._connectionStarted = true;\r\n            this._logger.log(LogLevel.Debug, \"HubConnection connected successfully.\");\r\n        } catch (e) {\r\n            this._connectionState = HubConnectionState.Disconnected;\r\n            this._logger.log(LogLevel.Debug, `HubConnection failed to start successfully because of error '${e}'.`);\r\n            return Promise.reject(e);\r\n        }\r\n    }\r\n\r\n    private async _startInternal() {\r\n        this._stopDuringStartError = undefined;\r\n        this._receivedHandshakeResponse = false;\r\n        // Set up the promise before any connection is (re)started otherwise it could race with received messages\r\n        const handshakePromise = new Promise((resolve, reject) => {\r\n            this._handshakeResolver = resolve;\r\n            this._handshakeRejecter = reject;\r\n        });\r\n\r\n        await this.connection.start(this._protocol.transferFormat);\r\n\r\n        try {\r\n            const handshakeRequest: HandshakeRequestMessage = {\r\n                protocol: this._protocol.name,\r\n                version: this._protocol.version,\r\n            };\r\n\r\n            this._logger.log(LogLevel.Debug, \"Sending handshake request.\");\r\n\r\n            await this._sendMessage(this._handshakeProtocol.writeHandshakeRequest(handshakeRequest));\r\n\r\n            this._logger.log(LogLevel.Information, `Using HubProtocol '${this._protocol.name}'.`);\r\n\r\n            // defensively cleanup timeout in case we receive a message from the server before we finish start\r\n            this._cleanupTimeout();\r\n            this._resetTimeoutPeriod();\r\n            this._resetKeepAliveInterval();\r\n\r\n            await handshakePromise;\r\n\r\n            // It's important to check the stopDuringStartError instead of just relying on the handshakePromise\r\n            // being rejected on close, because this continuation can run after both the handshake completed successfully\r\n            // and the connection was closed.\r\n            if (this._stopDuringStartError) {\r\n                // It's important to throw instead of returning a rejected promise, because we don't want to allow any state\r\n                // transitions to occur between now and the calling code observing the exceptions. Returning a rejected promise\r\n                // will cause the calling continuation to get scheduled to run later.\r\n                // eslint-disable-next-line @typescript-eslint/no-throw-literal\r\n                throw this._stopDuringStartError;\r\n            }\r\n        } catch (e) {\r\n            this._logger.log(LogLevel.Debug, `Hub handshake failed with error '${e}' during start(). Stopping HubConnection.`);\r\n\r\n            this._cleanupTimeout();\r\n            this._cleanupPingTimer();\r\n\r\n            // HttpConnection.stop() should not complete until after the onclose callback is invoked.\r\n            // This will transition the HubConnection to the disconnected state before HttpConnection.stop() completes.\r\n            await this.connection.stop(e);\r\n            throw e;\r\n        }\r\n    }\r\n\r\n    /** Stops the connection.\r\n     *\r\n     * @returns {Promise<void>} A Promise that resolves when the connection has been successfully terminated, or rejects with an error.\r\n     */\r\n    public async stop(): Promise<void> {\r\n        // Capture the start promise before the connection might be restarted in an onclose callback.\r\n        const startPromise = this._startPromise;\r\n\r\n        this._stopPromise = this._stopInternal();\r\n        await this._stopPromise;\r\n\r\n        try {\r\n            // Awaiting undefined continues immediately\r\n            await startPromise;\r\n        } catch (e) {\r\n            // This exception is returned to the user as a rejected Promise from the start method.\r\n        }\r\n    }\r\n\r\n    private _stopInternal(error?: Error): Promise<void> {\r\n        if (this._connectionState === HubConnectionState.Disconnected) {\r\n            this._logger.log(LogLevel.Debug, `Call to HubConnection.stop(${error}) ignored because it is already in the disconnected state.`);\r\n            return Promise.resolve();\r\n        }\r\n\r\n        if (this._connectionState === HubConnectionState.Disconnecting) {\r\n            this._logger.log(LogLevel.Debug, `Call to HttpConnection.stop(${error}) ignored because the connection is already in the disconnecting state.`);\r\n            return this._stopPromise!;\r\n        }\r\n\r\n        this._connectionState = HubConnectionState.Disconnecting;\r\n\r\n        this._logger.log(LogLevel.Debug, \"Stopping HubConnection.\");\r\n\r\n        if (this._reconnectDelayHandle) {\r\n            // We're in a reconnect delay which means the underlying connection is currently already stopped.\r\n            // Just clear the handle to stop the reconnect loop (which no one is waiting on thankfully) and\r\n            // fire the onclose callbacks.\r\n            this._logger.log(LogLevel.Debug, \"Connection stopped during reconnect delay. Done reconnecting.\");\r\n\r\n            clearTimeout(this._reconnectDelayHandle);\r\n            this._reconnectDelayHandle = undefined;\r\n\r\n            this._completeClose();\r\n            return Promise.resolve();\r\n        }\r\n\r\n        this._cleanupTimeout();\r\n        this._cleanupPingTimer();\r\n        this._stopDuringStartError = error || new Error(\"The connection was stopped before the hub handshake could complete.\");\r\n\r\n        // HttpConnection.stop() should not complete until after either HttpConnection.start() fails\r\n        // or the onclose callback is invoked. The onclose callback will transition the HubConnection\r\n        // to the disconnected state if need be before HttpConnection.stop() completes.\r\n        return this.connection.stop(error);\r\n    }\r\n\r\n    /** Invokes a streaming hub method on the server using the specified name and arguments.\r\n     *\r\n     * @typeparam T The type of the items returned by the server.\r\n     * @param {string} methodName The name of the server method to invoke.\r\n     * @param {any[]} args The arguments used to invoke the server method.\r\n     * @returns {IStreamResult<T>} An object that yields results from the server as they are received.\r\n     */\r\n    public stream<T = any>(methodName: string, ...args: any[]): IStreamResult<T> {\r\n        const [streams, streamIds] = this._replaceStreamingParams(args);\r\n        const invocationDescriptor = this._createStreamInvocation(methodName, args, streamIds);\r\n\r\n        // eslint-disable-next-line prefer-const\r\n        let promiseQueue: Promise<void>;\r\n\r\n        const subject = new Subject<T>();\r\n        subject.cancelCallback = () => {\r\n            const cancelInvocation: CancelInvocationMessage = this._createCancelInvocation(invocationDescriptor.invocationId);\r\n\r\n            delete this._callbacks[invocationDescriptor.invocationId];\r\n\r\n            return promiseQueue.then(() => {\r\n                return this._sendWithProtocol(cancelInvocation);\r\n            });\r\n        };\r\n\r\n        this._callbacks[invocationDescriptor.invocationId] = (invocationEvent: CompletionMessage | StreamItemMessage | null, error?: Error) => {\r\n            if (error) {\r\n                subject.error(error);\r\n                return;\r\n            } else if (invocationEvent) {\r\n                // invocationEvent will not be null when an error is not passed to the callback\r\n                if (invocationEvent.type === MessageType.Completion) {\r\n                    if (invocationEvent.error) {\r\n                        subject.error(new Error(invocationEvent.error));\r\n                    } else {\r\n                        subject.complete();\r\n                    }\r\n                } else {\r\n                    subject.next((invocationEvent.item) as T);\r\n                }\r\n            }\r\n        };\r\n\r\n        promiseQueue = this._sendWithProtocol(invocationDescriptor)\r\n            .catch((e) => {\r\n                subject.error(e);\r\n                delete this._callbacks[invocationDescriptor.invocationId];\r\n            });\r\n\r\n        this._launchStreams(streams, promiseQueue);\r\n\r\n        return subject;\r\n    }\r\n\r\n    private _sendMessage(message: any) {\r\n        this._resetKeepAliveInterval();\r\n        return this.connection.send(message);\r\n    }\r\n\r\n    /**\r\n     * Sends a js object to the server.\r\n     * @param message The js object to serialize and send.\r\n     */\r\n    private _sendWithProtocol(message: any) {\r\n        return this._sendMessage(this._protocol.writeMessage(message));\r\n    }\r\n\r\n    /** Invokes a hub method on the server using the specified name and arguments. Does not wait for a response from the receiver.\r\n     *\r\n     * The Promise returned by this method resolves when the client has sent the invocation to the server. The server may still\r\n     * be processing the invocation.\r\n     *\r\n     * @param {string} methodName The name of the server method to invoke.\r\n     * @param {any[]} args The arguments used to invoke the server method.\r\n     * @returns {Promise<void>} A Promise that resolves when the invocation has been successfully sent, or rejects with an error.\r\n     */\r\n    public send(methodName: string, ...args: any[]): Promise<void> {\r\n        const [streams, streamIds] = this._replaceStreamingParams(args);\r\n        const sendPromise = this._sendWithProtocol(this._createInvocation(methodName, args, true, streamIds));\r\n\r\n        this._launchStreams(streams, sendPromise);\r\n\r\n        return sendPromise;\r\n    }\r\n\r\n    /** Invokes a hub method on the server using the specified name and arguments.\r\n     *\r\n     * The Promise returned by this method resolves when the server indicates it has finished invoking the method. When the promise\r\n     * resolves, the server has finished invoking the method. If the server method returns a result, it is produced as the result of\r\n     * resolving the Promise.\r\n     *\r\n     * @typeparam T The expected return type.\r\n     * @param {string} methodName The name of the server method to invoke.\r\n     * @param {any[]} args The arguments used to invoke the server method.\r\n     * @returns {Promise<T>} A Promise that resolves with the result of the server method (if any), or rejects with an error.\r\n     */\r\n    public invoke<T = any>(methodName: string, ...args: any[]): Promise<T> {\r\n        const [streams, streamIds] = this._replaceStreamingParams(args);\r\n        const invocationDescriptor = this._createInvocation(methodName, args, false, streamIds);\r\n\r\n        const p = new Promise<any>((resolve, reject) => {\r\n            // invocationId will always have a value for a non-blocking invocation\r\n            this._callbacks[invocationDescriptor.invocationId!] = (invocationEvent: StreamItemMessage | CompletionMessage | null, error?: Error) => {\r\n                if (error) {\r\n                    reject(error);\r\n                    return;\r\n                } else if (invocationEvent) {\r\n                    // invocationEvent will not be null when an error is not passed to the callback\r\n                    if (invocationEvent.type === MessageType.Completion) {\r\n                        if (invocationEvent.error) {\r\n                            reject(new Error(invocationEvent.error));\r\n                        } else {\r\n                            resolve(invocationEvent.result);\r\n                        }\r\n                    } else {\r\n                        reject(new Error(`Unexpected message type: ${invocationEvent.type}`));\r\n                    }\r\n                }\r\n            };\r\n\r\n            const promiseQueue = this._sendWithProtocol(invocationDescriptor)\r\n                .catch((e) => {\r\n                    reject(e);\r\n                    // invocationId will always have a value for a non-blocking invocation\r\n                    delete this._callbacks[invocationDescriptor.invocationId!];\r\n                });\r\n\r\n            this._launchStreams(streams, promiseQueue);\r\n        });\r\n\r\n        return p;\r\n    }\r\n\r\n    /** Registers a handler that will be invoked when the hub method with the specified method name is invoked.\r\n     *\r\n     * @param {string} methodName The name of the hub method to define.\r\n     * @param {Function} newMethod The handler that will be raised when the hub method is invoked.\r\n     */\r\n    public on(methodName: string, newMethod: (...args: any[]) => void): void {\r\n        if (!methodName || !newMethod) {\r\n            return;\r\n        }\r\n\r\n        methodName = methodName.toLowerCase();\r\n        if (!this._methods[methodName]) {\r\n            this._methods[methodName] = [];\r\n        }\r\n\r\n        // Preventing adding the same handler multiple times.\r\n        if (this._methods[methodName].indexOf(newMethod) !== -1) {\r\n            return;\r\n        }\r\n\r\n        this._methods[methodName].push(newMethod);\r\n    }\r\n\r\n    /** Removes all handlers for the specified hub method.\r\n     *\r\n     * @param {string} methodName The name of the method to remove handlers for.\r\n     */\r\n    public off(methodName: string): void;\r\n\r\n    /** Removes the specified handler for the specified hub method.\r\n     *\r\n     * You must pass the exact same Function instance as was previously passed to {@link @microsoft/signalr.HubConnection.on}. Passing a different instance (even if the function\r\n     * body is the same) will not remove the handler.\r\n     *\r\n     * @param {string} methodName The name of the method to remove handlers for.\r\n     * @param {Function} method The handler to remove. This must be the same Function instance as the one passed to {@link @microsoft/signalr.HubConnection.on}.\r\n     */\r\n    public off(methodName: string, method: (...args: any[]) => void): void;\r\n    public off(methodName: string, method?: (...args: any[]) => void): void {\r\n        if (!methodName) {\r\n            return;\r\n        }\r\n\r\n        methodName = methodName.toLowerCase();\r\n        const handlers = this._methods[methodName];\r\n        if (!handlers) {\r\n            return;\r\n        }\r\n        if (method) {\r\n            const removeIdx = handlers.indexOf(method);\r\n            if (removeIdx !== -1) {\r\n                handlers.splice(removeIdx, 1);\r\n                if (handlers.length === 0) {\r\n                    delete this._methods[methodName];\r\n                }\r\n            }\r\n        } else {\r\n            delete this._methods[methodName];\r\n        }\r\n\r\n    }\r\n\r\n    /** Registers a handler that will be invoked when the connection is closed.\r\n     *\r\n     * @param {Function} callback The handler that will be invoked when the connection is closed. Optionally receives a single argument containing the error that caused the connection to close (if any).\r\n     */\r\n    public onclose(callback: (error?: Error) => void): void {\r\n        if (callback) {\r\n            this._closedCallbacks.push(callback);\r\n        }\r\n    }\r\n\r\n    /** Registers a handler that will be invoked when the connection starts reconnecting.\r\n     *\r\n     * @param {Function} callback The handler that will be invoked when the connection starts reconnecting. Optionally receives a single argument containing the error that caused the connection to start reconnecting (if any).\r\n     */\r\n    public onreconnecting(callback: (error?: Error) => void): void {\r\n        if (callback) {\r\n            this._reconnectingCallbacks.push(callback);\r\n        }\r\n    }\r\n\r\n    /** Registers a handler that will be invoked when the connection successfully reconnects.\r\n     *\r\n     * @param {Function} callback The handler that will be invoked when the connection successfully reconnects.\r\n     */\r\n    public onreconnected(callback: (connectionId?: string) => void): void {\r\n        if (callback) {\r\n            this._reconnectedCallbacks.push(callback);\r\n        }\r\n    }\r\n\r\n    private _processIncomingData(data: any) {\r\n        this._cleanupTimeout();\r\n\r\n        if (!this._receivedHandshakeResponse) {\r\n            data = this._processHandshakeResponse(data);\r\n            this._receivedHandshakeResponse = true;\r\n        }\r\n\r\n        // Data may have all been read when processing handshake response\r\n        if (data) {\r\n            // Parse the messages\r\n            const messages = this._protocol.parseMessages(data, this._logger);\r\n\r\n            for (const message of messages) {\r\n                switch (message.type) {\r\n                    case MessageType.Invocation:\r\n                        this._invokeClientMethod(message);\r\n                        break;\r\n                    case MessageType.StreamItem:\r\n                    case MessageType.Completion: {\r\n                        const callback = this._callbacks[message.invocationId];\r\n                        if (callback) {\r\n                            if (message.type === MessageType.Completion) {\r\n                                delete this._callbacks[message.invocationId];\r\n                            }\r\n                            try {\r\n                                callback(message);\r\n                            } catch (e) {\r\n                                this._logger.log(LogLevel.Error, `Stream callback threw error: ${getErrorString(e)}`);\r\n                            }\r\n                        }\r\n                        break;\r\n                    }\r\n                    case MessageType.Ping:\r\n                        // Don't care about pings\r\n                        break;\r\n                    case MessageType.Close: {\r\n                        this._logger.log(LogLevel.Information, \"Close message received from server.\");\r\n\r\n                        const error = message.error ? new Error(\"Server returned an error on close: \" + message.error) : undefined;\r\n\r\n                        if (message.allowReconnect === true) {\r\n                            // It feels wrong not to await connection.stop() here, but processIncomingData is called as part of an onreceive callback which is not async,\r\n                            // this is already the behavior for serverTimeout(), and HttpConnection.Stop() should catch and log all possible exceptions.\r\n\r\n                            // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n                            this.connection.stop(error);\r\n                        } else {\r\n                            // We cannot await stopInternal() here, but subsequent calls to stop() will await this if stopInternal() is still ongoing.\r\n                            this._stopPromise = this._stopInternal(error);\r\n                        }\r\n\r\n                        break;\r\n                    }\r\n                    default:\r\n                        this._logger.log(LogLevel.Warning, `Invalid message type: ${message.type}.`);\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n\r\n        this._resetTimeoutPeriod();\r\n    }\r\n\r\n    private _processHandshakeResponse(data: any): any {\r\n        let responseMessage: HandshakeResponseMessage;\r\n        let remainingData: any;\r\n\r\n        try {\r\n            [remainingData, responseMessage] = this._handshakeProtocol.parseHandshakeResponse(data);\r\n        } catch (e) {\r\n            const message = \"Error parsing handshake response: \" + e;\r\n            this._logger.log(LogLevel.Error, message);\r\n\r\n            const error = new Error(message);\r\n            this._handshakeRejecter(error);\r\n            throw error;\r\n        }\r\n        if (responseMessage.error) {\r\n            const message = \"Server returned handshake error: \" + responseMessage.error;\r\n            this._logger.log(LogLevel.Error, message);\r\n\r\n            const error = new Error(message);\r\n            this._handshakeRejecter(error);\r\n            throw error;\r\n        } else {\r\n            this._logger.log(LogLevel.Debug, \"Server handshake complete.\");\r\n        }\r\n\r\n        this._handshakeResolver();\r\n        return remainingData;\r\n    }\r\n\r\n    private _resetKeepAliveInterval() {\r\n        if (this.connection.features.inherentKeepAlive) {\r\n            return;\r\n        }\r\n\r\n        // Set the time we want the next keep alive to be sent\r\n        // Timer will be setup on next message receive\r\n        this._nextKeepAlive = new Date().getTime() + this.keepAliveIntervalInMilliseconds;\r\n\r\n        this._cleanupPingTimer();\r\n    }\r\n\r\n    private _resetTimeoutPeriod() {\r\n        if (!this.connection.features || !this.connection.features.inherentKeepAlive) {\r\n            // Set the timeout timer\r\n            this._timeoutHandle = setTimeout(() => this.serverTimeout(), this.serverTimeoutInMilliseconds);\r\n\r\n            // Set keepAlive timer if there isn't one\r\n            if (this._pingServerHandle === undefined)\r\n            {\r\n                let nextPing = this._nextKeepAlive - new Date().getTime();\r\n                if (nextPing < 0) {\r\n                    nextPing = 0;\r\n                }\r\n\r\n                // The timer needs to be set from a networking callback to avoid Chrome timer throttling from causing timers to run once a minute\r\n                this._pingServerHandle = setTimeout(async () => {\r\n                    if (this._connectionState === HubConnectionState.Connected) {\r\n                        try {\r\n                            await this._sendMessage(this._cachedPingMessage);\r\n                        } catch {\r\n                            // We don't care about the error. It should be seen elsewhere in the client.\r\n                            // The connection is probably in a bad or closed state now, cleanup the timer so it stops triggering\r\n                            this._cleanupPingTimer();\r\n                        }\r\n                    }\r\n                }, nextPing);\r\n            }\r\n        }\r\n    }\r\n\r\n    // eslint-disable-next-line @typescript-eslint/naming-convention\r\n    private serverTimeout() {\r\n        // The server hasn't talked to us in a while. It doesn't like us anymore ... :(\r\n        // Terminate the connection, but we don't need to wait on the promise. This could trigger reconnecting.\r\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n        this.connection.stop(new Error(\"Server timeout elapsed without receiving a message from the server.\"));\r\n    }\r\n\r\n    private _invokeClientMethod(invocationMessage: InvocationMessage) {\r\n        const methods = this._methods[invocationMessage.target.toLowerCase()];\r\n        if (methods) {\r\n            try {\r\n                methods.forEach((m) => m.apply(this, invocationMessage.arguments));\r\n            } catch (e) {\r\n                this._logger.log(LogLevel.Error, `A callback for the method ${invocationMessage.target.toLowerCase()} threw error '${e}'.`);\r\n            }\r\n\r\n            if (invocationMessage.invocationId) {\r\n                // This is not supported in v1. So we return an error to avoid blocking the server waiting for the response.\r\n                const message = \"Server requested a response, which is not supported in this version of the client.\";\r\n                this._logger.log(LogLevel.Error, message);\r\n\r\n                // We don't want to wait on the stop itself.\r\n                this._stopPromise = this._stopInternal(new Error(message));\r\n            }\r\n        } else {\r\n            this._logger.log(LogLevel.Warning, `No client method with the name '${invocationMessage.target}' found.`);\r\n        }\r\n    }\r\n\r\n    private _connectionClosed(error?: Error) {\r\n        this._logger.log(LogLevel.Debug, `HubConnection.connectionClosed(${error}) called while in state ${this._connectionState}.`);\r\n\r\n        // Triggering this.handshakeRejecter is insufficient because it could already be resolved without the continuation having run yet.\r\n        this._stopDuringStartError = this._stopDuringStartError || error || new Error(\"The underlying connection was closed before the hub handshake could complete.\");\r\n\r\n        // If the handshake is in progress, start will be waiting for the handshake promise, so we complete it.\r\n        // If it has already completed, this should just noop.\r\n        if (this._handshakeResolver) {\r\n            this._handshakeResolver();\r\n        }\r\n\r\n        this._cancelCallbacksWithError(error || new Error(\"Invocation canceled due to the underlying connection being closed.\"));\r\n\r\n        this._cleanupTimeout();\r\n        this._cleanupPingTimer();\r\n\r\n        if (this._connectionState === HubConnectionState.Disconnecting) {\r\n            this._completeClose(error);\r\n        } else if (this._connectionState === HubConnectionState.Connected && this._reconnectPolicy) {\r\n            // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n            this._reconnect(error);\r\n        } else if (this._connectionState === HubConnectionState.Connected) {\r\n            this._completeClose(error);\r\n        }\r\n\r\n        // If none of the above if conditions were true were called the HubConnection must be in either:\r\n        // 1. The Connecting state in which case the handshakeResolver will complete it and stopDuringStartError will fail it.\r\n        // 2. The Reconnecting state in which case the handshakeResolver will complete it and stopDuringStartError will fail the current reconnect attempt\r\n        //    and potentially continue the reconnect() loop.\r\n        // 3. The Disconnected state in which case we're already done.\r\n    }\r\n\r\n    private _completeClose(error?: Error) {\r\n        if (this._connectionStarted) {\r\n            this._connectionState = HubConnectionState.Disconnected;\r\n            this._connectionStarted = false;\r\n\r\n            if (Platform.isBrowser) {\r\n                window.document.removeEventListener(\"freeze\", this._freezeEventListener);\r\n            }\r\n\r\n            try {\r\n                this._closedCallbacks.forEach((c) => c.apply(this, [error]));\r\n            } catch (e) {\r\n                this._logger.log(LogLevel.Error, `An onclose callback called with error '${error}' threw error '${e}'.`);\r\n            }\r\n        }\r\n    }\r\n\r\n    private async _reconnect(error?: Error) {\r\n        const reconnectStartTime = Date.now();\r\n        let previousReconnectAttempts = 0;\r\n        let retryError = error !== undefined ? error : new Error(\"Attempting to reconnect due to a unknown error.\");\r\n\r\n        let nextRetryDelay = this._getNextRetryDelay(previousReconnectAttempts++, 0, retryError);\r\n\r\n        if (nextRetryDelay === null) {\r\n            this._logger.log(LogLevel.Debug, \"Connection not reconnecting because the IRetryPolicy returned null on the first reconnect attempt.\");\r\n            this._completeClose(error);\r\n            return;\r\n        }\r\n\r\n        this._connectionState = HubConnectionState.Reconnecting;\r\n\r\n        if (error) {\r\n            this._logger.log(LogLevel.Information, `Connection reconnecting because of error '${error}'.`);\r\n        } else {\r\n            this._logger.log(LogLevel.Information, \"Connection reconnecting.\");\r\n        }\r\n\r\n        if (this._reconnectingCallbacks.length !== 0) {\r\n            try {\r\n                this._reconnectingCallbacks.forEach((c) => c.apply(this, [error]));\r\n            } catch (e) {\r\n                this._logger.log(LogLevel.Error, `An onreconnecting callback called with error '${error}' threw error '${e}'.`);\r\n            }\r\n\r\n            // Exit early if an onreconnecting callback called connection.stop().\r\n            if (this._connectionState !== HubConnectionState.Reconnecting) {\r\n                this._logger.log(LogLevel.Debug, \"Connection left the reconnecting state in onreconnecting callback. Done reconnecting.\");\r\n                return;\r\n            }\r\n        }\r\n\r\n        while (nextRetryDelay !== null) {\r\n            this._logger.log(LogLevel.Information, `Reconnect attempt number ${previousReconnectAttempts} will start in ${nextRetryDelay} ms.`);\r\n\r\n            await new Promise((resolve) => {\r\n                this._reconnectDelayHandle = setTimeout(resolve, nextRetryDelay!);\r\n            });\r\n            this._reconnectDelayHandle = undefined;\r\n\r\n            if (this._connectionState !== HubConnectionState.Reconnecting) {\r\n                this._logger.log(LogLevel.Debug, \"Connection left the reconnecting state during reconnect delay. Done reconnecting.\");\r\n                return;\r\n            }\r\n\r\n            try {\r\n                await this._startInternal();\r\n\r\n                this._connectionState = HubConnectionState.Connected;\r\n                this._logger.log(LogLevel.Information, \"HubConnection reconnected successfully.\");\r\n\r\n                if (this._reconnectedCallbacks.length !== 0) {\r\n                    try {\r\n                        this._reconnectedCallbacks.forEach((c) => c.apply(this, [this.connection.connectionId]));\r\n                    } catch (e) {\r\n                        this._logger.log(LogLevel.Error, `An onreconnected callback called with connectionId '${this.connection.connectionId}; threw error '${e}'.`);\r\n                    }\r\n                }\r\n\r\n                return;\r\n            } catch (e) {\r\n                this._logger.log(LogLevel.Information, `Reconnect attempt failed because of error '${e}'.`);\r\n\r\n                if (this._connectionState !== HubConnectionState.Reconnecting) {\r\n                    this._logger.log(LogLevel.Debug, `Connection moved to the '${this._connectionState}' from the reconnecting state during reconnect attempt. Done reconnecting.`);\r\n                    // The TypeScript compiler thinks that connectionState must be Connected here. The TypeScript compiler is wrong.\r\n                    if (this._connectionState as any === HubConnectionState.Disconnecting) {\r\n                        this._completeClose();\r\n                    }\r\n                    return;\r\n                }\r\n\r\n                retryError = e instanceof Error ? e : new Error(e.toString());\r\n                nextRetryDelay = this._getNextRetryDelay(previousReconnectAttempts++, Date.now() - reconnectStartTime, retryError);\r\n            }\r\n        }\r\n\r\n        this._logger.log(LogLevel.Information, `Reconnect retries have been exhausted after ${Date.now() - reconnectStartTime} ms and ${previousReconnectAttempts} failed attempts. Connection disconnecting.`);\r\n\r\n        this._completeClose();\r\n    }\r\n\r\n    private _getNextRetryDelay(previousRetryCount: number, elapsedMilliseconds: number, retryReason: Error) {\r\n        try {\r\n            return this._reconnectPolicy!.nextRetryDelayInMilliseconds({\r\n                elapsedMilliseconds,\r\n                previousRetryCount,\r\n                retryReason,\r\n            });\r\n        } catch (e) {\r\n            this._logger.log(LogLevel.Error, `IRetryPolicy.nextRetryDelayInMilliseconds(${previousRetryCount}, ${elapsedMilliseconds}) threw error '${e}'.`);\r\n            return null;\r\n        }\r\n    }\r\n\r\n    private _cancelCallbacksWithError(error: Error) {\r\n        const callbacks = this._callbacks;\r\n        this._callbacks = {};\r\n\r\n        Object.keys(callbacks)\r\n            .forEach((key) => {\r\n                const callback = callbacks[key];\r\n                try {\r\n                    callback(null, error);\r\n                } catch (e) {\r\n                    this._logger.log(LogLevel.Error, `Stream 'error' callback called with '${error}' threw error: ${getErrorString(e)}`);\r\n                }\r\n            });\r\n    }\r\n\r\n    private _cleanupPingTimer(): void {\r\n        if (this._pingServerHandle) {\r\n            clearTimeout(this._pingServerHandle);\r\n            this._pingServerHandle = undefined;\r\n        }\r\n    }\r\n\r\n    private _cleanupTimeout(): void {\r\n        if (this._timeoutHandle) {\r\n            clearTimeout(this._timeoutHandle);\r\n        }\r\n    }\r\n\r\n    private _createInvocation(methodName: string, args: any[], nonblocking: boolean, streamIds: string[]): InvocationMessage {\r\n        if (nonblocking) {\r\n            if (streamIds.length !== 0) {\r\n                return {\r\n                    arguments: args,\r\n                    streamIds,\r\n                    target: methodName,\r\n                    type: MessageType.Invocation,\r\n                };\r\n            } else {\r\n                return {\r\n                    arguments: args,\r\n                    target: methodName,\r\n                    type: MessageType.Invocation,\r\n                };\r\n            }\r\n        } else {\r\n            const invocationId = this._invocationId;\r\n            this._invocationId++;\r\n\r\n            if (streamIds.length !== 0) {\r\n                return {\r\n                    arguments: args,\r\n                    invocationId: invocationId.toString(),\r\n                    streamIds,\r\n                    target: methodName,\r\n                    type: MessageType.Invocation,\r\n                };\r\n            } else {\r\n                return {\r\n                    arguments: args,\r\n                    invocationId: invocationId.toString(),\r\n                    target: methodName,\r\n                    type: MessageType.Invocation,\r\n                };\r\n            }\r\n        }\r\n    }\r\n\r\n    private _launchStreams(streams: IStreamResult<any>[], promiseQueue: Promise<void>): void {\r\n        if (streams.length === 0) {\r\n            return;\r\n        }\r\n\r\n        // Synchronize stream data so they arrive in-order on the server\r\n        if (!promiseQueue) {\r\n            promiseQueue = Promise.resolve();\r\n        }\r\n\r\n        // We want to iterate over the keys, since the keys are the stream ids\r\n        // eslint-disable-next-line guard-for-in\r\n        for (const streamId in streams) {\r\n            streams[streamId].subscribe({\r\n                complete: () => {\r\n                    promiseQueue = promiseQueue.then(() => this._sendWithProtocol(this._createCompletionMessage(streamId)));\r\n                },\r\n                error: (err) => {\r\n                    let message: string;\r\n                    if (err instanceof Error) {\r\n                        message = err.message;\r\n                    } else if (err && err.toString) {\r\n                        message = err.toString();\r\n                    } else {\r\n                        message = \"Unknown error\";\r\n                    }\r\n\r\n                    promiseQueue = promiseQueue.then(() => this._sendWithProtocol(this._createCompletionMessage(streamId, message)));\r\n                },\r\n                next: (item) => {\r\n                    promiseQueue = promiseQueue.then(() => this._sendWithProtocol(this._createStreamItemMessage(streamId, item)));\r\n                },\r\n            });\r\n        }\r\n    }\r\n\r\n    private _replaceStreamingParams(args: any[]): [IStreamResult<any>[], string[]] {\r\n        const streams: IStreamResult<any>[] = [];\r\n        const streamIds: string[] = [];\r\n        for (let i = 0; i < args.length; i++) {\r\n            const argument = args[i];\r\n            if (this._isObservable(argument)) {\r\n                const streamId = this._invocationId;\r\n                this._invocationId++;\r\n                // Store the stream for later use\r\n                streams[streamId] = argument;\r\n                streamIds.push(streamId.toString());\r\n\r\n                // remove stream from args\r\n                args.splice(i, 1);\r\n            }\r\n        }\r\n\r\n        return [streams, streamIds];\r\n    }\r\n\r\n    private _isObservable(arg: any): arg is IStreamResult<any> {\r\n        // This allows other stream implementations to just work (like rxjs)\r\n        return arg && arg.subscribe && typeof arg.subscribe === \"function\";\r\n    }\r\n\r\n    private _createStreamInvocation(methodName: string, args: any[], streamIds: string[]): StreamInvocationMessage {\r\n        const invocationId = this._invocationId;\r\n        this._invocationId++;\r\n\r\n        if (streamIds.length !== 0) {\r\n            return {\r\n                arguments: args,\r\n                invocationId: invocationId.toString(),\r\n                streamIds,\r\n                target: methodName,\r\n                type: MessageType.StreamInvocation,\r\n            };\r\n        } else {\r\n            return {\r\n                arguments: args,\r\n                invocationId: invocationId.toString(),\r\n                target: methodName,\r\n                type: MessageType.StreamInvocation,\r\n            };\r\n        }\r\n    }\r\n\r\n    private _createCancelInvocation(id: string): CancelInvocationMessage {\r\n        return {\r\n            invocationId: id,\r\n            type: MessageType.CancelInvocation,\r\n        };\r\n    }\r\n\r\n    private _createStreamItemMessage(id: string, item: any): StreamItemMessage {\r\n        return {\r\n            invocationId: id,\r\n            item,\r\n            type: MessageType.StreamItem,\r\n        };\r\n    }\r\n\r\n    private _createCompletionMessage(id: string, error?: any, result?: any): CompletionMessage {\r\n        if (error) {\r\n            return {\r\n                error,\r\n                invocationId: id,\r\n                type: MessageType.Completion,\r\n            };\r\n        }\r\n\r\n        return {\r\n            invocationId: id,\r\n            result,\r\n            type: MessageType.Completion,\r\n        };\r\n    }\r\n}\r\n", "// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\n\r\nimport { IRetryPolicy, RetryContext } from \"./IRetryPolicy\";\r\n\r\n// 0, 2, 10, 30 second delays before reconnect attempts.\r\nconst DEFAULT_RETRY_DELAYS_IN_MILLISECONDS = [0, 2000, 10000, 30000, null];\r\n\r\n/** @private */\r\nexport class DefaultReconnectPolicy implements IRetryPolicy {\r\n    private readonly _retryDelays: (number | null)[];\r\n\r\n    constructor(retryDelays?: number[]) {\r\n        this._retryDelays = retryDelays !== undefined ? [...retryDelays, null] : DEFAULT_RETRY_DELAYS_IN_MILLISECONDS;\r\n    }\r\n\r\n    public nextRetryDelayInMilliseconds(retryContext: RetryContext): number | null {\r\n        return this._retryDelays[retryContext.previousRetryCount];\r\n    }\r\n}\r\n", "// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\n\r\nexport abstract class HeaderNames {\r\n    static readonly Authorization = \"Authorization\";\r\n    static readonly Cookie = \"Cookie\";\r\n}\r\n", "// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\n\r\n// This will be treated as a bit flag in the future, so we keep it using power-of-two values.\r\n/** Specifies a specific HTTP transport type. */\r\nexport enum HttpTransportType {\r\n    /** Specifies no transport preference. */\r\n    None = 0,\r\n    /** Specifies the WebSockets transport. */\r\n    WebSockets = 1,\r\n    /** Specifies the Server-Sent Events transport. */\r\n    ServerSentEvents = 2,\r\n    /** Specifies the Long Polling transport. */\r\n    LongPolling = 4,\r\n}\r\n\r\n/** Specifies the transfer format for a connection. */\r\nexport enum TransferFormat {\r\n    /** Specifies that only text data will be transmitted over the connection. */\r\n    Text = 1,\r\n    /** Specifies that binary data will be transmitted over the connection. */\r\n    Binary = 2,\r\n}\r\n\r\n/** An abstraction over the behavior of transports. This is designed to support the framework and not intended for use by applications. */\r\nexport interface ITransport {\r\n    connect(url: string, transferFormat: TransferFormat): Promise<void>;\r\n    send(data: any): Promise<void>;\r\n    stop(): Promise<void>;\r\n    onreceive: ((data: string | ArrayBuffer) => void) | null;\r\n    onclose: ((error?: Error) => void) | null;\r\n}\r\n", "// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\n\r\n// Rough polyfill of https://developer.mozilla.org/en-US/docs/Web/API/AbortController\r\n// We don't actually ever use the API being polyfilled, we always use the polyfill because\r\n// it's a very new API right now.\r\n\r\n// Not exported from index.\r\n/** @private */\r\nexport class AbortController implements AbortSignal {\r\n    private _isAborted: boolean = false;\r\n    public onabort: (() => void) | null = null;\r\n\r\n    public abort(): void {\r\n        if (!this._isAborted) {\r\n            this._isAborted = true;\r\n            if (this.onabort) {\r\n                this.onabort();\r\n            }\r\n        }\r\n    }\r\n\r\n    get signal(): AbortSignal {\r\n        return this;\r\n    }\r\n\r\n    get aborted(): boolean {\r\n        return this._isAborted;\r\n    }\r\n}\r\n\r\n/** Represents a signal that can be monitored to determine if a request has been aborted. */\r\nexport interface AbortSignal {\r\n    /** Indicates if the request has been aborted. */\r\n    aborted: boolean;\r\n    /** Set this to a handler that will be invoked when the request is aborted. */\r\n    onabort: (() => void) | null;\r\n}\r\n", "// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\n\r\nimport { AbortController } from \"./AbortController\";\r\nimport { HttpError, TimeoutError } from \"./Errors\";\r\nimport { HeaderNames } from \"./HeaderNames\";\r\nimport { HttpClient, HttpRequest } from \"./HttpClient\";\r\nimport { ILogger, LogLevel } from \"./ILogger\";\r\nimport { ITransport, TransferFormat } from \"./ITransport\";\r\nimport { Arg, getDataDetail, getUserAgentHeader, sendMessage } from \"./Utils\";\r\nimport { IHttpConnectionOptions } from \"./IHttpConnectionOptions\";\r\n\r\n// Not exported from 'index', this type is internal.\r\n/** @private */\r\nexport class LongPollingTransport implements ITransport {\r\n    private readonly _httpClient: HttpClient;\r\n    private readonly _accessTokenFactory: (() => string | Promise<string>) | undefined;\r\n    private readonly _logger: ILogger;\r\n    private readonly _options: IHttpConnectionOptions;\r\n    private readonly _pollAbort: AbortController;\r\n\r\n    private _url?: string;\r\n    private _running: boolean;\r\n    private _receiving?: Promise<void>;\r\n    private _closeError?: Error;\r\n\r\n    public onreceive: ((data: string | ArrayBuffer) => void) | null;\r\n    public onclose: ((error?: Error) => void) | null;\r\n\r\n    // This is an internal type, not exported from 'index' so this is really just internal.\r\n    public get pollAborted(): boolean {\r\n        return this._pollAbort.aborted;\r\n    }\r\n\r\n    constructor(httpClient: HttpClient, accessTokenFactory: (() => string | Promise<string>) | undefined, logger: ILogger, options: IHttpConnectionOptions) {\r\n        this._httpClient = httpClient;\r\n        this._accessTokenFactory = accessTokenFactory;\r\n        this._logger = logger;\r\n        this._pollAbort = new AbortController();\r\n        this._options = options;\r\n\r\n        this._running = false;\r\n\r\n        this.onreceive = null;\r\n        this.onclose = null;\r\n    }\r\n\r\n    public async connect(url: string, transferFormat: TransferFormat): Promise<void> {\r\n        Arg.isRequired(url, \"url\");\r\n        Arg.isRequired(transferFormat, \"transferFormat\");\r\n        Arg.isIn(transferFormat, TransferFormat, \"transferFormat\");\r\n\r\n        this._url = url;\r\n\r\n        this._logger.log(LogLevel.Trace, \"(LongPolling transport) Connecting.\");\r\n\r\n        // Allow binary format on Node and Browsers that support binary content (indicated by the presence of responseType property)\r\n        if (transferFormat === TransferFormat.Binary &&\r\n            (typeof XMLHttpRequest !== \"undefined\" && typeof new XMLHttpRequest().responseType !== \"string\")) {\r\n            throw new Error(\"Binary protocols over XmlHttpRequest not implementing advanced features are not supported.\");\r\n        }\r\n\r\n        const [name, value] = getUserAgentHeader();\r\n        const headers = { [name]: value, ...this._options.headers };\r\n\r\n        const pollOptions: HttpRequest = {\r\n            abortSignal: this._pollAbort.signal,\r\n            headers,\r\n            timeout: 100000,\r\n            withCredentials: this._options.withCredentials,\r\n        };\r\n\r\n        if (transferFormat === TransferFormat.Binary) {\r\n            pollOptions.responseType = \"arraybuffer\";\r\n        }\r\n\r\n        const token = await this._getAccessToken();\r\n        this._updateHeaderToken(pollOptions, token);\r\n\r\n        // Make initial long polling request\r\n        // Server uses first long polling request to finish initializing connection and it returns without data\r\n        const pollUrl = `${url}&_=${Date.now()}`;\r\n        this._logger.log(LogLevel.Trace, `(LongPolling transport) polling: ${pollUrl}.`);\r\n        const response = await this._httpClient.get(pollUrl, pollOptions);\r\n        if (response.statusCode !== 200) {\r\n            this._logger.log(LogLevel.Error, `(LongPolling transport) Unexpected response code: ${response.statusCode}.`);\r\n\r\n            // Mark running as false so that the poll immediately ends and runs the close logic\r\n            this._closeError = new HttpError(response.statusText || \"\", response.statusCode);\r\n            this._running = false;\r\n        } else {\r\n            this._running = true;\r\n        }\r\n\r\n        this._receiving = this._poll(this._url, pollOptions);\r\n    }\r\n\r\n    private async _getAccessToken(): Promise<string | null> {\r\n        if (this._accessTokenFactory) {\r\n            return await this._accessTokenFactory();\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    private _updateHeaderToken(request: HttpRequest, token: string | null) {\r\n        if (!request.headers) {\r\n            request.headers = {};\r\n        }\r\n        if (token) {\r\n            request.headers[HeaderNames.Authorization] = `Bearer ${token}`;\r\n            return;\r\n        }\r\n        if (request.headers[HeaderNames.Authorization]) {\r\n            delete request.headers[HeaderNames.Authorization];\r\n        }\r\n    }\r\n\r\n    private async _poll(url: string, pollOptions: HttpRequest): Promise<void> {\r\n        try {\r\n            while (this._running) {\r\n                // We have to get the access token on each poll, in case it changes\r\n                const token = await this._getAccessToken();\r\n                this._updateHeaderToken(pollOptions, token);\r\n\r\n                try {\r\n                    const pollUrl = `${url}&_=${Date.now()}`;\r\n                    this._logger.log(LogLevel.Trace, `(LongPolling transport) polling: ${pollUrl}.`);\r\n                    const response = await this._httpClient.get(pollUrl, pollOptions);\r\n\r\n                    if (response.statusCode === 204) {\r\n                        this._logger.log(LogLevel.Information, \"(LongPolling transport) Poll terminated by server.\");\r\n\r\n                        this._running = false;\r\n                    } else if (response.statusCode !== 200) {\r\n                        this._logger.log(LogLevel.Error, `(LongPolling transport) Unexpected response code: ${response.statusCode}.`);\r\n\r\n                        // Unexpected status code\r\n                        this._closeError = new HttpError(response.statusText || \"\", response.statusCode);\r\n                        this._running = false;\r\n                    } else {\r\n                        // Process the response\r\n                        if (response.content) {\r\n                            this._logger.log(LogLevel.Trace, `(LongPolling transport) data received. ${getDataDetail(response.content, this._options.logMessageContent!)}.`);\r\n                            if (this.onreceive) {\r\n                                this.onreceive(response.content);\r\n                            }\r\n                        } else {\r\n                            // This is another way timeout manifest.\r\n                            this._logger.log(LogLevel.Trace, \"(LongPolling transport) Poll timed out, reissuing.\");\r\n                        }\r\n                    }\r\n                } catch (e) {\r\n                    if (!this._running) {\r\n                        // Log but disregard errors that occur after stopping\r\n                        this._logger.log(LogLevel.Trace, `(LongPolling transport) Poll errored after shutdown: ${e.message}`);\r\n                    } else {\r\n                        if (e instanceof TimeoutError) {\r\n                            // Ignore timeouts and reissue the poll.\r\n                            this._logger.log(LogLevel.Trace, \"(LongPolling transport) Poll timed out, reissuing.\");\r\n                        } else {\r\n                            // Close the connection with the error as the result.\r\n                            this._closeError = e;\r\n                            this._running = false;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        } finally {\r\n            this._logger.log(LogLevel.Trace, \"(LongPolling transport) Polling complete.\");\r\n\r\n            // We will reach here with pollAborted==false when the server returned a response causing the transport to stop.\r\n            // If pollAborted==true then client initiated the stop and the stop method will raise the close event after DELETE is sent.\r\n            if (!this.pollAborted) {\r\n                this._raiseOnClose();\r\n            }\r\n        }\r\n    }\r\n\r\n    public async send(data: any): Promise<void> {\r\n        if (!this._running) {\r\n            return Promise.reject(new Error(\"Cannot send until the transport is connected\"));\r\n        }\r\n        return sendMessage(this._logger, \"LongPolling\", this._httpClient, this._url!, this._accessTokenFactory, data, this._options);\r\n    }\r\n\r\n    public async stop(): Promise<void> {\r\n        this._logger.log(LogLevel.Trace, \"(LongPolling transport) Stopping polling.\");\r\n\r\n        // Tell receiving loop to stop, abort any current request, and then wait for it to finish\r\n        this._running = false;\r\n        this._pollAbort.abort();\r\n\r\n        try {\r\n            await this._receiving;\r\n\r\n            // Send DELETE to clean up long polling on the server\r\n            this._logger.log(LogLevel.Trace, `(LongPolling transport) sending DELETE request to ${this._url}.`);\r\n\r\n            const headers: {[k: string]: string} = {};\r\n            const [name, value] = getUserAgentHeader();\r\n            headers[name] = value;\r\n\r\n            const deleteOptions: HttpRequest = {\r\n                headers: { ...headers, ...this._options.headers },\r\n                timeout: this._options.timeout,\r\n                withCredentials: this._options.withCredentials,\r\n            };\r\n            const token = await this._getAccessToken();\r\n            this._updateHeaderToken(deleteOptions, token);\r\n            await this._httpClient.delete(this._url!, deleteOptions);\r\n\r\n            this._logger.log(LogLevel.Trace, \"(LongPolling transport) DELETE request sent.\");\r\n        } finally {\r\n            this._logger.log(LogLevel.Trace, \"(LongPolling transport) Stop finished.\");\r\n\r\n            // Raise close event here instead of in polling\r\n            // It needs to happen after the DELETE request is sent\r\n            this._raiseOnClose();\r\n        }\r\n    }\r\n\r\n    private _raiseOnClose() {\r\n        if (this.onclose) {\r\n            let logMessage = \"(LongPolling transport) Firing onclose event.\";\r\n            if (this._closeError) {\r\n                logMessage += \" Error: \" + this._closeError;\r\n            }\r\n            this._logger.log(LogLevel.Trace, logMessage);\r\n            this.onclose(this._closeError);\r\n        }\r\n    }\r\n}\r\n", "// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\n\r\nimport { HttpClient } from \"./HttpClient\";\r\nimport { MessageHeaders } from \"./IHubProtocol\";\r\nimport { ILogger, LogLevel } from \"./ILogger\";\r\nimport { ITransport, TransferFormat } from \"./ITransport\";\r\nimport { Arg, getDataDetail, getUserAgentHeader, Platform, sendMessage } from \"./Utils\";\r\nimport { IHttpConnectionOptions } from \"./IHttpConnectionOptions\";\r\n\r\n/** @private */\r\nexport class ServerSentEventsTransport implements ITransport {\r\n    private readonly _httpClient: HttpClient;\r\n    private readonly _accessTokenFactory: (() => string | Promise<string>) | undefined;\r\n    private readonly _logger: ILogger;\r\n    private readonly _options: IHttpConnectionOptions;\r\n    private _eventSource?: EventSource;\r\n    private _url?: string;\r\n\r\n    public onreceive: ((data: string | ArrayBuffer) => void) | null;\r\n    public onclose: ((error?: Error) => void) | null;\r\n\r\n    constructor(httpClient: HttpClient, accessTokenFactory: (() => string | Promise<string>) | undefined, logger: ILogger,\r\n                options: IHttpConnectionOptions) {\r\n        this._httpClient = httpClient;\r\n        this._accessTokenFactory = accessTokenFactory;\r\n        this._logger = logger;\r\n        this._options = options;\r\n\r\n        this.onreceive = null;\r\n        this.onclose = null;\r\n    }\r\n\r\n    public async connect(url: string, transferFormat: TransferFormat): Promise<void> {\r\n        Arg.isRequired(url, \"url\");\r\n        Arg.isRequired(transferFormat, \"transferFormat\");\r\n        Arg.isIn(transferFormat, TransferFormat, \"transferFormat\");\r\n\r\n        this._logger.log(LogLevel.Trace, \"(SSE transport) Connecting.\");\r\n\r\n        // set url before accessTokenFactory because this.url is only for send and we set the auth header instead of the query string for send\r\n        this._url = url;\r\n\r\n        if (this._accessTokenFactory) {\r\n            const token = await this._accessTokenFactory();\r\n            if (token) {\r\n                url += (url.indexOf(\"?\") < 0 ? \"?\" : \"&\") + `access_token=${encodeURIComponent(token)}`;\r\n            }\r\n        }\r\n\r\n        return new Promise<void>((resolve, reject) => {\r\n            let opened = false;\r\n            if (transferFormat !== TransferFormat.Text) {\r\n                reject(new Error(\"The Server-Sent Events transport only supports the 'Text' transfer format\"));\r\n                return;\r\n            }\r\n\r\n            let eventSource: EventSource;\r\n            if (Platform.isBrowser || Platform.isWebWorker) {\r\n                eventSource = new this._options.EventSource!(url, { withCredentials: this._options.withCredentials });\r\n            } else {\r\n                // Non-browser passes cookies via the dictionary\r\n                const cookies = this._httpClient.getCookieString(url);\r\n                const headers: MessageHeaders = {};\r\n                headers.Cookie = cookies;\r\n                const [name, value] = getUserAgentHeader();\r\n                headers[name] = value;\r\n\r\n                eventSource = new this._options.EventSource!(url, { withCredentials: this._options.withCredentials, headers: { ...headers, ...this._options.headers} } as EventSourceInit);\r\n            }\r\n\r\n            try {\r\n                eventSource.onmessage = (e: MessageEvent) => {\r\n                    if (this.onreceive) {\r\n                        try {\r\n                            this._logger.log(LogLevel.Trace, `(SSE transport) data received. ${getDataDetail(e.data, this._options.logMessageContent!)}.`);\r\n                            this.onreceive(e.data);\r\n                        } catch (error) {\r\n                            this._close(error);\r\n                            return;\r\n                        }\r\n                    }\r\n                };\r\n\r\n                // @ts-ignore: not using event on purpose\r\n                eventSource.onerror = (e: Event) => {\r\n                    // EventSource doesn't give any useful information about server side closes.\r\n                    if (opened) {\r\n                        this._close();\r\n                    } else {\r\n                        reject(new Error(\"EventSource failed to connect. The connection could not be found on the server,\"\r\n                        + \" either the connection ID is not present on the server, or a proxy is refusing/buffering the connection.\"\r\n                        + \" If you have multiple servers check that sticky sessions are enabled.\"));\r\n                    }\r\n                };\r\n\r\n                eventSource.onopen = () => {\r\n                    this._logger.log(LogLevel.Information, `SSE connected to ${this._url}`);\r\n                    this._eventSource = eventSource;\r\n                    opened = true;\r\n                    resolve();\r\n                };\r\n            } catch (e) {\r\n                reject(e);\r\n                return;\r\n            }\r\n        });\r\n    }\r\n\r\n    public async send(data: any): Promise<void> {\r\n        if (!this._eventSource) {\r\n            return Promise.reject(new Error(\"Cannot send until the transport is connected\"));\r\n        }\r\n        return sendMessage(this._logger, \"SSE\", this._httpClient, this._url!, this._accessTokenFactory, data, this._options);\r\n    }\r\n\r\n    public stop(): Promise<void> {\r\n        this._close();\r\n        return Promise.resolve();\r\n    }\r\n\r\n    private _close(e?: Error) {\r\n        if (this._eventSource) {\r\n            this._eventSource.close();\r\n            this._eventSource = undefined;\r\n\r\n            if (this.onclose) {\r\n                this.onclose(e);\r\n            }\r\n        }\r\n    }\r\n}\r\n", "// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\n\r\nimport { HeaderNames } from \"./HeaderNames\";\r\nimport { HttpClient } from \"./HttpClient\";\r\nimport { MessageHeaders } from \"./IHubProtocol\";\r\nimport { ILogger, LogLevel } from \"./ILogger\";\r\nimport { ITransport, TransferFormat } from \"./ITransport\";\r\nimport { WebSocketConstructor } from \"./Polyfills\";\r\nimport { Arg, getDataDetail, getUserAgentHeader, Platform } from \"./Utils\";\r\n\r\n/** @private */\r\nexport class WebSocketTransport implements ITransport {\r\n    private readonly _logger: ILogger;\r\n    private readonly _accessTokenFactory: (() => string | Promise<string>) | undefined;\r\n    private readonly _logMessageContent: boolean;\r\n    private readonly _webSocketConstructor: WebSocketConstructor;\r\n    private readonly _httpClient: HttpClient;\r\n    private _webSocket?: WebSocket;\r\n    private _headers: MessageHeaders;\r\n\r\n    public onreceive: ((data: string | ArrayBuffer) => void) | null;\r\n    public onclose: ((error?: Error) => void) | null;\r\n\r\n    constructor(httpClient: HttpClient, accessTokenFactory: (() => string | Promise<string>) | undefined, logger: ILogger,\r\n                logMessageContent: boolean, webSocketConstructor: WebSocketConstructor, headers: MessageHeaders) {\r\n        this._logger = logger;\r\n        this._accessTokenFactory = accessTokenFactory;\r\n        this._logMessageContent = logMessageContent;\r\n        this._webSocketConstructor = webSocketConstructor;\r\n        this._httpClient = httpClient;\r\n\r\n        this.onreceive = null;\r\n        this.onclose = null;\r\n        this._headers = headers;\r\n    }\r\n\r\n    public async connect(url: string, transferFormat: TransferFormat): Promise<void> {\r\n        Arg.isRequired(url, \"url\");\r\n        Arg.isRequired(transferFormat, \"transferFormat\");\r\n        Arg.isIn(transferFormat, TransferFormat, \"transferFormat\");\r\n        this._logger.log(LogLevel.Trace, \"(WebSockets transport) Connecting.\");\r\n\r\n        if (this._accessTokenFactory) {\r\n            const token = await this._accessTokenFactory();\r\n            if (token) {\r\n                url += (url.indexOf(\"?\") < 0 ? \"?\" : \"&\") + `access_token=${encodeURIComponent(token)}`;\r\n            }\r\n        }\r\n\r\n        return new Promise<void>((resolve, reject) => {\r\n            url = url.replace(/^http/, \"ws\");\r\n            let webSocket: WebSocket | undefined;\r\n            const cookies = this._httpClient.getCookieString(url);\r\n            let opened = false;\r\n\r\n            if (Platform.isNode) {\r\n                const headers: {[k: string]: string} = {};\r\n                const [name, value] = getUserAgentHeader();\r\n                headers[name] = value;\r\n\r\n                if (cookies) {\r\n                    headers[HeaderNames.Cookie] = `${cookies}`;\r\n                }\r\n\r\n                // Only pass headers when in non-browser environments\r\n                webSocket = new this._webSocketConstructor(url, undefined, {\r\n                    headers: { ...headers, ...this._headers },\r\n                });\r\n            }\r\n\r\n            if (!webSocket) {\r\n                // Chrome is not happy with passing 'undefined' as protocol\r\n                webSocket = new this._webSocketConstructor(url);\r\n            }\r\n\r\n            if (transferFormat === TransferFormat.Binary) {\r\n                webSocket.binaryType = \"arraybuffer\";\r\n            }\r\n\r\n            webSocket.onopen = (_event: Event) => {\r\n                this._logger.log(LogLevel.Information, `WebSocket connected to ${url}.`);\r\n                this._webSocket = webSocket;\r\n                opened = true;\r\n                resolve();\r\n            };\r\n\r\n            webSocket.onerror = (event: Event) => {\r\n                let error: any = null;\r\n                // ErrorEvent is a browser only type we need to check if the type exists before using it\r\n                if (typeof ErrorEvent !== \"undefined\" && event instanceof ErrorEvent) {\r\n                    error = event.error;\r\n                } else {\r\n                    error = \"There was an error with the transport\";\r\n                }\r\n\r\n                this._logger.log(LogLevel.Information, `(WebSockets transport) ${error}.`);\r\n            };\r\n\r\n            webSocket.onmessage = (message: MessageEvent) => {\r\n                this._logger.log(LogLevel.Trace, `(WebSockets transport) data received. ${getDataDetail(message.data, this._logMessageContent)}.`);\r\n                if (this.onreceive) {\r\n                    try {\r\n                        this.onreceive(message.data);\r\n                    } catch (error) {\r\n                        this._close(error);\r\n                        return;\r\n                    }\r\n                }\r\n            };\r\n\r\n            webSocket.onclose = (event: CloseEvent) => {\r\n                // Don't call close handler if connection was never established\r\n                // We'll reject the connect call instead\r\n                if (opened) {\r\n                    this._close(event);\r\n                } else {\r\n                    let error: any = null;\r\n                    // ErrorEvent is a browser only type we need to check if the type exists before using it\r\n                    if (typeof ErrorEvent !== \"undefined\" && event instanceof ErrorEvent) {\r\n                        error = event.error;\r\n                    } else {\r\n                        error = \"WebSocket failed to connect. The connection could not be found on the server,\"\r\n                        + \" either the endpoint may not be a SignalR endpoint,\"\r\n                        + \" the connection ID is not present on the server, or there is a proxy blocking WebSockets.\"\r\n                        + \" If you have multiple servers check that sticky sessions are enabled.\";\r\n                    }\r\n\r\n                    reject(new Error(error));\r\n                }\r\n            };\r\n        });\r\n    }\r\n\r\n    public send(data: any): Promise<void> {\r\n        if (this._webSocket && this._webSocket.readyState === this._webSocketConstructor.OPEN) {\r\n            this._logger.log(LogLevel.Trace, `(WebSockets transport) sending data. ${getDataDetail(data, this._logMessageContent)}.`);\r\n            this._webSocket.send(data);\r\n            return Promise.resolve();\r\n        }\r\n\r\n        return Promise.reject(\"WebSocket is not in the OPEN state\");\r\n    }\r\n\r\n    public stop(): Promise<void> {\r\n        if (this._webSocket) {\r\n            // Manually invoke onclose callback inline so we know the HttpConnection was closed properly before returning\r\n            // This also solves an issue where websocket.onclose could take 18+ seconds to trigger during network disconnects\r\n            this._close(undefined);\r\n        }\r\n\r\n        return Promise.resolve();\r\n    }\r\n\r\n    private _close(event?: CloseEvent | Error): void {\r\n        // webSocket will be null if the transport did not start successfully\r\n        if (this._webSocket) {\r\n            // Clear websocket handlers because we are considering the socket closed now\r\n            this._webSocket.onclose = () => {};\r\n            this._webSocket.onmessage = () => {};\r\n            this._webSocket.onerror = () => {};\r\n            this._webSocket.close();\r\n            this._webSocket = undefined;\r\n        }\r\n\r\n        this._logger.log(LogLevel.Trace, \"(WebSockets transport) socket closed.\");\r\n        if (this.onclose) {\r\n            if (this._isCloseEvent(event) && (event.wasClean === false || event.code !== 1000)) {\r\n                this.onclose(new Error(`WebSocket closed with status code: ${event.code} (${event.reason || \"no reason given\"}).`));\r\n            } else if (event instanceof Error) {\r\n                this.onclose(event);\r\n            } else {\r\n                this.onclose();\r\n            }\r\n        }\r\n    }\r\n\r\n    private _isCloseEvent(event?: any): event is CloseEvent {\r\n        return event && typeof event.wasClean === \"boolean\" && typeof event.code === \"number\";\r\n    }\r\n}\r\n", "// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\n\r\nimport { DefaultHttpClient } from \"./DefaultHttpClient\";\r\nimport { AggregateErrors, DisabledTransportError, FailedToNegotiateWithServerError, FailedToStartTransportError, HttpError, UnsupportedTransportError } from \"./Errors\";\r\nimport { HeaderNames } from \"./HeaderNames\";\r\nimport { HttpClient } from \"./HttpClient\";\r\nimport { IConnection } from \"./IConnection\";\r\nimport { IHttpConnectionOptions } from \"./IHttpConnectionOptions\";\r\nimport { ILogger, LogLevel } from \"./ILogger\";\r\nimport { HttpTransportType, ITransport, TransferFormat } from \"./ITransport\";\r\nimport { LongPollingTransport } from \"./LongPollingTransport\";\r\nimport { ServerSentEventsTransport } from \"./ServerSentEventsTransport\";\r\nimport { Arg, createLogger, getUserAgentHeader, Platform } from \"./Utils\";\r\nimport { WebSocketTransport } from \"./WebSocketTransport\";\r\n\r\n/** @private */\r\nconst enum ConnectionState {\r\n    Connecting = \"Connecting\",\r\n    Connected = \"Connected\",\r\n    Disconnected = \"Disconnected\",\r\n    Disconnecting = \"Disconnecting\",\r\n}\r\n\r\n/** @private */\r\nexport interface INegotiateResponse {\r\n    connectionId?: string;\r\n    connectionToken?: string;\r\n    negotiateVersion?: number;\r\n    availableTransports?: IAvailableTransport[];\r\n    url?: string;\r\n    accessToken?: string;\r\n    error?: string;\r\n}\r\n\r\n/** @private */\r\nexport interface IAvailableTransport {\r\n    transport: keyof typeof HttpTransportType;\r\n    transferFormats: (keyof typeof TransferFormat)[];\r\n}\r\n\r\nconst MAX_REDIRECTS = 100;\r\n\r\n/** @private */\r\nexport class HttpConnection implements IConnection {\r\n    private _connectionState: ConnectionState;\r\n    // connectionStarted is tracked independently from connectionState, so we can check if the\r\n    // connection ever did successfully transition from connecting to connected before disconnecting.\r\n    private _connectionStarted: boolean;\r\n    private readonly _httpClient: HttpClient;\r\n    private readonly _logger: ILogger;\r\n    private readonly _options: IHttpConnectionOptions;\r\n    // Needs to not start with _ to be available for tests\r\n    // eslint-disable-next-line @typescript-eslint/naming-convention\r\n    private transport?: ITransport;\r\n    private _startInternalPromise?: Promise<void>;\r\n    private _stopPromise?: Promise<void>;\r\n    private _stopPromiseResolver: (value?: PromiseLike<void>) => void = () => {};\r\n    private _stopError?: Error;\r\n    private _accessTokenFactory?: () => string | Promise<string>;\r\n    private _sendQueue?: TransportSendQueue;\r\n\r\n    public readonly features: any = {};\r\n    public baseUrl: string;\r\n    public connectionId?: string;\r\n    public onreceive: ((data: string | ArrayBuffer) => void) | null;\r\n    public onclose: ((e?: Error) => void) | null;\r\n\r\n    private readonly _negotiateVersion: number = 1;\r\n\r\n    constructor(url: string, options: IHttpConnectionOptions = {}) {\r\n        Arg.isRequired(url, \"url\");\r\n\r\n        this._logger = createLogger(options.logger);\r\n        this.baseUrl = this._resolveUrl(url);\r\n\r\n        options = options || {};\r\n        options.logMessageContent = options.logMessageContent === undefined ? false : options.logMessageContent;\r\n        if (typeof options.withCredentials === \"boolean\" || options.withCredentials === undefined) {\r\n            options.withCredentials = options.withCredentials === undefined ? true : options.withCredentials;\r\n        } else {\r\n            throw new Error(\"withCredentials option was not a 'boolean' or 'undefined' value\");\r\n        }\r\n        options.timeout = options.timeout === undefined ? 100 * 1000 : options.timeout;\r\n\r\n        let webSocketModule: any = null;\r\n        let eventSourceModule: any = null;\r\n\r\n        if (Platform.isNode && typeof require !== \"undefined\") {\r\n            // In order to ignore the dynamic require in webpack builds we need to do this magic\r\n            // @ts-ignore: TS doesn't know about these names\r\n            const requireFunc = typeof __webpack_require__ === \"function\" ? __non_webpack_require__ : require;\r\n            webSocketModule = requireFunc(\"ws\");\r\n            eventSourceModule = requireFunc(\"eventsource\");\r\n        }\r\n\r\n        if (!Platform.isNode && typeof WebSocket !== \"undefined\" && !options.WebSocket) {\r\n            options.WebSocket = WebSocket;\r\n        } else if (Platform.isNode && !options.WebSocket) {\r\n            if (webSocketModule) {\r\n                options.WebSocket = webSocketModule;\r\n            }\r\n        }\r\n\r\n        if (!Platform.isNode && typeof EventSource !== \"undefined\" && !options.EventSource) {\r\n            options.EventSource = EventSource;\r\n        } else if (Platform.isNode && !options.EventSource) {\r\n            if (typeof eventSourceModule !== \"undefined\") {\r\n                options.EventSource = eventSourceModule;\r\n            }\r\n        }\r\n\r\n        this._httpClient = options.httpClient || new DefaultHttpClient(this._logger);\r\n        this._connectionState = ConnectionState.Disconnected;\r\n        this._connectionStarted = false;\r\n        this._options = options;\r\n\r\n        this.onreceive = null;\r\n        this.onclose = null;\r\n    }\r\n\r\n    public start(): Promise<void>;\r\n    public start(transferFormat: TransferFormat): Promise<void>;\r\n    public async start(transferFormat?: TransferFormat): Promise<void> {\r\n        transferFormat = transferFormat || TransferFormat.Binary;\r\n\r\n        Arg.isIn(transferFormat, TransferFormat, \"transferFormat\");\r\n\r\n        this._logger.log(LogLevel.Debug, `Starting connection with transfer format '${TransferFormat[transferFormat]}'.`);\r\n\r\n        if (this._connectionState !== ConnectionState.Disconnected) {\r\n            return Promise.reject(new Error(\"Cannot start an HttpConnection that is not in the 'Disconnected' state.\"));\r\n        }\r\n\r\n        this._connectionState = ConnectionState.Connecting;\r\n\r\n        this._startInternalPromise = this._startInternal(transferFormat);\r\n        await this._startInternalPromise;\r\n\r\n        // The TypeScript compiler thinks that connectionState must be Connecting here. The TypeScript compiler is wrong.\r\n        if (this._connectionState as any === ConnectionState.Disconnecting) {\r\n            // stop() was called and transitioned the client into the Disconnecting state.\r\n            const message = \"Failed to start the HttpConnection before stop() was called.\";\r\n            this._logger.log(LogLevel.Error, message);\r\n\r\n            // We cannot await stopPromise inside startInternal since stopInternal awaits the startInternalPromise.\r\n            await this._stopPromise;\r\n\r\n            return Promise.reject(new Error(message));\r\n        } else if (this._connectionState as any !== ConnectionState.Connected) {\r\n            // stop() was called and transitioned the client into the Disconnecting state.\r\n            const message = \"HttpConnection.startInternal completed gracefully but didn't enter the connection into the connected state!\";\r\n            this._logger.log(LogLevel.Error, message);\r\n            return Promise.reject(new Error(message));\r\n        }\r\n\r\n        this._connectionStarted = true;\r\n    }\r\n\r\n    public send(data: string | ArrayBuffer): Promise<void> {\r\n        if (this._connectionState !== ConnectionState.Connected) {\r\n            return Promise.reject(new Error(\"Cannot send data if the connection is not in the 'Connected' State.\"));\r\n        }\r\n\r\n        if (!this._sendQueue) {\r\n            this._sendQueue = new TransportSendQueue(this.transport!);\r\n        }\r\n\r\n        // Transport will not be null if state is connected\r\n        return this._sendQueue.send(data);\r\n    }\r\n\r\n    public async stop(error?: Error): Promise<void> {\r\n        if (this._connectionState === ConnectionState.Disconnected) {\r\n            this._logger.log(LogLevel.Debug, `Call to HttpConnection.stop(${error}) ignored because the connection is already in the disconnected state.`);\r\n            return Promise.resolve();\r\n        }\r\n\r\n        if (this._connectionState === ConnectionState.Disconnecting) {\r\n            this._logger.log(LogLevel.Debug, `Call to HttpConnection.stop(${error}) ignored because the connection is already in the disconnecting state.`);\r\n            return this._stopPromise;\r\n        }\r\n\r\n        this._connectionState = ConnectionState.Disconnecting;\r\n\r\n        this._stopPromise = new Promise((resolve) => {\r\n            // Don't complete stop() until stopConnection() completes.\r\n            this._stopPromiseResolver = resolve;\r\n        });\r\n\r\n        // stopInternal should never throw so just observe it.\r\n        await this._stopInternal(error);\r\n        await this._stopPromise;\r\n    }\r\n\r\n    private async _stopInternal(error?: Error): Promise<void> {\r\n        // Set error as soon as possible otherwise there is a race between\r\n        // the transport closing and providing an error and the error from a close message\r\n        // We would prefer the close message error.\r\n        this._stopError = error;\r\n\r\n        try {\r\n            await this._startInternalPromise;\r\n        } catch (e) {\r\n            // This exception is returned to the user as a rejected Promise from the start method.\r\n        }\r\n\r\n        // The transport's onclose will trigger stopConnection which will run our onclose event.\r\n        // The transport should always be set if currently connected. If it wasn't set, it's likely because\r\n        // stop was called during start() and start() failed.\r\n        if (this.transport) {\r\n            try {\r\n                await this.transport.stop();\r\n            } catch (e) {\r\n                this._logger.log(LogLevel.Error, `HttpConnection.transport.stop() threw error '${e}'.`);\r\n                this._stopConnection();\r\n            }\r\n\r\n            this.transport = undefined;\r\n        } else {\r\n            this._logger.log(LogLevel.Debug, \"HttpConnection.transport is undefined in HttpConnection.stop() because start() failed.\");\r\n        }\r\n    }\r\n\r\n    private async _startInternal(transferFormat: TransferFormat): Promise<void> {\r\n        // Store the original base url and the access token factory since they may change\r\n        // as part of negotiating\r\n        let url = this.baseUrl;\r\n        this._accessTokenFactory = this._options.accessTokenFactory;\r\n\r\n        try {\r\n            if (this._options.skipNegotiation) {\r\n                if (this._options.transport === HttpTransportType.WebSockets) {\r\n                    // No need to add a connection ID in this case\r\n                    this.transport = this._constructTransport(HttpTransportType.WebSockets);\r\n                    // We should just call connect directly in this case.\r\n                    // No fallback or negotiate in this case.\r\n                    await this._startTransport(url, transferFormat);\r\n                } else {\r\n                    throw new Error(\"Negotiation can only be skipped when using the WebSocket transport directly.\");\r\n                }\r\n            } else {\r\n                let negotiateResponse: INegotiateResponse | null = null;\r\n                let redirects = 0;\r\n\r\n                do {\r\n                    negotiateResponse = await this._getNegotiationResponse(url);\r\n                    // the user tries to stop the connection when it is being started\r\n                    if (this._connectionState === ConnectionState.Disconnecting || this._connectionState === ConnectionState.Disconnected) {\r\n                        throw new Error(\"The connection was stopped during negotiation.\");\r\n                    }\r\n\r\n                    if (negotiateResponse.error) {\r\n                        throw new Error(negotiateResponse.error);\r\n                    }\r\n\r\n                    if ((negotiateResponse as any).ProtocolVersion) {\r\n                        throw new Error(\"Detected a connection attempt to an ASP.NET SignalR Server. This client only supports connecting to an ASP.NET Core SignalR Server. See https://aka.ms/signalr-core-differences for details.\");\r\n                    }\r\n\r\n                    if (negotiateResponse.url) {\r\n                        url = negotiateResponse.url;\r\n                    }\r\n\r\n                    if (negotiateResponse.accessToken) {\r\n                        // Replace the current access token factory with one that uses\r\n                        // the returned access token\r\n                        const accessToken = negotiateResponse.accessToken;\r\n                        this._accessTokenFactory = () => accessToken;\r\n                    }\r\n\r\n                    redirects++;\r\n                }\r\n                while (negotiateResponse.url && redirects < MAX_REDIRECTS);\r\n\r\n                if (redirects === MAX_REDIRECTS && negotiateResponse.url) {\r\n                    throw new Error(\"Negotiate redirection limit exceeded.\");\r\n                }\r\n\r\n                await this._createTransport(url, this._options.transport, negotiateResponse, transferFormat);\r\n            }\r\n\r\n            if (this.transport instanceof LongPollingTransport) {\r\n                this.features.inherentKeepAlive = true;\r\n            }\r\n\r\n            if (this._connectionState === ConnectionState.Connecting) {\r\n                // Ensure the connection transitions to the connected state prior to completing this.startInternalPromise.\r\n                // start() will handle the case when stop was called and startInternal exits still in the disconnecting state.\r\n                this._logger.log(LogLevel.Debug, \"The HttpConnection connected successfully.\");\r\n                this._connectionState = ConnectionState.Connected;\r\n            }\r\n\r\n            // stop() is waiting on us via this.startInternalPromise so keep this.transport around so it can clean up.\r\n            // This is the only case startInternal can exit in neither the connected nor disconnected state because stopConnection()\r\n            // will transition to the disconnected state. start() will wait for the transition using the stopPromise.\r\n        } catch (e) {\r\n            this._logger.log(LogLevel.Error, \"Failed to start the connection: \" + e);\r\n            this._connectionState = ConnectionState.Disconnected;\r\n            this.transport = undefined;\r\n\r\n            // if start fails, any active calls to stop assume that start will complete the stop promise\r\n            this._stopPromiseResolver();\r\n            return Promise.reject(e);\r\n        }\r\n    }\r\n\r\n    private async _getNegotiationResponse(url: string): Promise<INegotiateResponse> {\r\n        const headers: {[k: string]: string} = {};\r\n        if (this._accessTokenFactory) {\r\n            const token = await this._accessTokenFactory();\r\n            if (token) {\r\n                headers[HeaderNames.Authorization] = `Bearer ${token}`;\r\n            }\r\n        }\r\n\r\n        const [name, value] = getUserAgentHeader();\r\n        headers[name] = value;\r\n\r\n        const negotiateUrl = this._resolveNegotiateUrl(url);\r\n        this._logger.log(LogLevel.Debug, `Sending negotiation request: ${negotiateUrl}.`);\r\n        try {\r\n            const response = await this._httpClient.post(negotiateUrl, {\r\n                content: \"\",\r\n                headers: { ...headers, ...this._options.headers },\r\n                timeout: this._options.timeout,\r\n                withCredentials: this._options.withCredentials,\r\n            });\r\n\r\n            if (response.statusCode !== 200) {\r\n                return Promise.reject(new Error(`Unexpected status code returned from negotiate '${response.statusCode}'`));\r\n            }\r\n\r\n            const negotiateResponse = JSON.parse(response.content as string) as INegotiateResponse;\r\n            if (!negotiateResponse.negotiateVersion || negotiateResponse.negotiateVersion < 1) {\r\n                // Negotiate version 0 doesn't use connectionToken\r\n                // So we set it equal to connectionId so all our logic can use connectionToken without being aware of the negotiate version\r\n                negotiateResponse.connectionToken = negotiateResponse.connectionId;\r\n            }\r\n            return negotiateResponse;\r\n        } catch (e) {\r\n            let errorMessage = \"Failed to complete negotiation with the server: \" + e;\r\n            if (e instanceof HttpError) {\r\n                if (e.statusCode === 404) {\r\n                    errorMessage = errorMessage + \" Either this is not a SignalR endpoint or there is a proxy blocking the connection.\";\r\n                }\r\n            }\r\n            this._logger.log(LogLevel.Error, errorMessage);\r\n\r\n            return Promise.reject(new FailedToNegotiateWithServerError(errorMessage));\r\n        }\r\n    }\r\n\r\n    private _createConnectUrl(url: string, connectionToken: string | null | undefined) {\r\n        if (!connectionToken) {\r\n            return url;\r\n        }\r\n\r\n        return url + (url.indexOf(\"?\") === -1 ? \"?\" : \"&\") + `id=${connectionToken}`;\r\n    }\r\n\r\n    private async _createTransport(url: string, requestedTransport: HttpTransportType | ITransport | undefined, negotiateResponse: INegotiateResponse, requestedTransferFormat: TransferFormat): Promise<void> {\r\n        let connectUrl = this._createConnectUrl(url, negotiateResponse.connectionToken);\r\n        if (this._isITransport(requestedTransport)) {\r\n            this._logger.log(LogLevel.Debug, \"Connection was provided an instance of ITransport, using that directly.\");\r\n            this.transport = requestedTransport;\r\n            await this._startTransport(connectUrl, requestedTransferFormat);\r\n\r\n            this.connectionId = negotiateResponse.connectionId;\r\n            return;\r\n        }\r\n\r\n        const transportExceptions: any[] = [];\r\n        const transports = negotiateResponse.availableTransports || [];\r\n        let negotiate: INegotiateResponse | undefined = negotiateResponse;\r\n        for (const endpoint of transports) {\r\n            const transportOrError = this._resolveTransportOrError(endpoint, requestedTransport, requestedTransferFormat);\r\n            if (transportOrError instanceof Error) {\r\n                // Store the error and continue, we don't want to cause a re-negotiate in these cases\r\n                transportExceptions.push(`${endpoint.transport} failed:`);\r\n                transportExceptions.push(transportOrError);\r\n            } else if (this._isITransport(transportOrError)) {\r\n                this.transport = transportOrError;\r\n                if (!negotiate) {\r\n                    try {\r\n                        negotiate = await this._getNegotiationResponse(url);\r\n                    } catch (ex) {\r\n                        return Promise.reject(ex);\r\n                    }\r\n                    connectUrl = this._createConnectUrl(url, negotiate.connectionToken);\r\n                }\r\n                try {\r\n                    await this._startTransport(connectUrl, requestedTransferFormat);\r\n                    this.connectionId = negotiate.connectionId;\r\n                    return;\r\n                } catch (ex) {\r\n                    this._logger.log(LogLevel.Error, `Failed to start the transport '${endpoint.transport}': ${ex}`);\r\n                    negotiate = undefined;\r\n                    transportExceptions.push(new FailedToStartTransportError(`${endpoint.transport} failed: ${ex}`, HttpTransportType[endpoint.transport]));\r\n\r\n                    if (this._connectionState !== ConnectionState.Connecting) {\r\n                        const message = \"Failed to select transport before stop() was called.\";\r\n                        this._logger.log(LogLevel.Debug, message);\r\n                        return Promise.reject(new Error(message));\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (transportExceptions.length > 0) {\r\n            return Promise.reject(new AggregateErrors(`Unable to connect to the server with any of the available transports. ${transportExceptions.join(\" \")}`, transportExceptions));\r\n        }\r\n        return Promise.reject(new Error(\"None of the transports supported by the client are supported by the server.\"));\r\n    }\r\n\r\n    private _constructTransport(transport: HttpTransportType): ITransport {\r\n        switch (transport) {\r\n            case HttpTransportType.WebSockets:\r\n                if (!this._options.WebSocket) {\r\n                    throw new Error(\"'WebSocket' is not supported in your environment.\");\r\n                }\r\n                return new WebSocketTransport(this._httpClient, this._accessTokenFactory, this._logger, this._options.logMessageContent!, this._options.WebSocket, this._options.headers || {});\r\n            case HttpTransportType.ServerSentEvents:\r\n                if (!this._options.EventSource) {\r\n                    throw new Error(\"'EventSource' is not supported in your environment.\");\r\n                }\r\n                return new ServerSentEventsTransport(this._httpClient, this._accessTokenFactory, this._logger, this._options);\r\n            case HttpTransportType.LongPolling:\r\n                return new LongPollingTransport(this._httpClient, this._accessTokenFactory, this._logger, this._options);\r\n            default:\r\n                throw new Error(`Unknown transport: ${transport}.`);\r\n        }\r\n    }\r\n\r\n    private _startTransport(url: string, transferFormat: TransferFormat): Promise<void> {\r\n        this.transport!.onreceive = this.onreceive;\r\n        this.transport!.onclose = (e) => this._stopConnection(e);\r\n        return this.transport!.connect(url, transferFormat);\r\n    }\r\n\r\n    private _resolveTransportOrError(endpoint: IAvailableTransport, requestedTransport: HttpTransportType | undefined, requestedTransferFormat: TransferFormat): ITransport | Error {\r\n        const transport = HttpTransportType[endpoint.transport];\r\n        if (transport === null || transport === undefined) {\r\n            this._logger.log(LogLevel.Debug, `Skipping transport '${endpoint.transport}' because it is not supported by this client.`);\r\n            return new Error(`Skipping transport '${endpoint.transport}' because it is not supported by this client.`);\r\n        } else {\r\n            if (transportMatches(requestedTransport, transport)) {\r\n                const transferFormats = endpoint.transferFormats.map((s) => TransferFormat[s]);\r\n                if (transferFormats.indexOf(requestedTransferFormat) >= 0) {\r\n                    if ((transport === HttpTransportType.WebSockets && !this._options.WebSocket) ||\r\n                        (transport === HttpTransportType.ServerSentEvents && !this._options.EventSource)) {\r\n                        this._logger.log(LogLevel.Debug, `Skipping transport '${HttpTransportType[transport]}' because it is not supported in your environment.'`);\r\n                        return new UnsupportedTransportError(`'${HttpTransportType[transport]}' is not supported in your environment.`, transport);\r\n                    } else {\r\n                        this._logger.log(LogLevel.Debug, `Selecting transport '${HttpTransportType[transport]}'.`);\r\n                        try {\r\n                            return this._constructTransport(transport);\r\n                        } catch (ex) {\r\n                            return ex;\r\n                        }\r\n                    }\r\n                } else {\r\n                    this._logger.log(LogLevel.Debug, `Skipping transport '${HttpTransportType[transport]}' because it does not support the requested transfer format '${TransferFormat[requestedTransferFormat]}'.`);\r\n                    return new Error(`'${HttpTransportType[transport]}' does not support ${TransferFormat[requestedTransferFormat]}.`);\r\n                }\r\n            } else {\r\n                this._logger.log(LogLevel.Debug, `Skipping transport '${HttpTransportType[transport]}' because it was disabled by the client.`);\r\n                return new DisabledTransportError(`'${HttpTransportType[transport]}' is disabled by the client.`, transport);\r\n            }\r\n        }\r\n    }\r\n\r\n    private _isITransport(transport: any): transport is ITransport {\r\n        return transport && typeof (transport) === \"object\" && \"connect\" in transport;\r\n    }\r\n\r\n    private _stopConnection(error?: Error): void {\r\n        this._logger.log(LogLevel.Debug, `HttpConnection.stopConnection(${error}) called while in state ${this._connectionState}.`);\r\n\r\n        this.transport = undefined;\r\n\r\n        // If we have a stopError, it takes precedence over the error from the transport\r\n        error = this._stopError || error;\r\n        this._stopError = undefined;\r\n\r\n        if (this._connectionState === ConnectionState.Disconnected) {\r\n            this._logger.log(LogLevel.Debug, `Call to HttpConnection.stopConnection(${error}) was ignored because the connection is already in the disconnected state.`);\r\n            return;\r\n        }\r\n\r\n        if (this._connectionState === ConnectionState.Connecting) {\r\n            this._logger.log(LogLevel.Warning, `Call to HttpConnection.stopConnection(${error}) was ignored because the connection is still in the connecting state.`);\r\n            throw new Error(`HttpConnection.stopConnection(${error}) was called while the connection is still in the connecting state.`);\r\n        }\r\n\r\n        if (this._connectionState === ConnectionState.Disconnecting) {\r\n            // A call to stop() induced this call to stopConnection and needs to be completed.\r\n            // Any stop() awaiters will be scheduled to continue after the onclose callback fires.\r\n            this._stopPromiseResolver();\r\n        }\r\n\r\n        if (error) {\r\n            this._logger.log(LogLevel.Error, `Connection disconnected with error '${error}'.`);\r\n        } else {\r\n            this._logger.log(LogLevel.Information, \"Connection disconnected.\");\r\n        }\r\n\r\n        if (this._sendQueue) {\r\n            this._sendQueue.stop().catch((e) => {\r\n                this._logger.log(LogLevel.Error, `TransportSendQueue.stop() threw error '${e}'.`);\r\n            });\r\n            this._sendQueue = undefined;\r\n        }\r\n\r\n        this.connectionId = undefined;\r\n        this._connectionState = ConnectionState.Disconnected;\r\n\r\n        if (this._connectionStarted) {\r\n            this._connectionStarted = false;\r\n            try {\r\n                if (this.onclose) {\r\n                    this.onclose(error);\r\n                }\r\n            } catch (e) {\r\n                this._logger.log(LogLevel.Error, `HttpConnection.onclose(${error}) threw error '${e}'.`);\r\n            }\r\n        }\r\n    }\r\n\r\n    private _resolveUrl(url: string): string {\r\n        // startsWith is not supported in IE\r\n        if (url.lastIndexOf(\"https://\", 0) === 0 || url.lastIndexOf(\"http://\", 0) === 0) {\r\n            return url;\r\n        }\r\n\r\n        if (!Platform.isBrowser) {\r\n            throw new Error(`Cannot resolve '${url}'.`);\r\n        }\r\n\r\n        // Setting the url to the href propery of an anchor tag handles normalization\r\n        // for us. There are 3 main cases.\r\n        // 1. Relative path normalization e.g \"b\" -> \"http://localhost:5000/a/b\"\r\n        // 2. Absolute path normalization e.g \"/a/b\" -> \"http://localhost:5000/a/b\"\r\n        // 3. Networkpath reference normalization e.g \"//localhost:5000/a/b\" -> \"http://localhost:5000/a/b\"\r\n        const aTag = window.document.createElement(\"a\");\r\n        aTag.href = url;\r\n\r\n        this._logger.log(LogLevel.Information, `Normalizing '${url}' to '${aTag.href}'.`);\r\n        return aTag.href;\r\n    }\r\n\r\n    private _resolveNegotiateUrl(url: string): string {\r\n        const index = url.indexOf(\"?\");\r\n        let negotiateUrl = url.substring(0, index === -1 ? url.length : index);\r\n        if (negotiateUrl[negotiateUrl.length - 1] !== \"/\") {\r\n            negotiateUrl += \"/\";\r\n        }\r\n        negotiateUrl += \"negotiate\";\r\n        negotiateUrl += index === -1 ? \"\" : url.substring(index);\r\n\r\n        if (negotiateUrl.indexOf(\"negotiateVersion\") === -1) {\r\n            negotiateUrl += index === -1 ? \"?\" : \"&\";\r\n            negotiateUrl += \"negotiateVersion=\" + this._negotiateVersion;\r\n        }\r\n        return negotiateUrl;\r\n    }\r\n}\r\n\r\nfunction transportMatches(requestedTransport: HttpTransportType | undefined, actualTransport: HttpTransportType) {\r\n    return !requestedTransport || ((actualTransport & requestedTransport) !== 0);\r\n}\r\n\r\n/** @private */\r\nexport class TransportSendQueue {\r\n    private _buffer: any[] = [];\r\n    private _sendBufferedData: PromiseSource;\r\n    private _executing: boolean = true;\r\n    private _transportResult?: PromiseSource;\r\n    private _sendLoopPromise: Promise<void>;\r\n\r\n    constructor(private readonly _transport: ITransport) {\r\n        this._sendBufferedData = new PromiseSource();\r\n        this._transportResult = new PromiseSource();\r\n\r\n        this._sendLoopPromise = this._sendLoop();\r\n    }\r\n\r\n    public send(data: string | ArrayBuffer): Promise<void> {\r\n        this._bufferData(data);\r\n        if (!this._transportResult) {\r\n            this._transportResult = new PromiseSource();\r\n        }\r\n        return this._transportResult.promise;\r\n    }\r\n\r\n    public stop(): Promise<void> {\r\n        this._executing = false;\r\n        this._sendBufferedData.resolve();\r\n        return this._sendLoopPromise;\r\n    }\r\n\r\n    private _bufferData(data: string | ArrayBuffer): void {\r\n        if (this._buffer.length && typeof(this._buffer[0]) !== typeof(data)) {\r\n            throw new Error(`Expected data to be of type ${typeof(this._buffer)} but was of type ${typeof(data)}`);\r\n        }\r\n\r\n        this._buffer.push(data);\r\n        this._sendBufferedData.resolve();\r\n    }\r\n\r\n    private async _sendLoop(): Promise<void> {\r\n        while (true) {\r\n            await this._sendBufferedData.promise;\r\n\r\n            if (!this._executing) {\r\n                if (this._transportResult) {\r\n                    this._transportResult.reject(\"Connection stopped.\");\r\n                }\r\n\r\n                break;\r\n            }\r\n\r\n            this._sendBufferedData = new PromiseSource();\r\n\r\n            const transportResult = this._transportResult!;\r\n            this._transportResult = undefined;\r\n\r\n            const data = typeof(this._buffer[0]) === \"string\" ?\r\n                this._buffer.join(\"\") :\r\n                TransportSendQueue._concatBuffers(this._buffer);\r\n\r\n            this._buffer.length = 0;\r\n\r\n            try {\r\n                await this._transport.send(data);\r\n                transportResult.resolve();\r\n            } catch (error) {\r\n                transportResult.reject(error);\r\n            }\r\n        }\r\n    }\r\n\r\n    private static _concatBuffers(arrayBuffers: ArrayBuffer[]): ArrayBuffer {\r\n        const totalLength = arrayBuffers.map((b) => b.byteLength).reduce((a, b) => a + b);\r\n        const result = new Uint8Array(totalLength);\r\n        let offset = 0;\r\n        for (const item of arrayBuffers) {\r\n            result.set(new Uint8Array(item), offset);\r\n            offset += item.byteLength;\r\n        }\r\n\r\n        return result.buffer;\r\n    }\r\n}\r\n\r\nclass PromiseSource {\r\n    private _resolver?: () => void;\r\n    private _rejecter!: (reason?: any) => void;\r\n    public promise: Promise<void>;\r\n\r\n    constructor() {\r\n        this.promise = new Promise((resolve, reject) => [this._resolver, this._rejecter] = [resolve, reject]);\r\n    }\r\n\r\n    public resolve(): void {\r\n        this._resolver!();\r\n    }\r\n\r\n    public reject(reason?: any): void {\r\n        this._rejecter!(reason);\r\n    }\r\n}\r\n", "// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\n\r\nimport { CompletionMessage, HubMessage, IHubProtocol, InvocationMessage, MessageType, StreamItemMessage } from \"./IHubProtocol\";\r\nimport { ILogger, LogLevel } from \"./ILogger\";\r\nimport { TransferFormat } from \"./ITransport\";\r\nimport { NullLogger } from \"./Loggers\";\r\nimport { TextMessageFormat } from \"./TextMessageFormat\";\r\n\r\nconst JSON_HUB_PROTOCOL_NAME: string = \"json\";\r\n\r\n/** Implements the JSON Hub Protocol. */\r\nexport class JsonHubProtocol implements IHubProtocol {\r\n\r\n    /** @inheritDoc */\r\n    public readonly name: string = JSON_HUB_PROTOCOL_NAME;\r\n    /** @inheritDoc */\r\n    public readonly version: number = 1;\r\n\r\n    /** @inheritDoc */\r\n    public readonly transferFormat: TransferFormat = TransferFormat.Text;\r\n\r\n    /** Creates an array of {@link @microsoft/signalr.HubMessage} objects from the specified serialized representation.\r\n     *\r\n     * @param {string} input A string containing the serialized representation.\r\n     * @param {ILogger} logger A logger that will be used to log messages that occur during parsing.\r\n     */\r\n    public parseMessages(input: string, logger: ILogger): HubMessage[] {\r\n        // The interface does allow \"ArrayBuffer\" to be passed in, but this implementation does not. So let's throw a useful error.\r\n        if (typeof input !== \"string\") {\r\n            throw new Error(\"Invalid input for JSON hub protocol. Expected a string.\");\r\n        }\r\n\r\n        if (!input) {\r\n            return [];\r\n        }\r\n\r\n        if (logger === null) {\r\n            logger = NullLogger.instance;\r\n        }\r\n\r\n        // Parse the messages\r\n        const messages = TextMessageFormat.parse(input);\r\n\r\n        const hubMessages = [];\r\n        for (const message of messages) {\r\n            const parsedMessage = JSON.parse(message) as HubMessage;\r\n            if (typeof parsedMessage.type !== \"number\") {\r\n                throw new Error(\"Invalid payload.\");\r\n            }\r\n            switch (parsedMessage.type) {\r\n                case MessageType.Invocation:\r\n                    this._isInvocationMessage(parsedMessage);\r\n                    break;\r\n                case MessageType.StreamItem:\r\n                    this._isStreamItemMessage(parsedMessage);\r\n                    break;\r\n                case MessageType.Completion:\r\n                    this._isCompletionMessage(parsedMessage);\r\n                    break;\r\n                case MessageType.Ping:\r\n                    // Single value, no need to validate\r\n                    break;\r\n                case MessageType.Close:\r\n                    // All optional values, no need to validate\r\n                    break;\r\n                default:\r\n                    // Future protocol changes can add message types, old clients can ignore them\r\n                    logger.log(LogLevel.Information, \"Unknown message type '\" + parsedMessage.type + \"' ignored.\");\r\n                    continue;\r\n            }\r\n            hubMessages.push(parsedMessage);\r\n        }\r\n\r\n        return hubMessages;\r\n    }\r\n\r\n    /** Writes the specified {@link @microsoft/signalr.HubMessage} to a string and returns it.\r\n     *\r\n     * @param {HubMessage} message The message to write.\r\n     * @returns {string} A string containing the serialized representation of the message.\r\n     */\r\n    public writeMessage(message: HubMessage): string {\r\n        return TextMessageFormat.write(JSON.stringify(message));\r\n    }\r\n\r\n    private _isInvocationMessage(message: InvocationMessage): void {\r\n        this._assertNotEmptyString(message.target, \"Invalid payload for Invocation message.\");\r\n\r\n        if (message.invocationId !== undefined) {\r\n            this._assertNotEmptyString(message.invocationId, \"Invalid payload for Invocation message.\");\r\n        }\r\n    }\r\n\r\n    private _isStreamItemMessage(message: StreamItemMessage): void {\r\n        this._assertNotEmptyString(message.invocationId, \"Invalid payload for StreamItem message.\");\r\n\r\n        if (message.item === undefined) {\r\n            throw new Error(\"Invalid payload for StreamItem message.\");\r\n        }\r\n    }\r\n\r\n    private _isCompletionMessage(message: CompletionMessage): void {\r\n        if (message.result && message.error) {\r\n            throw new Error(\"Invalid payload for Completion message.\");\r\n        }\r\n\r\n        if (!message.result && message.error) {\r\n            this._assertNotEmptyString(message.error, \"Invalid payload for Completion message.\");\r\n        }\r\n\r\n        this._assertNotEmptyString(message.invocationId, \"Invalid payload for Completion message.\");\r\n    }\r\n\r\n    private _assertNotEmptyString(value: any, errorMessage: string): void {\r\n        if (typeof value !== \"string\" || value === \"\") {\r\n            throw new Error(errorMessage);\r\n        }\r\n    }\r\n}\r\n", "// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\n\r\nimport { DefaultReconnectPolicy } from \"./DefaultReconnectPolicy\";\r\nimport { HttpConnection } from \"./HttpConnection\";\r\nimport { HubConnection } from \"./HubConnection\";\r\nimport { IHttpConnectionOptions } from \"./IHttpConnectionOptions\";\r\nimport { IHubProtocol } from \"./IHubProtocol\";\r\nimport { ILogger, LogLevel } from \"./ILogger\";\r\nimport { IRetryPolicy } from \"./IRetryPolicy\";\r\nimport { HttpTransportType } from \"./ITransport\";\r\nimport { JsonHubProtocol } from \"./JsonHubProtocol\";\r\nimport { NullLogger } from \"./Loggers\";\r\nimport { Arg, ConsoleLogger } from \"./Utils\";\r\n\r\nconst LogLevelNameMapping: {[k: string]: LogLevel} = {\r\n    trace: LogLevel.Trace,\r\n    debug: LogLevel.Debug,\r\n    info: LogLevel.Information,\r\n    information: LogLevel.Information,\r\n    warn: LogLevel.Warning,\r\n    warning: LogLevel.Warning,\r\n    error: LogLevel.Error,\r\n    critical: LogLevel.Critical,\r\n    none: LogLevel.None,\r\n};\r\n\r\nfunction parseLogLevel(name: string): LogLevel {\r\n    // Case-insensitive matching via lower-casing\r\n    // Yes, I know case-folding is a complicated problem in Unicode, but we only support\r\n    // the ASCII strings defined in LogLevelNameMapping anyway, so it's fine -anurse.\r\n    const mapping = LogLevelNameMapping[name.toLowerCase()];\r\n    if (typeof mapping !== \"undefined\") {\r\n        return mapping;\r\n    } else {\r\n        throw new Error(`Unknown log level: ${name}`);\r\n    }\r\n}\r\n\r\n/** A builder for configuring {@link @microsoft/signalr.HubConnection} instances. */\r\nexport class HubConnectionBuilder {\r\n    /** @internal */\r\n    public protocol?: IHubProtocol;\r\n    /** @internal */\r\n    public httpConnectionOptions?: IHttpConnectionOptions;\r\n    /** @internal */\r\n    public url?: string;\r\n    /** @internal */\r\n    public logger?: ILogger;\r\n\r\n    /** If defined, this indicates the client should automatically attempt to reconnect if the connection is lost. */\r\n    /** @internal */\r\n    public reconnectPolicy?: IRetryPolicy;\r\n\r\n    /** Configures console logging for the {@link @microsoft/signalr.HubConnection}.\r\n     *\r\n     * @param {LogLevel} logLevel The minimum level of messages to log. Anything at this level, or a more severe level, will be logged.\r\n     * @returns The {@link @microsoft/signalr.HubConnectionBuilder} instance, for chaining.\r\n     */\r\n    public configureLogging(logLevel: LogLevel): HubConnectionBuilder;\r\n\r\n    /** Configures custom logging for the {@link @microsoft/signalr.HubConnection}.\r\n     *\r\n     * @param {ILogger} logger An object implementing the {@link @microsoft/signalr.ILogger} interface, which will be used to write all log messages.\r\n     * @returns The {@link @microsoft/signalr.HubConnectionBuilder} instance, for chaining.\r\n     */\r\n    public configureLogging(logger: ILogger): HubConnectionBuilder;\r\n\r\n    /** Configures custom logging for the {@link @microsoft/signalr.HubConnection}.\r\n     *\r\n     * @param {string} logLevel A string representing a LogLevel setting a minimum level of messages to log.\r\n     *    See {@link https://docs.microsoft.com/aspnet/core/signalr/configuration#configure-logging|the documentation for client logging configuration} for more details.\r\n     */\r\n    public configureLogging(logLevel: string): HubConnectionBuilder;\r\n\r\n    /** Configures custom logging for the {@link @microsoft/signalr.HubConnection}.\r\n     *\r\n     * @param {LogLevel | string | ILogger} logging A {@link @microsoft/signalr.LogLevel}, a string representing a LogLevel, or an object implementing the {@link @microsoft/signalr.ILogger} interface.\r\n     *    See {@link https://docs.microsoft.com/aspnet/core/signalr/configuration#configure-logging|the documentation for client logging configuration} for more details.\r\n     * @returns The {@link @microsoft/signalr.HubConnectionBuilder} instance, for chaining.\r\n     */\r\n    public configureLogging(logging: LogLevel | string | ILogger): HubConnectionBuilder;\r\n    public configureLogging(logging: LogLevel | string | ILogger): HubConnectionBuilder {\r\n        Arg.isRequired(logging, \"logging\");\r\n\r\n        if (isLogger(logging)) {\r\n            this.logger = logging;\r\n        } else if (typeof logging === \"string\") {\r\n            const logLevel = parseLogLevel(logging);\r\n            this.logger = new ConsoleLogger(logLevel);\r\n        } else {\r\n            this.logger = new ConsoleLogger(logging);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /** Configures the {@link @microsoft/signalr.HubConnection} to use HTTP-based transports to connect to the specified URL.\r\n     *\r\n     * The transport will be selected automatically based on what the server and client support.\r\n     *\r\n     * @param {string} url The URL the connection will use.\r\n     * @returns The {@link @microsoft/signalr.HubConnectionBuilder} instance, for chaining.\r\n     */\r\n    public withUrl(url: string): HubConnectionBuilder;\r\n\r\n    /** Configures the {@link @microsoft/signalr.HubConnection} to use the specified HTTP-based transport to connect to the specified URL.\r\n     *\r\n     * @param {string} url The URL the connection will use.\r\n     * @param {HttpTransportType} transportType The specific transport to use.\r\n     * @returns The {@link @microsoft/signalr.HubConnectionBuilder} instance, for chaining.\r\n     */\r\n    public withUrl(url: string, transportType: HttpTransportType): HubConnectionBuilder;\r\n\r\n    /** Configures the {@link @microsoft/signalr.HubConnection} to use HTTP-based transports to connect to the specified URL.\r\n     *\r\n     * @param {string} url The URL the connection will use.\r\n     * @param {IHttpConnectionOptions} options An options object used to configure the connection.\r\n     * @returns The {@link @microsoft/signalr.HubConnectionBuilder} instance, for chaining.\r\n     */\r\n    public withUrl(url: string, options: IHttpConnectionOptions): HubConnectionBuilder;\r\n    public withUrl(url: string, transportTypeOrOptions?: IHttpConnectionOptions | HttpTransportType): HubConnectionBuilder {\r\n        Arg.isRequired(url, \"url\");\r\n        Arg.isNotEmpty(url, \"url\");\r\n\r\n        this.url = url;\r\n\r\n        // Flow-typing knows where it's at. Since HttpTransportType is a number and IHttpConnectionOptions is guaranteed\r\n        // to be an object, we know (as does TypeScript) this comparison is all we need to figure out which overload was called.\r\n        if (typeof transportTypeOrOptions === \"object\") {\r\n            this.httpConnectionOptions = { ...this.httpConnectionOptions, ...transportTypeOrOptions };\r\n        } else {\r\n            this.httpConnectionOptions = {\r\n                ...this.httpConnectionOptions,\r\n                transport: transportTypeOrOptions,\r\n            };\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /** Configures the {@link @microsoft/signalr.HubConnection} to use the specified Hub Protocol.\r\n     *\r\n     * @param {IHubProtocol} protocol The {@link @microsoft/signalr.IHubProtocol} implementation to use.\r\n     */\r\n    public withHubProtocol(protocol: IHubProtocol): HubConnectionBuilder {\r\n        Arg.isRequired(protocol, \"protocol\");\r\n\r\n        this.protocol = protocol;\r\n        return this;\r\n    }\r\n\r\n    /** Configures the {@link @microsoft/signalr.HubConnection} to automatically attempt to reconnect if the connection is lost.\r\n     * By default, the client will wait 0, 2, 10 and 30 seconds respectively before trying up to 4 reconnect attempts.\r\n     */\r\n    public withAutomaticReconnect(): HubConnectionBuilder;\r\n\r\n    /** Configures the {@link @microsoft/signalr.HubConnection} to automatically attempt to reconnect if the connection is lost.\r\n     *\r\n     * @param {number[]} retryDelays An array containing the delays in milliseconds before trying each reconnect attempt.\r\n     * The length of the array represents how many failed reconnect attempts it takes before the client will stop attempting to reconnect.\r\n     */\r\n    public withAutomaticReconnect(retryDelays: number[]): HubConnectionBuilder;\r\n\r\n    /** Configures the {@link @microsoft/signalr.HubConnection} to automatically attempt to reconnect if the connection is lost.\r\n     *\r\n     * @param {IRetryPolicy} reconnectPolicy An {@link @microsoft/signalR.IRetryPolicy} that controls the timing and number of reconnect attempts.\r\n     */\r\n    public withAutomaticReconnect(reconnectPolicy: IRetryPolicy): HubConnectionBuilder;\r\n    public withAutomaticReconnect(retryDelaysOrReconnectPolicy?: number[] | IRetryPolicy): HubConnectionBuilder {\r\n        if (this.reconnectPolicy) {\r\n            throw new Error(\"A reconnectPolicy has already been set.\");\r\n        }\r\n\r\n        if (!retryDelaysOrReconnectPolicy) {\r\n            this.reconnectPolicy = new DefaultReconnectPolicy();\r\n        } else if (Array.isArray(retryDelaysOrReconnectPolicy)) {\r\n            this.reconnectPolicy = new DefaultReconnectPolicy(retryDelaysOrReconnectPolicy);\r\n        } else {\r\n            this.reconnectPolicy = retryDelaysOrReconnectPolicy;\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /** Creates a {@link @microsoft/signalr.HubConnection} from the configuration options specified in this builder.\r\n     *\r\n     * @returns {HubConnection} The configured {@link @microsoft/signalr.HubConnection}.\r\n     */\r\n    public build(): HubConnection {\r\n        // If httpConnectionOptions has a logger, use it. Otherwise, override it with the one\r\n        // provided to configureLogger\r\n        const httpConnectionOptions = this.httpConnectionOptions || {};\r\n\r\n        // If it's 'null', the user **explicitly** asked for null, don't mess with it.\r\n        if (httpConnectionOptions.logger === undefined) {\r\n            // If our logger is undefined or null, that's OK, the HttpConnection constructor will handle it.\r\n            httpConnectionOptions.logger = this.logger;\r\n        }\r\n\r\n        // Now create the connection\r\n        if (!this.url) {\r\n            throw new Error(\"The 'HubConnectionBuilder.withUrl' method must be called before building the connection.\");\r\n        }\r\n        const connection = new HttpConnection(this.url, httpConnectionOptions);\r\n\r\n        return HubConnection.create(\r\n            connection,\r\n            this.logger || NullLogger.instance,\r\n            this.protocol || new JsonHubProtocol(),\r\n            this.reconnectPolicy);\r\n    }\r\n}\r\n\r\nfunction isLogger(logger: any): logger is ILogger {\r\n    return logger.log !== undefined;\r\n}\r\n", "// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\n\r\n// Everything that users need to access must be exported here. Including interfaces.\r\nexport { AbortSignal } from \"./AbortController\";\r\nexport { AbortError, HttpError, TimeoutError } from \"./Errors\";\r\nexport { HttpClient, HttpRequest, HttpResponse } from \"./HttpClient\";\r\nexport { DefaultHttpClient } from \"./DefaultHttpClient\";\r\nexport { IHttpConnectionOptions } from \"./IHttpConnectionOptions\";\r\nexport { HubConnection, HubConnectionState } from \"./HubConnection\";\r\nexport { HubConnectionBuilder } from \"./HubConnectionBuilder\";\r\nexport { MessageType, MessageHeaders, HubMessage, HubMessageBase, HubInvocationMessage, InvocationMessage, StreamInvocationMessage, StreamItemMessage, CompletionMessage,\r\n    PingMessage, CloseMessage, CancelInvocationMessage, IHubProtocol } from \"./IHubProtocol\";\r\nexport { ILogger, LogLevel } from \"./ILogger\";\r\nexport { HttpTransportType, TransferFormat, ITransport } from \"./ITransport\";\r\nexport { IStreamSubscriber, IStreamResult, ISubscription } from \"./Stream\";\r\nexport { NullLogger } from \"./Loggers\";\r\nexport { JsonHubProtocol } from \"./JsonHubProtocol\";\r\nexport { Subject } from \"./Subject\";\r\nexport { IRetryPolicy, RetryContext } from \"./IRetryPolicy\";\r\nexport { VERSION } from \"./Utils\";\r\n", "// eslint-disable-next-line eslint-comments/disable-enable-pair\n/* eslint-disable @typescript-eslint/no-floating-promises */\nimport * as signalR from '@microsoft/signalr';\n\nimport { z } from \"zod\"\n\nimport { MockConnectionBuilder } from \"./mock/MockConnectionBuilder\"\nexport { z, MockConnectionBuilder }\n\ninterface Listeners {\n    onStreamerSettings?: (streamerSettings: z.infer<typeof MapOptions>) => void\n    onSuccessfulGuess?: () => void,\n    onFailedGuess?: (error: string, text?: string) => void,\n    onGameStart?: (mapGameSettings: z.infer<typeof MapGameSettings>) => void,\n    onRoundStart?: (mapRoundStart: z.infer<typeof MapRoundSettings>) => void,\n    onRoundEnd?: (mapRoundResult: z.infer<typeof MapRoundResult>) => void,\n    onGameEnd?: (mapGameEndResult: z.infer<typeof MapGameEndResult>) => void,\n    onGameExit?: () => void,\n}\n//END GAME\n// {\"type\":1,\"target\":\"EndGame\",\"arguments\":[[{\"displayName\":\"rhinoooo_\",\"userName\":\"rhinoooo_\",\"profilePicUrl\":\"https://static-cdn.jtvnw.net/jtv_user_pictures/90323d58-8ce7-4e9a-9128-8fe46bacc4dd-profile_image-300x300.png\",\"wasRandom\":false,\"score\":4997,\"distance\":0.8161156737972088,\"timeTaken\":14779,\"streak\":1,\"countryCode\":null,\"exactCountryCode\":null,\"guessCount\":1,\"isStreamerResult\":false,\"guessedBefore\":false},{\"displayName\":\"Soeren_______\",\"userName\":\"soeren_______\",\"profilePicUrl\":\"https://static-cdn.jtvnw.net/jtv_user_pictures/b069cbe1-b70a-4b54-b8bb-b4d928bff8ba-profile_image-300x300.png\",\"wasRandom\":false,\"score\":4643,\"distance\":12476.826501381793,\"timeTaken\":52130,\"streak\":1,\"countryCode\":null,\"exactCountryCode\":null,\"guessCount\":2,\"isStreamerResult\":false,\"guessedBefore\":false},{\"displayName\":\"GeoChatter\",\"userName\":\"geochatter\",\"profilePicUrl\":\"https://static-cdn.jtvnw.net/jtv_user_pictures/73797ad7-6d0e-43ec-82cb-6be968562f86-profile_image-300x300.png\",\"wasRandom\":false,\"score\":971,\"distance\":36192.18396014681,\"timeTaken\":132966,\"streak\":0,\"countryCode\":null,\"exactCountryCode\":null,\"guessCount\":5,\"isStreamerResult\":true,\"guessedBefore\":false}]]}\u001E\n\n\n\n// helper to allow sleeping \nconst sleep = (ms: number) => new Promise(r => setTimeout(r, ms));\n\n\nexport class GCSocketClient {\n    connection: signalR.HubConnection | MockConnectionBuilder[\"connection\"]\n    private listeners?: Listeners\n    private _streamerCode: string\n    private running = false\n\n\n    /**\n     * The constructor for the class. It is called when the class is instantiated.\n     * @param {string} url - The url of the signalR hub from GeoChatter.\n     * @param {string} [streamerCode] - The streamer code is the code that is used on the Server to send the Guess to the right client.\n     * @param {Listeners} [listeners] - Listeners trigger a callback that should handle the app state on /map or in the twitch extension for example when streamerSettings change.\n     */\n    constructor(url: string, streamerCode: string, listeners: Listeners, connectionBuilder: signalR.HubConnectionBuilder | MockConnectionBuilder = new signalR.HubConnectionBuilder) {\n\n        const result = z.string().url().safeParse(url)\n        if (result.success) {\n            this.connection = connectionBuilder.withUrl(result.data, {}).build();\n            this._streamerCode = streamerCode\n            this.listeners = listeners\n            this.#start()\n        }\n        else {\n            throw result.error\n        }\n\n    }\n\n    /**\n     * It sets the streamer code and logs in to the map.\n     * @param {string | undefined} streamerCode - The streamer code that you get from the streamer(used to be the bot name).\n     */\n    set streamerCode(streamerCode: string) {\n        if (!streamerCode) {\n            console.warn(\"no streamer code given\")\n        }\n        this._streamerCode = streamerCode\n        console.info(\"new streamer code\", streamerCode)\n        this.#logInToMap()\n    }\n\n    /**\n     * It returns the value of the private variable _streamerCode.\n     * @returns The streamerCode property is being returned.\n     */\n    get streamerCode(): (string) {\n        return this._streamerCode\n    }\n\n    /**\n     * It starts the connection, logs in to the map, listens to streamer settings it got back from the map login and listens to problems\n     */\n    async #start() {\n        if (this.running) {\n            console.warn(\"don't use start again! use reconnect instead\")\n        }\n        await this.connection.start()\n        await this.#logInToMap()\n        this.#listenToStreamerSettings()\n        this.#listenToProblems()\n        this.#listenToGameStart()\n        this.#listenToRoundStart()\n        this.#listenToRoundEnd()\n        this.#listenToGameEnd()\n        this.#listenToGameExit()\n        this.running = true\n    }\n\n    /**\n     * It stops the connection to the SignalR hub.\n     */\n    async stop() {\n        await this.connection.stop()\n    }\n\n    /**\n     * It does not really set anything but it calls the onStreamerSettings listener.\n     * \n     * @param {StreamerSettings} [streamerSettings] - StreamerSettings is an object that contains the streamer settings.\n     */\n    #setStreamerSettings(streamerSettings?: z.infer<typeof MapOptions>) {\n        if (!streamerSettings) {\n            console.warn(\"did'nt receive streamer settings as response\")\n        }\n        else {\n            this.listeners?.onStreamerSettings?.(streamerSettings)\n        }\n    }\n\n    /**\n     * > The function `logInToMap` is a function that calls the `MapLogin` method on the\n     * server and then gets the streamer settings from the server as a response.\n     */\n    async #logInToMap() {\n        const res: unknown = await this.connection.invoke(\"MapLogin\", this.streamerCode)\n        const streamerSettingsRes = MapOptions.safeParse(res)\n        if (streamerSettingsRes.success) {\n            this.#setStreamerSettings(streamerSettingsRes.data)\n        }\n        else {\n            console.error(\"map log in\", streamerSettingsRes.error)\n            console.log(res)\n        }\n    }\n\n    /**\n     * > When the server sends a message called \"SetMapFeatures\", the client will call the\n     * #setStreamerSettings function with the data sent by the server so the listener will be run\n     */\n    #listenToStreamerSettings() {\n        this.connection.on(\"SetMapFeatures\", (streamerSettings: z.infer<typeof MapOptions>) => {\n            this.#setStreamerSettings(streamerSettings)\n        })\n    }\n    /**\n     * It listens to the server for a message called \"StartGame\" and when it receives it, it calls the\n     * onGameStart listener with `mapGameSettings`\n     */\n    #listenToGameStart() {\n        this.connection.on(\"StartGame\", (data: unknown) => {\n\n            const res = MapGameSettings.safeParse(data)\n            if (res.success) {\n                this.listeners?.onGameStart?.(res.data)\n            }\n            else {\n                console.error(\"game start\", res.error)\n            }\n        })\n    }\n\n    /**\n     * It listens to the `StartRound` event from the server and calls the `onRoundStart` listener with the\n     * data from the server\n     */\n    #listenToRoundStart() {\n        this.connection.on(\"StartRound\", (data: unknown) => {\n\n            const res = MapRoundSettings.safeParse(data)\n            if (res.success) {\n                this.listeners?.onRoundStart?.(res.data)\n            }\n            else {\n                console.error(\"round start\", res.error)\n            }\n        })\n    }\n    /**\n     * It listens to the server for the \"EndRound\" event, and when it receives it, it calls the onRoundEnd\n     * function in the listeners object with the MapRoundEnd data from the server\n     */\n    #listenToRoundEnd() {\n        this.connection.on(\"EndRound\", (data: unknown) => {\n\n            const res = MapRoundResult.safeParse(data)\n            if (res.success) {\n                this.listeners?.onRoundEnd?.(res.data)\n            }\n            else {\n                console.error(res.error)\n            }\n\n        })\n    }\n    /**\n     * It listens for the \"EndGame\" event from the server, and when it receives it, it calls the\n     * onGameEnd listener\n     */\n    /**\n     * It listens to the server for the \"EndGame\" event, and when it receives it, it calls the onGameEnd with the data with the game end result\n     * listener\n     */\n    #listenToGameEnd() {\n        this.connection.on(\"EndGame\", (data: unknown) => {\n\n\n            const res = MapGameEndResult.safeParse(data)\n            if (res.success) {\n                this.listeners?.onGameEnd?.(res.data)\n            }\n            else {\n                console.error(res.error)\n            }\n        })\n    }\n    /**\n     *  When the server sends the `ExitGame` message, call it calls the `onGameExit` listener\n     */\n    #listenToGameExit() {\n        this.connection.on(\"ExitGame\", () => {\n            this.listeners?.onGameExit?.()\n\n        })\n    }\n\n\n\n\n    /**\n     * If the connection gets closed, it waits 1 second and tries to reconnect\n     * it also logs if signal r is reconnecting\n     */\n    #listenToProblems() {\n        this.connection.onreconnecting = (e: Error) => {\n            console.info(\"default reconnecting from singalR\", e)\n        }\n        this.connection.onclose = (e: Error) => {\n            console.warn(\"signalR connection closed trying to reconnect manually\", e)\n            setTimeout(() => { this.reconnect() }, 1000)\n        }\n    }\n\n    /**\n     * > This function is called when the connection to the server is lost and the client needs to\n     * reconnect\n     * \n     * It starts and logs into the map again and then listens to the streamer settings again but it does not recreate the listers because they are already created.\n     * (not sure if its true but i believe it is)\n     * \n     * \n     */\n    async reconnect() {\n        console.info(\"reconnecting...\")\n        if (!this.streamerCode) {\n            console.warn(\"calling reconnect without streamer code\")\n        }\n\n        await this.connection.start()\n        const res: unknown = await this.connection.invoke(\"MapLogin\", this.streamerCode)\n        const streamerSettingsRes = MapOptions.safeParse(res)\n        if (streamerSettingsRes.success) {\n            this.#setStreamerSettings(streamerSettingsRes.data)\n        } else {\n            console.error(\"got a weird response from map login check if you need to update gcsocketlibrary\", streamerSettingsRes.error)\n            console.log(res)\n        }\n    }\n\n    /**\n     * It sends a guess to the server and waits for the server to process it\n     * @param {Guess} guess - Guess - The guess object that gets send to the server.\n     * @param [checkGuess=true] - if true, the client will wait for the server to process the guess and\n     * then call the onSuccessfulGuess or onFailedGuess listener.\n     * It retries as long as the state is not \"Submitted\" or the counter hits 50.\n     * If checkGuess is false, the client will not wait for the server to process the guess.\n     * Otherwise it will call either the onSuccessfulGuess or onFailedGuess listener.\n     */\n    async sendGuess(guess: z.infer<typeof Guess>, checkGuess = true): Promise<void> {\n        let guessId: (number | undefined)\n        if (this.connection.state !== \"Connected\") {\n            console.log(\"not connected trying to reconnect before sending guess\")\n            await this.reconnect().then(async () => {\n                console.log(\"sending guess after reconnect\")\n                guessId = await this.connection.invoke(\"SendGuessToClients\", guess) as number;\n            })\n        } else {\n            guessId = await this.connection.invoke(\"SendGuessToClients\", guess) as number;\n        }\n        if (!checkGuess) return\n        if (typeof guessId === \"number\") {\n            let state: GuessState = await this.#getGuessState(guessId)\n            let counter = 6\n            while (state === \"Submitted\" && counter >= 0) {\n                state = await this.#getGuessState(guessId)\n                console.log(state)\n                await sleep(500)\n                counter = counter - 1\n            }\n            if (counter <= 0) {\n                console.warn(\"something went wrong while processing guess on client\")\n                this.listeners?.onFailedGuess?.(state, \"something went wrong while processing guess on client\")\n                return\n            }\n            if (state === \"Success\" || state === \"TempSuccess\") {\n                this.listeners?.onSuccessfulGuess?.()\n            } else {\n                this.listeners?.onFailedGuess?.(state, createErrorText(state))\n            }\n        }\n    }\n    /**\n     * Sends the flag data to the server including the the values from SendingBase from \"./types.ts\"\n     * @param {Flag} data - Flag - This is the data that will be sent to the server.\n     */\n    async sendFlag(data: z.infer<typeof Flag>) {\n        const flagParseRes = Flag.safeParse(data)\n        if (flagParseRes.success) {\n            await this.connection.invoke(\"SendFlagToClients\", flagParseRes.data)\n        } else {\n            console.error(flagParseRes.error)\n            console.log(data)\n        }\n    }\n\n    /**\n     * Sends the color data to the server including the the values from SendingBase from \"./types.ts\"\n     * @param {Flag} data - Flag - This is the data that will be sent to the server.\n     */\n    async sendColor(data: z.infer<typeof Color>) {\n        const ColorParseRes = Color.safeParse(data)\n        if (ColorParseRes.success) {\n            await this.connection.invoke(\"SendColorToClients\", ColorParseRes.data)\n        }\n        else {\n            console.error(ColorParseRes.error)\n            console.log(data)\n        }\n    }\n\n    /**\n     * This function returns a `Promise<GuessState>` that resolves to the `GuessState` of the guess depending on the `GuessState` Value the guess is either a `Success` or an Error or still progressing\n     * @param {number} id - The id of the guess you want to get the state of.\n     * @returns GuessState\n     */\n    async #getGuessState(id: number): Promise<GuessState> {\n        return await this.connection.invoke(\"GetGuessState\", id) as GuessState\n    }\n}\n\n/**\n * It matches the Errors and creates a better string \n * I removed all successful results from it.\n * @param {GuessState} status - The status of the guess.\n * @returns A string\n */\nfunction createErrorText(status: GuessState): string {\n    switch (status) {\n        case GuessState.Banned:\n            {\n                return \"You are banned by the streamer and not allowed participate in any games.\";\n            }\n        case GuessState.BotNotFound:\n            {\n                return \"Bot not found\";\n            }\n        case GuessState.GuessedAlready:\n            {\n                return \"Already sent a guess for the round!\";\n            }\n        case GuessState.InvalidCoordinates:\n            {\n                return \"Invalid coordinates. Refresh the page.\";\n            }\n        case GuessState.NoGame:\n            {\n                return \"No ongoing game found, try again later.\";\n            }\n        case GuessState.NotFound:\n            {\n                return \"Invalid user data. Refresh the page.\"\n            }\n        case GuessState.SameCoordinates:\n            {\n                return \"Failed to send same guess back to back.\";\n            }\n        case GuessState.TooFast:\n            {\n                return \"Sending guesses too fast, try guessing again.\";\n            }\n        case GuessState.UndefinedError:\n            {\n                return \"Server error. Try guessing again.\";\n            }\n        case GuessState.Unknown:\n            {\n                return \"Invalid guess id. Refresh the page.\";\n            }\n        default:\n            {\n                return \"Something went wrong. Try guessing again.\";\n            }\n    }\n}\n\nconst enum GuessState {\n    /** State for recently submitted guess */\n    Submitted = \"Submitted\",\n    /** State for successfully registered guess */\n    Success = \"Success\",\n    /** State for guess not having any game to be sent to */\n    NoGame = \"NoGame\",\n    /** State for temporary guesses successfully registering */\n    TempSuccess = \"TempSuccess\",\n    /** State for invalid user data */\n    NotFound = \"NotFound\",\n    /** State for guess sent by a banned player */\n    Banned = \"Banned\",\n    /** State for multiguess not being allowed */\n    GuessedAlready = \"GuessedAlready\",\n    /** State for multiguess sent too often */\n    TooFast = \"TooFast\",\n    /** State for invalid guess coordinates */\n    InvalidCoordinates = \"InvalidCoordinates\",\n    /** State for sending same coordinates back to back */\n    SameCoordinates = \"SameCoordinates\",\n    /** State for internal error */\n    UndefinedError = \"UndefinedError\",\n    /** State for no game/bot found */\n    BotNotFound = \"BotNotFound\",\n    /** State for unknown guess id */\n    Unknown = \"Unknown\"\n}\n\nexport const SendingBase = z.object(\n    {\n        bot: z.string(),\n        tkn: z.string(),\n        id: z.string(),\n        name: z.string(),\n        sourcePlatform: z.enum([\"YouTube\", \"Twitch\"]),\n        display: z.string(),\n        pic: z.string(),\n    }\n)\n\nexport const Guess = SendingBase.extend({\n    lat: z.string(),\n    lng: z.string(),\n    isTemporary: z.boolean(),\n    isRandom: z.boolean(),\n});\n\n\nexport const Flag = SendingBase.extend({\n    flag: z.string()\n});\n\n\nexport const Color = SendingBase.extend({\n    color: z.string()\n});\n\n// TODO: add all settings and maybe with show option\nexport const MapOptions = z.object({\n    mapIdentifier: z.string().optional(),\n    botname: z.string().nullish(),\n    streamer: z.string().nullish(),\n    twitchChannelName: z.string().nullish(),\n    // not sure\n    installedFlagPacks: z.string(),\n    // convert to enum later\n    gameMode: z.string().nullish(),\n    isUSStreak: z.boolean(),\n    temporaryGuesses: z.boolean(),\n    showFlags: z.boolean(),\n    showBorders: z.boolean(),\n    showStreamOverlay: z.boolean(),\n})\nexport const MapGameSettings = z.object({\n    mapID: z.number(),\n    mapName: z.string(),\n    forbidMoving: z.boolean(),\n    forbidRotating: z.boolean(),\n    forbidZooming: z.boolean(),\n    roundCount: z.number(),\n    gameMode: z.string(),\n    gameType: z.string(),\n    gameState: z.string(),\n    isStreak: z.boolean(),\n    isInfinite: z.boolean(),\n    timeLimit: z.number(),\n    streakType: z.string(),\n})\n\nexport const PlayerBase = z.object({\n    displayName: z.string(),\n    userName: z.string(),\n    profilePicUrl: z.string(),\n    score: z.number(),\n    distance: z.number(),\n    timeTaken: z.number(),\n    streak: z.number(),\n    playerFlagName: z.string().nullish(),\n    playerFlag: z.string().nullish(),\n    guessCount: z.number(),\n    isStreamerResult: z.boolean(),\n})\nexport const MapRoundResult = z.array(PlayerBase.extend({\n    guessedBefore: z.boolean(),\n    exactCountryCode: z.string().nullish(),\n    countryCode: z.string().nullish(),\n    wasRandom: z.boolean(),\n    gameId: z.string().nullish()\n}\n))\n\nexport const MapGameEndResult = MapRoundResult\n\n\nexport const MapRoundSettings = z.object({\n    roundNumber: z.number(),\n    isMultiGuess: z.boolean(),\n    startTime: z.string(),\n})", "var util;\n(function (util) {\n    util.assertEqual = (val) => val;\n    function assertIs(_arg) { }\n    util.assertIs = assertIs;\n    function assertNever(_x) {\n        throw new Error();\n    }\n    util.assertNever = assertNever;\n    util.arrayToEnum = (items) => {\n        const obj = {};\n        for (const item of items) {\n            obj[item] = item;\n        }\n        return obj;\n    };\n    util.getValidEnumValues = (obj) => {\n        const validKeys = util.objectKeys(obj).filter((k) => typeof obj[obj[k]] !== \"number\");\n        const filtered = {};\n        for (const k of validKeys) {\n            filtered[k] = obj[k];\n        }\n        return util.objectValues(filtered);\n    };\n    util.objectValues = (obj) => {\n        return util.objectKeys(obj).map(function (e) {\n            return obj[e];\n        });\n    };\n    util.objectKeys = typeof Object.keys === \"function\" // eslint-disable-line ban/ban\n        ? (obj) => Object.keys(obj) // eslint-disable-line ban/ban\n        : (object) => {\n            const keys = [];\n            for (const key in object) {\n                if (Object.prototype.hasOwnProperty.call(object, key)) {\n                    keys.push(key);\n                }\n            }\n            return keys;\n        };\n    util.find = (arr, checker) => {\n        for (const item of arr) {\n            if (checker(item))\n                return item;\n        }\n        return undefined;\n    };\n    util.isInteger = typeof Number.isInteger === \"function\"\n        ? (val) => Number.isInteger(val) // eslint-disable-line ban/ban\n        : (val) => typeof val === \"number\" && isFinite(val) && Math.floor(val) === val;\n    function joinValues(array, separator = \" | \") {\n        return array\n            .map((val) => (typeof val === \"string\" ? `'${val}'` : val))\n            .join(separator);\n    }\n    util.joinValues = joinValues;\n})(util || (util = {}));\nconst ZodParsedType = util.arrayToEnum([\n    \"string\",\n    \"nan\",\n    \"number\",\n    \"integer\",\n    \"float\",\n    \"boolean\",\n    \"date\",\n    \"bigint\",\n    \"symbol\",\n    \"function\",\n    \"undefined\",\n    \"null\",\n    \"array\",\n    \"object\",\n    \"unknown\",\n    \"promise\",\n    \"void\",\n    \"never\",\n    \"map\",\n    \"set\",\n]);\nconst getParsedType = (data) => {\n    const t = typeof data;\n    switch (t) {\n        case \"undefined\":\n            return ZodParsedType.undefined;\n        case \"string\":\n            return ZodParsedType.string;\n        case \"number\":\n            return isNaN(data) ? ZodParsedType.nan : ZodParsedType.number;\n        case \"boolean\":\n            return ZodParsedType.boolean;\n        case \"function\":\n            return ZodParsedType.function;\n        case \"bigint\":\n            return ZodParsedType.bigint;\n        case \"object\":\n            if (Array.isArray(data)) {\n                return ZodParsedType.array;\n            }\n            if (data === null) {\n                return ZodParsedType.null;\n            }\n            if (data.then &&\n                typeof data.then === \"function\" &&\n                data.catch &&\n                typeof data.catch === \"function\") {\n                return ZodParsedType.promise;\n            }\n            if (typeof Map !== \"undefined\" && data instanceof Map) {\n                return ZodParsedType.map;\n            }\n            if (typeof Set !== \"undefined\" && data instanceof Set) {\n                return ZodParsedType.set;\n            }\n            if (typeof Date !== \"undefined\" && data instanceof Date) {\n                return ZodParsedType.date;\n            }\n            return ZodParsedType.object;\n        default:\n            return ZodParsedType.unknown;\n    }\n};\n\nconst ZodIssueCode = util.arrayToEnum([\n    \"invalid_type\",\n    \"invalid_literal\",\n    \"custom\",\n    \"invalid_union\",\n    \"invalid_union_discriminator\",\n    \"invalid_enum_value\",\n    \"unrecognized_keys\",\n    \"invalid_arguments\",\n    \"invalid_return_type\",\n    \"invalid_date\",\n    \"invalid_string\",\n    \"too_small\",\n    \"too_big\",\n    \"invalid_intersection_types\",\n    \"not_multiple_of\",\n]);\nconst quotelessJson = (obj) => {\n    const json = JSON.stringify(obj, null, 2);\n    return json.replace(/\"([^\"]+)\":/g, \"$1:\");\n};\nclass ZodError extends Error {\n    constructor(issues) {\n        super();\n        this.issues = [];\n        this.addIssue = (sub) => {\n            this.issues = [...this.issues, sub];\n        };\n        this.addIssues = (subs = []) => {\n            this.issues = [...this.issues, ...subs];\n        };\n        const actualProto = new.target.prototype;\n        if (Object.setPrototypeOf) {\n            // eslint-disable-next-line ban/ban\n            Object.setPrototypeOf(this, actualProto);\n        }\n        else {\n            this.__proto__ = actualProto;\n        }\n        this.name = \"ZodError\";\n        this.issues = issues;\n    }\n    get errors() {\n        return this.issues;\n    }\n    format(_mapper) {\n        const mapper = _mapper ||\n            function (issue) {\n                return issue.message;\n            };\n        const fieldErrors = { _errors: [] };\n        const processError = (error) => {\n            for (const issue of error.issues) {\n                if (issue.code === \"invalid_union\") {\n                    issue.unionErrors.map(processError);\n                }\n                else if (issue.code === \"invalid_return_type\") {\n                    processError(issue.returnTypeError);\n                }\n                else if (issue.code === \"invalid_arguments\") {\n                    processError(issue.argumentsError);\n                }\n                else if (issue.path.length === 0) {\n                    fieldErrors._errors.push(mapper(issue));\n                }\n                else {\n                    let curr = fieldErrors;\n                    let i = 0;\n                    while (i < issue.path.length) {\n                        const el = issue.path[i];\n                        const terminal = i === issue.path.length - 1;\n                        if (!terminal) {\n                            curr[el] = curr[el] || { _errors: [] };\n                            // if (typeof el === \"string\") {\n                            //   curr[el] = curr[el] || { _errors: [] };\n                            // } else if (typeof el === \"number\") {\n                            //   const errorArray: any = [];\n                            //   errorArray._errors = [];\n                            //   curr[el] = curr[el] || errorArray;\n                            // }\n                        }\n                        else {\n                            curr[el] = curr[el] || { _errors: [] };\n                            curr[el]._errors.push(mapper(issue));\n                        }\n                        curr = curr[el];\n                        i++;\n                    }\n                }\n            }\n        };\n        processError(this);\n        return fieldErrors;\n    }\n    toString() {\n        return this.message;\n    }\n    get message() {\n        return JSON.stringify(this.issues, jsonStringifyReplacer, 2);\n    }\n    get isEmpty() {\n        return this.issues.length === 0;\n    }\n    flatten(mapper = (issue) => issue.message) {\n        const fieldErrors = {};\n        const formErrors = [];\n        for (const sub of this.issues) {\n            if (sub.path.length > 0) {\n                fieldErrors[sub.path[0]] = fieldErrors[sub.path[0]] || [];\n                fieldErrors[sub.path[0]].push(mapper(sub));\n            }\n            else {\n                formErrors.push(mapper(sub));\n            }\n        }\n        return { formErrors, fieldErrors };\n    }\n    get formErrors() {\n        return this.flatten();\n    }\n}\nZodError.create = (issues) => {\n    const error = new ZodError(issues);\n    return error;\n};\nconst defaultErrorMap = (issue, _ctx) => {\n    let message;\n    switch (issue.code) {\n        case ZodIssueCode.invalid_type:\n            if (issue.received === ZodParsedType.undefined) {\n                message = \"Required\";\n            }\n            else {\n                message = `Expected ${issue.expected}, received ${issue.received}`;\n            }\n            break;\n        case ZodIssueCode.invalid_literal:\n            message = `Invalid literal value, expected ${JSON.stringify(issue.expected, jsonStringifyReplacer)}`;\n            break;\n        case ZodIssueCode.unrecognized_keys:\n            message = `Unrecognized key(s) in object: ${util.joinValues(issue.keys, \", \")}`;\n            break;\n        case ZodIssueCode.invalid_union:\n            message = `Invalid input`;\n            break;\n        case ZodIssueCode.invalid_union_discriminator:\n            message = `Invalid discriminator value. Expected ${util.joinValues(issue.options)}`;\n            break;\n        case ZodIssueCode.invalid_enum_value:\n            message = `Invalid enum value. Expected ${util.joinValues(issue.options)}, received '${issue.received}'`;\n            break;\n        case ZodIssueCode.invalid_arguments:\n            message = `Invalid function arguments`;\n            break;\n        case ZodIssueCode.invalid_return_type:\n            message = `Invalid function return type`;\n            break;\n        case ZodIssueCode.invalid_date:\n            message = `Invalid date`;\n            break;\n        case ZodIssueCode.invalid_string:\n            if (typeof issue.validation === \"object\") {\n                if (\"startsWith\" in issue.validation) {\n                    message = `Invalid input: must start with \"${issue.validation.startsWith}\"`;\n                }\n                else if (\"endsWith\" in issue.validation) {\n                    message = `Invalid input: must end with \"${issue.validation.endsWith}\"`;\n                }\n                else {\n                    util.assertNever(issue.validation);\n                }\n            }\n            else if (issue.validation !== \"regex\") {\n                message = `Invalid ${issue.validation}`;\n            }\n            else {\n                message = \"Invalid\";\n            }\n            break;\n        case ZodIssueCode.too_small:\n            if (issue.type === \"array\")\n                message = `Array must contain ${issue.inclusive ? `at least` : `more than`} ${issue.minimum} element(s)`;\n            else if (issue.type === \"string\")\n                message = `String must contain ${issue.inclusive ? `at least` : `over`} ${issue.minimum} character(s)`;\n            else if (issue.type === \"number\")\n                message = `Number must be greater than ${issue.inclusive ? `or equal to ` : ``}${issue.minimum}`;\n            else if (issue.type === \"date\")\n                message = `Date must be greater than ${issue.inclusive ? `or equal to ` : ``}${new Date(issue.minimum)}`;\n            else\n                message = \"Invalid input\";\n            break;\n        case ZodIssueCode.too_big:\n            if (issue.type === \"array\")\n                message = `Array must contain ${issue.inclusive ? `at most` : `less than`} ${issue.maximum} element(s)`;\n            else if (issue.type === \"string\")\n                message = `String must contain ${issue.inclusive ? `at most` : `under`} ${issue.maximum} character(s)`;\n            else if (issue.type === \"number\")\n                message = `Number must be less than ${issue.inclusive ? `or equal to ` : ``}${issue.maximum}`;\n            else if (issue.type === \"date\")\n                message = `Date must be smaller than ${issue.inclusive ? `or equal to ` : ``}${new Date(issue.maximum)}`;\n            else\n                message = \"Invalid input\";\n            break;\n        case ZodIssueCode.custom:\n            message = `Invalid input`;\n            break;\n        case ZodIssueCode.invalid_intersection_types:\n            message = `Intersection results could not be merged`;\n            break;\n        case ZodIssueCode.not_multiple_of:\n            message = `Number must be a multiple of ${issue.multipleOf}`;\n            break;\n        default:\n            message = _ctx.defaultError;\n            util.assertNever(issue);\n    }\n    return { message };\n};\nlet overrideErrorMap = defaultErrorMap;\nfunction setErrorMap(map) {\n    overrideErrorMap = map;\n}\nfunction getErrorMap() {\n    return overrideErrorMap;\n}\n\nconst makeIssue = (params) => {\n    const { data, path, errorMaps, issueData } = params;\n    const fullPath = [...path, ...(issueData.path || [])];\n    const fullIssue = {\n        ...issueData,\n        path: fullPath,\n    };\n    let errorMessage = \"\";\n    const maps = errorMaps\n        .filter((m) => !!m)\n        .slice()\n        .reverse();\n    for (const map of maps) {\n        errorMessage = map(fullIssue, { data, defaultError: errorMessage }).message;\n    }\n    return {\n        ...issueData,\n        path: fullPath,\n        message: issueData.message || errorMessage,\n    };\n};\nconst EMPTY_PATH = [];\nfunction addIssueToContext(ctx, issueData) {\n    const issue = makeIssue({\n        issueData: issueData,\n        data: ctx.data,\n        path: ctx.path,\n        errorMaps: [\n            ctx.common.contextualErrorMap,\n            ctx.schemaErrorMap,\n            getErrorMap(),\n            defaultErrorMap,\n        ].filter((x) => !!x),\n    });\n    ctx.common.issues.push(issue);\n}\nclass ParseStatus {\n    constructor() {\n        this.value = \"valid\";\n    }\n    dirty() {\n        if (this.value === \"valid\")\n            this.value = \"dirty\";\n    }\n    abort() {\n        if (this.value !== \"aborted\")\n            this.value = \"aborted\";\n    }\n    static mergeArray(status, results) {\n        const arrayValue = [];\n        for (const s of results) {\n            if (s.status === \"aborted\")\n                return INVALID;\n            if (s.status === \"dirty\")\n                status.dirty();\n            arrayValue.push(s.value);\n        }\n        return { status: status.value, value: arrayValue };\n    }\n    static async mergeObjectAsync(status, pairs) {\n        const syncPairs = [];\n        for (const pair of pairs) {\n            syncPairs.push({\n                key: await pair.key,\n                value: await pair.value,\n            });\n        }\n        return ParseStatus.mergeObjectSync(status, syncPairs);\n    }\n    static mergeObjectSync(status, pairs) {\n        const finalObject = {};\n        for (const pair of pairs) {\n            const { key, value } = pair;\n            if (key.status === \"aborted\")\n                return INVALID;\n            if (value.status === \"aborted\")\n                return INVALID;\n            if (key.status === \"dirty\")\n                status.dirty();\n            if (value.status === \"dirty\")\n                status.dirty();\n            if (typeof value.value !== \"undefined\" || pair.alwaysSet) {\n                finalObject[key.value] = value.value;\n            }\n        }\n        return { status: status.value, value: finalObject };\n    }\n}\nconst INVALID = Object.freeze({\n    status: \"aborted\",\n});\nconst DIRTY = (value) => ({ status: \"dirty\", value });\nconst OK = (value) => ({ status: \"valid\", value });\nconst isAborted = (x) => x.status === \"aborted\";\nconst isDirty = (x) => x.status === \"dirty\";\nconst isValid = (x) => x.status === \"valid\";\nconst isAsync = (x) => typeof Promise !== undefined && x instanceof Promise;\nconst jsonStringifyReplacer = (_, value) => {\n    if (typeof value === \"bigint\") {\n        return value.toString();\n    }\n    return value;\n};\n\nvar errorUtil;\n(function (errorUtil) {\n    errorUtil.errToObj = (message) => typeof message === \"string\" ? { message } : message || {};\n    errorUtil.toString = (message) => typeof message === \"string\" ? message : message === null || message === void 0 ? void 0 : message.message;\n})(errorUtil || (errorUtil = {}));\n\nclass ParseInputLazyPath {\n    constructor(parent, value, path, key) {\n        this.parent = parent;\n        this.data = value;\n        this._path = path;\n        this._key = key;\n    }\n    get path() {\n        return this._path.concat(this._key);\n    }\n}\nconst handleResult = (ctx, result) => {\n    if (isValid(result)) {\n        return { success: true, data: result.value };\n    }\n    else {\n        if (!ctx.common.issues.length) {\n            throw new Error(\"Validation failed but no issues detected.\");\n        }\n        const error = new ZodError(ctx.common.issues);\n        return { success: false, error };\n    }\n};\nfunction processCreateParams(params) {\n    if (!params)\n        return {};\n    const { errorMap, invalid_type_error, required_error, description } = params;\n    if (errorMap && (invalid_type_error || required_error)) {\n        throw new Error(`Can't use \"invalid\" or \"required\" in conjunction with custom error map.`);\n    }\n    if (errorMap)\n        return { errorMap: errorMap, description };\n    const customMap = (iss, ctx) => {\n        if (iss.code !== \"invalid_type\")\n            return { message: ctx.defaultError };\n        if (typeof ctx.data === \"undefined\") {\n            return { message: required_error !== null && required_error !== void 0 ? required_error : ctx.defaultError };\n        }\n        return { message: invalid_type_error !== null && invalid_type_error !== void 0 ? invalid_type_error : ctx.defaultError };\n    };\n    return { errorMap: customMap, description };\n}\nclass ZodType {\n    constructor(def) {\n        /** Alias of safeParseAsync */\n        this.spa = this.safeParseAsync;\n        this.superRefine = this._refinement;\n        this._def = def;\n        this.parse = this.parse.bind(this);\n        this.safeParse = this.safeParse.bind(this);\n        this.parseAsync = this.parseAsync.bind(this);\n        this.safeParseAsync = this.safeParseAsync.bind(this);\n        this.spa = this.spa.bind(this);\n        this.refine = this.refine.bind(this);\n        this.refinement = this.refinement.bind(this);\n        this.superRefine = this.superRefine.bind(this);\n        this.optional = this.optional.bind(this);\n        this.nullable = this.nullable.bind(this);\n        this.nullish = this.nullish.bind(this);\n        this.array = this.array.bind(this);\n        this.promise = this.promise.bind(this);\n        this.or = this.or.bind(this);\n        this.and = this.and.bind(this);\n        this.transform = this.transform.bind(this);\n        this.default = this.default.bind(this);\n        this.describe = this.describe.bind(this);\n        this.isNullable = this.isNullable.bind(this);\n        this.isOptional = this.isOptional.bind(this);\n    }\n    get description() {\n        return this._def.description;\n    }\n    _getType(input) {\n        return getParsedType(input.data);\n    }\n    _getOrReturnCtx(input, ctx) {\n        return (ctx || {\n            common: input.parent.common,\n            data: input.data,\n            parsedType: getParsedType(input.data),\n            schemaErrorMap: this._def.errorMap,\n            path: input.path,\n            parent: input.parent,\n        });\n    }\n    _processInputParams(input) {\n        return {\n            status: new ParseStatus(),\n            ctx: {\n                common: input.parent.common,\n                data: input.data,\n                parsedType: getParsedType(input.data),\n                schemaErrorMap: this._def.errorMap,\n                path: input.path,\n                parent: input.parent,\n            },\n        };\n    }\n    _parseSync(input) {\n        const result = this._parse(input);\n        if (isAsync(result)) {\n            throw new Error(\"Synchronous parse encountered promise.\");\n        }\n        return result;\n    }\n    _parseAsync(input) {\n        const result = this._parse(input);\n        return Promise.resolve(result);\n    }\n    parse(data, params) {\n        const result = this.safeParse(data, params);\n        if (result.success)\n            return result.data;\n        throw result.error;\n    }\n    safeParse(data, params) {\n        var _a;\n        const ctx = {\n            common: {\n                issues: [],\n                async: (_a = params === null || params === void 0 ? void 0 : params.async) !== null && _a !== void 0 ? _a : false,\n                contextualErrorMap: params === null || params === void 0 ? void 0 : params.errorMap,\n            },\n            path: (params === null || params === void 0 ? void 0 : params.path) || [],\n            schemaErrorMap: this._def.errorMap,\n            parent: null,\n            data,\n            parsedType: getParsedType(data),\n        };\n        const result = this._parseSync({ data, path: ctx.path, parent: ctx });\n        return handleResult(ctx, result);\n    }\n    async parseAsync(data, params) {\n        const result = await this.safeParseAsync(data, params);\n        if (result.success)\n            return result.data;\n        throw result.error;\n    }\n    async safeParseAsync(data, params) {\n        const ctx = {\n            common: {\n                issues: [],\n                contextualErrorMap: params === null || params === void 0 ? void 0 : params.errorMap,\n                async: true,\n            },\n            path: (params === null || params === void 0 ? void 0 : params.path) || [],\n            schemaErrorMap: this._def.errorMap,\n            parent: null,\n            data,\n            parsedType: getParsedType(data),\n        };\n        const maybeAsyncResult = this._parse({ data, path: [], parent: ctx });\n        const result = await (isAsync(maybeAsyncResult)\n            ? maybeAsyncResult\n            : Promise.resolve(maybeAsyncResult));\n        return handleResult(ctx, result);\n    }\n    refine(check, message) {\n        const getIssueProperties = (val) => {\n            if (typeof message === \"string\" || typeof message === \"undefined\") {\n                return { message };\n            }\n            else if (typeof message === \"function\") {\n                return message(val);\n            }\n            else {\n                return message;\n            }\n        };\n        return this._refinement((val, ctx) => {\n            const result = check(val);\n            const setError = () => ctx.addIssue({\n                code: ZodIssueCode.custom,\n                ...getIssueProperties(val),\n            });\n            if (typeof Promise !== \"undefined\" && result instanceof Promise) {\n                return result.then((data) => {\n                    if (!data) {\n                        setError();\n                        return false;\n                    }\n                    else {\n                        return true;\n                    }\n                });\n            }\n            if (!result) {\n                setError();\n                return false;\n            }\n            else {\n                return true;\n            }\n        });\n    }\n    refinement(check, refinementData) {\n        return this._refinement((val, ctx) => {\n            if (!check(val)) {\n                ctx.addIssue(typeof refinementData === \"function\"\n                    ? refinementData(val, ctx)\n                    : refinementData);\n                return false;\n            }\n            else {\n                return true;\n            }\n        });\n    }\n    _refinement(refinement) {\n        return new ZodEffects({\n            schema: this,\n            typeName: ZodFirstPartyTypeKind.ZodEffects,\n            effect: { type: \"refinement\", refinement },\n        });\n    }\n    optional() {\n        return ZodOptional.create(this);\n    }\n    nullable() {\n        return ZodNullable.create(this);\n    }\n    nullish() {\n        return this.optional().nullable();\n    }\n    array() {\n        return ZodArray.create(this);\n    }\n    promise() {\n        return ZodPromise.create(this);\n    }\n    or(option) {\n        return ZodUnion.create([this, option]);\n    }\n    and(incoming) {\n        return ZodIntersection.create(this, incoming);\n    }\n    transform(transform) {\n        return new ZodEffects({\n            schema: this,\n            typeName: ZodFirstPartyTypeKind.ZodEffects,\n            effect: { type: \"transform\", transform },\n        });\n    }\n    default(def) {\n        const defaultValueFunc = typeof def === \"function\" ? def : () => def;\n        return new ZodDefault({\n            innerType: this,\n            defaultValue: defaultValueFunc,\n            typeName: ZodFirstPartyTypeKind.ZodDefault,\n        });\n    }\n    brand() {\n        return new ZodBranded({\n            typeName: ZodFirstPartyTypeKind.ZodBranded,\n            type: this,\n            ...processCreateParams(undefined),\n        });\n    }\n    describe(description) {\n        const This = this.constructor;\n        return new This({\n            ...this._def,\n            description,\n        });\n    }\n    isOptional() {\n        return this.safeParse(undefined).success;\n    }\n    isNullable() {\n        return this.safeParse(null).success;\n    }\n}\nconst cuidRegex = /^c[^\\s-]{8,}$/i;\nconst uuidRegex = /^([a-f0-9]{8}-[a-f0-9]{4}-[1-5][a-f0-9]{3}-[a-f0-9]{4}-[a-f0-9]{12}|00000000-0000-0000-0000-000000000000)$/i;\n// from https://stackoverflow.com/a/46181/1550155\n// old version: too slow, didn't support unicode\n// const emailRegex = /^((([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(\\.([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+)*)|((\\x22)((((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|\\x21|[\\x23-\\x5b]|[\\x5d-\\x7e]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(\\\\([\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))))*(((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(\\x22)))@((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))$/i;\n// eslint-disable-next-line\nconst emailRegex = /^(([^<>()[\\]\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i;\nclass ZodString extends ZodType {\n    constructor() {\n        super(...arguments);\n        this._regex = (regex, validation, message) => this.refinement((data) => regex.test(data), {\n            validation,\n            code: ZodIssueCode.invalid_string,\n            ...errorUtil.errToObj(message),\n        });\n        /**\n         * @deprecated Use z.string().min(1) instead.\n         * @see {@link ZodString.min}\n         */\n        this.nonempty = (message) => this.min(1, errorUtil.errToObj(message));\n        this.trim = () => new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, { kind: \"trim\" }],\n        });\n    }\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.string) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.string,\n                received: ctx.parsedType,\n            }\n            //\n            );\n            return INVALID;\n        }\n        const status = new ParseStatus();\n        let ctx = undefined;\n        for (const check of this._def.checks) {\n            if (check.kind === \"min\") {\n                if (input.data.length < check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_small,\n                        minimum: check.value,\n                        type: \"string\",\n                        inclusive: true,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                if (input.data.length > check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_big,\n                        maximum: check.value,\n                        type: \"string\",\n                        inclusive: true,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"email\") {\n                if (!emailRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"email\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"uuid\") {\n                if (!uuidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"uuid\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"cuid\") {\n                if (!cuidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"cuid\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"url\") {\n                try {\n                    new URL(input.data);\n                }\n                catch (_a) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"url\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"regex\") {\n                check.regex.lastIndex = 0;\n                const testResult = check.regex.test(input.data);\n                if (!testResult) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"regex\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"trim\") {\n                input.data = input.data.trim();\n            }\n            else if (check.kind === \"startsWith\") {\n                if (!input.data.startsWith(check.value)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: { startsWith: check.value },\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"endsWith\") {\n                if (!input.data.endsWith(check.value)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: { endsWith: check.value },\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util.assertNever(check);\n            }\n        }\n        return { status: status.value, value: input.data };\n    }\n    _addCheck(check) {\n        return new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    email(message) {\n        return this._addCheck({ kind: \"email\", ...errorUtil.errToObj(message) });\n    }\n    url(message) {\n        return this._addCheck({ kind: \"url\", ...errorUtil.errToObj(message) });\n    }\n    uuid(message) {\n        return this._addCheck({ kind: \"uuid\", ...errorUtil.errToObj(message) });\n    }\n    cuid(message) {\n        return this._addCheck({ kind: \"cuid\", ...errorUtil.errToObj(message) });\n    }\n    regex(regex, message) {\n        return this._addCheck({\n            kind: \"regex\",\n            regex: regex,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    startsWith(value, message) {\n        return this._addCheck({\n            kind: \"startsWith\",\n            value: value,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    endsWith(value, message) {\n        return this._addCheck({\n            kind: \"endsWith\",\n            value: value,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    min(minLength, message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: minLength,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    max(maxLength, message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: maxLength,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    length(len, message) {\n        return this.min(len, message).max(len, message);\n    }\n    get isEmail() {\n        return !!this._def.checks.find((ch) => ch.kind === \"email\");\n    }\n    get isURL() {\n        return !!this._def.checks.find((ch) => ch.kind === \"url\");\n    }\n    get isUUID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"uuid\");\n    }\n    get isCUID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"cuid\");\n    }\n    get minLength() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min;\n    }\n    get maxLength() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max;\n    }\n}\nZodString.create = (params) => {\n    return new ZodString({\n        checks: [],\n        typeName: ZodFirstPartyTypeKind.ZodString,\n        ...processCreateParams(params),\n    });\n};\n// https://stackoverflow.com/questions/3966484/why-does-modulus-operator-return-fractional-number-in-javascript/31711034#31711034\nfunction floatSafeRemainder(val, step) {\n    const valDecCount = (val.toString().split(\".\")[1] || \"\").length;\n    const stepDecCount = (step.toString().split(\".\")[1] || \"\").length;\n    const decCount = valDecCount > stepDecCount ? valDecCount : stepDecCount;\n    const valInt = parseInt(val.toFixed(decCount).replace(\".\", \"\"));\n    const stepInt = parseInt(step.toFixed(decCount).replace(\".\", \"\"));\n    return (valInt % stepInt) / Math.pow(10, decCount);\n}\nclass ZodNumber extends ZodType {\n    constructor() {\n        super(...arguments);\n        this.min = this.gte;\n        this.max = this.lte;\n        this.step = this.multipleOf;\n    }\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.number) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.number,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        let ctx = undefined;\n        const status = new ParseStatus();\n        for (const check of this._def.checks) {\n            if (check.kind === \"int\") {\n                if (!util.isInteger(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_type,\n                        expected: \"integer\",\n                        received: \"float\",\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"min\") {\n                const tooSmall = check.inclusive\n                    ? input.data < check.value\n                    : input.data <= check.value;\n                if (tooSmall) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_small,\n                        minimum: check.value,\n                        type: \"number\",\n                        inclusive: check.inclusive,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                const tooBig = check.inclusive\n                    ? input.data > check.value\n                    : input.data >= check.value;\n                if (tooBig) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_big,\n                        maximum: check.value,\n                        type: \"number\",\n                        inclusive: check.inclusive,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"multipleOf\") {\n                if (floatSafeRemainder(input.data, check.value) !== 0) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.not_multiple_of,\n                        multipleOf: check.value,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util.assertNever(check);\n            }\n        }\n        return { status: status.value, value: input.data };\n    }\n    gte(value, message) {\n        return this.setLimit(\"min\", value, true, errorUtil.toString(message));\n    }\n    gt(value, message) {\n        return this.setLimit(\"min\", value, false, errorUtil.toString(message));\n    }\n    lte(value, message) {\n        return this.setLimit(\"max\", value, true, errorUtil.toString(message));\n    }\n    lt(value, message) {\n        return this.setLimit(\"max\", value, false, errorUtil.toString(message));\n    }\n    setLimit(kind, value, inclusive, message) {\n        return new ZodNumber({\n            ...this._def,\n            checks: [\n                ...this._def.checks,\n                {\n                    kind,\n                    value,\n                    inclusive,\n                    message: errorUtil.toString(message),\n                },\n            ],\n        });\n    }\n    _addCheck(check) {\n        return new ZodNumber({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    int(message) {\n        return this._addCheck({\n            kind: \"int\",\n            message: errorUtil.toString(message),\n        });\n    }\n    positive(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: 0,\n            inclusive: false,\n            message: errorUtil.toString(message),\n        });\n    }\n    negative(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: 0,\n            inclusive: false,\n            message: errorUtil.toString(message),\n        });\n    }\n    nonpositive(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: 0,\n            inclusive: true,\n            message: errorUtil.toString(message),\n        });\n    }\n    nonnegative(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: 0,\n            inclusive: true,\n            message: errorUtil.toString(message),\n        });\n    }\n    multipleOf(value, message) {\n        return this._addCheck({\n            kind: \"multipleOf\",\n            value: value,\n            message: errorUtil.toString(message),\n        });\n    }\n    get minValue() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min;\n    }\n    get maxValue() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max;\n    }\n    get isInt() {\n        return !!this._def.checks.find((ch) => ch.kind === \"int\");\n    }\n}\nZodNumber.create = (params) => {\n    return new ZodNumber({\n        checks: [],\n        typeName: ZodFirstPartyTypeKind.ZodNumber,\n        ...processCreateParams(params),\n    });\n};\nclass ZodBigInt extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.bigint) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.bigint,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodBigInt.create = (params) => {\n    return new ZodBigInt({\n        typeName: ZodFirstPartyTypeKind.ZodBigInt,\n        ...processCreateParams(params),\n    });\n};\nclass ZodBoolean extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.boolean) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.boolean,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodBoolean.create = (params) => {\n    return new ZodBoolean({\n        typeName: ZodFirstPartyTypeKind.ZodBoolean,\n        ...processCreateParams(params),\n    });\n};\nclass ZodDate extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.date) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.date,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        if (isNaN(input.data.getTime())) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_date,\n            });\n            return INVALID;\n        }\n        const status = new ParseStatus();\n        let ctx = undefined;\n        for (const check of this._def.checks) {\n            if (check.kind === \"min\") {\n                if (input.data.getTime() < check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_small,\n                        message: check.message,\n                        inclusive: true,\n                        minimum: check.value,\n                        type: \"date\",\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                if (input.data.getTime() > check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_big,\n                        message: check.message,\n                        inclusive: true,\n                        maximum: check.value,\n                        type: \"date\",\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util.assertNever(check);\n            }\n        }\n        return {\n            status: status.value,\n            value: new Date(input.data.getTime()),\n        };\n    }\n    _addCheck(check) {\n        return new ZodDate({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    min(minDate, message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: minDate.getTime(),\n            message: errorUtil.toString(message),\n        });\n    }\n    max(maxDate, message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: maxDate.getTime(),\n            message: errorUtil.toString(message),\n        });\n    }\n    get minDate() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min != null ? new Date(min) : null;\n    }\n    get maxDate() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max != null ? new Date(max) : null;\n    }\n}\nZodDate.create = (params) => {\n    return new ZodDate({\n        checks: [],\n        typeName: ZodFirstPartyTypeKind.ZodDate,\n        ...processCreateParams(params),\n    });\n};\nclass ZodUndefined extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.undefined) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.undefined,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodUndefined.create = (params) => {\n    return new ZodUndefined({\n        typeName: ZodFirstPartyTypeKind.ZodUndefined,\n        ...processCreateParams(params),\n    });\n};\nclass ZodNull extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.null) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.null,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodNull.create = (params) => {\n    return new ZodNull({\n        typeName: ZodFirstPartyTypeKind.ZodNull,\n        ...processCreateParams(params),\n    });\n};\nclass ZodAny extends ZodType {\n    constructor() {\n        super(...arguments);\n        // to prevent instances of other classes from extending ZodAny. this causes issues with catchall in ZodObject.\n        this._any = true;\n    }\n    _parse(input) {\n        return OK(input.data);\n    }\n}\nZodAny.create = (params) => {\n    return new ZodAny({\n        typeName: ZodFirstPartyTypeKind.ZodAny,\n        ...processCreateParams(params),\n    });\n};\nclass ZodUnknown extends ZodType {\n    constructor() {\n        super(...arguments);\n        // required\n        this._unknown = true;\n    }\n    _parse(input) {\n        return OK(input.data);\n    }\n}\nZodUnknown.create = (params) => {\n    return new ZodUnknown({\n        typeName: ZodFirstPartyTypeKind.ZodUnknown,\n        ...processCreateParams(params),\n    });\n};\nclass ZodNever extends ZodType {\n    _parse(input) {\n        const ctx = this._getOrReturnCtx(input);\n        addIssueToContext(ctx, {\n            code: ZodIssueCode.invalid_type,\n            expected: ZodParsedType.never,\n            received: ctx.parsedType,\n        });\n        return INVALID;\n    }\n}\nZodNever.create = (params) => {\n    return new ZodNever({\n        typeName: ZodFirstPartyTypeKind.ZodNever,\n        ...processCreateParams(params),\n    });\n};\nclass ZodVoid extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.undefined) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.void,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodVoid.create = (params) => {\n    return new ZodVoid({\n        typeName: ZodFirstPartyTypeKind.ZodVoid,\n        ...processCreateParams(params),\n    });\n};\nclass ZodArray extends ZodType {\n    _parse(input) {\n        const { ctx, status } = this._processInputParams(input);\n        const def = this._def;\n        if (ctx.parsedType !== ZodParsedType.array) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.array,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        if (def.minLength !== null) {\n            if (ctx.data.length < def.minLength.value) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_small,\n                    minimum: def.minLength.value,\n                    type: \"array\",\n                    inclusive: true,\n                    message: def.minLength.message,\n                });\n                status.dirty();\n            }\n        }\n        if (def.maxLength !== null) {\n            if (ctx.data.length > def.maxLength.value) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_big,\n                    maximum: def.maxLength.value,\n                    type: \"array\",\n                    inclusive: true,\n                    message: def.maxLength.message,\n                });\n                status.dirty();\n            }\n        }\n        if (ctx.common.async) {\n            return Promise.all(ctx.data.map((item, i) => {\n                return def.type._parseAsync(new ParseInputLazyPath(ctx, item, ctx.path, i));\n            })).then((result) => {\n                return ParseStatus.mergeArray(status, result);\n            });\n        }\n        const result = ctx.data.map((item, i) => {\n            return def.type._parseSync(new ParseInputLazyPath(ctx, item, ctx.path, i));\n        });\n        return ParseStatus.mergeArray(status, result);\n    }\n    get element() {\n        return this._def.type;\n    }\n    min(minLength, message) {\n        return new ZodArray({\n            ...this._def,\n            minLength: { value: minLength, message: errorUtil.toString(message) },\n        });\n    }\n    max(maxLength, message) {\n        return new ZodArray({\n            ...this._def,\n            maxLength: { value: maxLength, message: errorUtil.toString(message) },\n        });\n    }\n    length(len, message) {\n        return this.min(len, message).max(len, message);\n    }\n    nonempty(message) {\n        return this.min(1, message);\n    }\n}\nZodArray.create = (schema, params) => {\n    return new ZodArray({\n        type: schema,\n        minLength: null,\n        maxLength: null,\n        typeName: ZodFirstPartyTypeKind.ZodArray,\n        ...processCreateParams(params),\n    });\n};\n/////////////////////////////////////////\n/////////////////////////////////////////\n//////////                     //////////\n//////////      ZodObject      //////////\n//////////                     //////////\n/////////////////////////////////////////\n/////////////////////////////////////////\nvar objectUtil;\n(function (objectUtil) {\n    objectUtil.mergeShapes = (first, second) => {\n        return {\n            ...first,\n            ...second,\n        };\n    };\n})(objectUtil || (objectUtil = {}));\nconst AugmentFactory = (def) => (augmentation) => {\n    return new ZodObject({\n        ...def,\n        shape: () => ({\n            ...def.shape(),\n            ...augmentation,\n        }),\n    });\n};\nfunction deepPartialify(schema) {\n    if (schema instanceof ZodObject) {\n        const newShape = {};\n        for (const key in schema.shape) {\n            const fieldSchema = schema.shape[key];\n            newShape[key] = ZodOptional.create(deepPartialify(fieldSchema));\n        }\n        return new ZodObject({\n            ...schema._def,\n            shape: () => newShape,\n        });\n    }\n    else if (schema instanceof ZodArray) {\n        return ZodArray.create(deepPartialify(schema.element));\n    }\n    else if (schema instanceof ZodOptional) {\n        return ZodOptional.create(deepPartialify(schema.unwrap()));\n    }\n    else if (schema instanceof ZodNullable) {\n        return ZodNullable.create(deepPartialify(schema.unwrap()));\n    }\n    else if (schema instanceof ZodTuple) {\n        return ZodTuple.create(schema.items.map((item) => deepPartialify(item)));\n    }\n    else {\n        return schema;\n    }\n}\nclass ZodObject extends ZodType {\n    constructor() {\n        super(...arguments);\n        this._cached = null;\n        /**\n         * @deprecated In most cases, this is no longer needed - unknown properties are now silently stripped.\n         * If you want to pass through unknown properties, use `.passthrough()` instead.\n         */\n        this.nonstrict = this.passthrough;\n        this.augment = AugmentFactory(this._def);\n        this.extend = AugmentFactory(this._def);\n    }\n    _getCached() {\n        if (this._cached !== null)\n            return this._cached;\n        const shape = this._def.shape();\n        const keys = util.objectKeys(shape);\n        return (this._cached = { shape, keys });\n    }\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.object) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.object,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const { status, ctx } = this._processInputParams(input);\n        const { shape, keys: shapeKeys } = this._getCached();\n        const extraKeys = [];\n        for (const key in ctx.data) {\n            if (!shapeKeys.includes(key)) {\n                extraKeys.push(key);\n            }\n        }\n        const pairs = [];\n        for (const key of shapeKeys) {\n            const keyValidator = shape[key];\n            const value = ctx.data[key];\n            pairs.push({\n                key: { status: \"valid\", value: key },\n                value: keyValidator._parse(new ParseInputLazyPath(ctx, value, ctx.path, key)),\n                alwaysSet: key in ctx.data,\n            });\n        }\n        if (this._def.catchall instanceof ZodNever) {\n            const unknownKeys = this._def.unknownKeys;\n            if (unknownKeys === \"passthrough\") {\n                for (const key of extraKeys) {\n                    pairs.push({\n                        key: { status: \"valid\", value: key },\n                        value: { status: \"valid\", value: ctx.data[key] },\n                    });\n                }\n            }\n            else if (unknownKeys === \"strict\") {\n                if (extraKeys.length > 0) {\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.unrecognized_keys,\n                        keys: extraKeys,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (unknownKeys === \"strip\") ;\n            else {\n                throw new Error(`Internal ZodObject error: invalid unknownKeys value.`);\n            }\n        }\n        else {\n            // run catchall validation\n            const catchall = this._def.catchall;\n            for (const key of extraKeys) {\n                const value = ctx.data[key];\n                pairs.push({\n                    key: { status: \"valid\", value: key },\n                    value: catchall._parse(new ParseInputLazyPath(ctx, value, ctx.path, key) //, ctx.child(key), value, getParsedType(value)\n                    ),\n                    alwaysSet: key in ctx.data,\n                });\n            }\n        }\n        if (ctx.common.async) {\n            return Promise.resolve()\n                .then(async () => {\n                const syncPairs = [];\n                for (const pair of pairs) {\n                    const key = await pair.key;\n                    syncPairs.push({\n                        key,\n                        value: await pair.value,\n                        alwaysSet: pair.alwaysSet,\n                    });\n                }\n                return syncPairs;\n            })\n                .then((syncPairs) => {\n                return ParseStatus.mergeObjectSync(status, syncPairs);\n            });\n        }\n        else {\n            return ParseStatus.mergeObjectSync(status, pairs);\n        }\n    }\n    get shape() {\n        return this._def.shape();\n    }\n    strict(message) {\n        errorUtil.errToObj;\n        return new ZodObject({\n            ...this._def,\n            unknownKeys: \"strict\",\n            ...(message !== undefined\n                ? {\n                    errorMap: (issue, ctx) => {\n                        var _a, _b, _c, _d;\n                        const defaultError = (_c = (_b = (_a = this._def).errorMap) === null || _b === void 0 ? void 0 : _b.call(_a, issue, ctx).message) !== null && _c !== void 0 ? _c : ctx.defaultError;\n                        if (issue.code === \"unrecognized_keys\")\n                            return {\n                                message: (_d = errorUtil.errToObj(message).message) !== null && _d !== void 0 ? _d : defaultError,\n                            };\n                        return {\n                            message: defaultError,\n                        };\n                    },\n                }\n                : {}),\n        });\n    }\n    strip() {\n        return new ZodObject({\n            ...this._def,\n            unknownKeys: \"strip\",\n        });\n    }\n    passthrough() {\n        return new ZodObject({\n            ...this._def,\n            unknownKeys: \"passthrough\",\n        });\n    }\n    setKey(key, schema) {\n        return this.augment({ [key]: schema });\n    }\n    /**\n     * Prior to zod@1.0.12 there was a bug in the\n     * inferred type of merged objects. Please\n     * upgrade if you are experiencing issues.\n     */\n    merge(merging) {\n        // const mergedShape = objectUtil.mergeShapes(\n        //   this._def.shape(),\n        //   merging._def.shape()\n        // );\n        const merged = new ZodObject({\n            unknownKeys: merging._def.unknownKeys,\n            catchall: merging._def.catchall,\n            shape: () => objectUtil.mergeShapes(this._def.shape(), merging._def.shape()),\n            typeName: ZodFirstPartyTypeKind.ZodObject,\n        });\n        return merged;\n    }\n    catchall(index) {\n        return new ZodObject({\n            ...this._def,\n            catchall: index,\n        });\n    }\n    pick(mask) {\n        const shape = {};\n        util.objectKeys(mask).map((key) => {\n            // only add to shape if key corresponds to an element of the current shape\n            if (this.shape[key])\n                shape[key] = this.shape[key];\n        });\n        return new ZodObject({\n            ...this._def,\n            shape: () => shape,\n        });\n    }\n    omit(mask) {\n        const shape = {};\n        util.objectKeys(this.shape).map((key) => {\n            if (util.objectKeys(mask).indexOf(key) === -1) {\n                shape[key] = this.shape[key];\n            }\n        });\n        return new ZodObject({\n            ...this._def,\n            shape: () => shape,\n        });\n    }\n    deepPartial() {\n        return deepPartialify(this);\n    }\n    partial(mask) {\n        const newShape = {};\n        if (mask) {\n            util.objectKeys(this.shape).map((key) => {\n                if (util.objectKeys(mask).indexOf(key) === -1) {\n                    newShape[key] = this.shape[key];\n                }\n                else {\n                    newShape[key] = this.shape[key].optional();\n                }\n            });\n            return new ZodObject({\n                ...this._def,\n                shape: () => newShape,\n            });\n        }\n        else {\n            for (const key in this.shape) {\n                const fieldSchema = this.shape[key];\n                newShape[key] = fieldSchema.optional();\n            }\n        }\n        return new ZodObject({\n            ...this._def,\n            shape: () => newShape,\n        });\n    }\n    required() {\n        const newShape = {};\n        for (const key in this.shape) {\n            const fieldSchema = this.shape[key];\n            let newField = fieldSchema;\n            while (newField instanceof ZodOptional) {\n                newField = newField._def.innerType;\n            }\n            newShape[key] = newField;\n        }\n        return new ZodObject({\n            ...this._def,\n            shape: () => newShape,\n        });\n    }\n    keyof() {\n        return createZodEnum(util.objectKeys(this.shape));\n    }\n}\nZodObject.create = (shape, params) => {\n    return new ZodObject({\n        shape: () => shape,\n        unknownKeys: \"strip\",\n        catchall: ZodNever.create(),\n        typeName: ZodFirstPartyTypeKind.ZodObject,\n        ...processCreateParams(params),\n    });\n};\nZodObject.strictCreate = (shape, params) => {\n    return new ZodObject({\n        shape: () => shape,\n        unknownKeys: \"strict\",\n        catchall: ZodNever.create(),\n        typeName: ZodFirstPartyTypeKind.ZodObject,\n        ...processCreateParams(params),\n    });\n};\nZodObject.lazycreate = (shape, params) => {\n    return new ZodObject({\n        shape,\n        unknownKeys: \"strip\",\n        catchall: ZodNever.create(),\n        typeName: ZodFirstPartyTypeKind.ZodObject,\n        ...processCreateParams(params),\n    });\n};\nclass ZodUnion extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        const options = this._def.options;\n        function handleResults(results) {\n            // return first issue-free validation if it exists\n            for (const result of results) {\n                if (result.result.status === \"valid\") {\n                    return result.result;\n                }\n            }\n            for (const result of results) {\n                if (result.result.status === \"dirty\") {\n                    // add issues from dirty option\n                    ctx.common.issues.push(...result.ctx.common.issues);\n                    return result.result;\n                }\n            }\n            // return invalid\n            const unionErrors = results.map((result) => new ZodError(result.ctx.common.issues));\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_union,\n                unionErrors,\n            });\n            return INVALID;\n        }\n        if (ctx.common.async) {\n            return Promise.all(options.map(async (option) => {\n                const childCtx = {\n                    ...ctx,\n                    common: {\n                        ...ctx.common,\n                        issues: [],\n                    },\n                    parent: null,\n                };\n                return {\n                    result: await option._parseAsync({\n                        data: ctx.data,\n                        path: ctx.path,\n                        parent: childCtx,\n                    }),\n                    ctx: childCtx,\n                };\n            })).then(handleResults);\n        }\n        else {\n            let dirty = undefined;\n            const issues = [];\n            for (const option of options) {\n                const childCtx = {\n                    ...ctx,\n                    common: {\n                        ...ctx.common,\n                        issues: [],\n                    },\n                    parent: null,\n                };\n                const result = option._parseSync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: childCtx,\n                });\n                if (result.status === \"valid\") {\n                    return result;\n                }\n                else if (result.status === \"dirty\" && !dirty) {\n                    dirty = { result, ctx: childCtx };\n                }\n                if (childCtx.common.issues.length) {\n                    issues.push(childCtx.common.issues);\n                }\n            }\n            if (dirty) {\n                ctx.common.issues.push(...dirty.ctx.common.issues);\n                return dirty.result;\n            }\n            const unionErrors = issues.map((issues) => new ZodError(issues));\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_union,\n                unionErrors,\n            });\n            return INVALID;\n        }\n    }\n    get options() {\n        return this._def.options;\n    }\n}\nZodUnion.create = (types, params) => {\n    return new ZodUnion({\n        options: types,\n        typeName: ZodFirstPartyTypeKind.ZodUnion,\n        ...processCreateParams(params),\n    });\n};\nclass ZodDiscriminatedUnion extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.object) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.object,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const discriminator = this.discriminator;\n        const discriminatorValue = ctx.data[discriminator];\n        const option = this.options.get(discriminatorValue);\n        if (!option) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_union_discriminator,\n                options: this.validDiscriminatorValues,\n                path: [discriminator],\n            });\n            return INVALID;\n        }\n        if (ctx.common.async) {\n            return option._parseAsync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            });\n        }\n        else {\n            return option._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            });\n        }\n    }\n    get discriminator() {\n        return this._def.discriminator;\n    }\n    get validDiscriminatorValues() {\n        return Array.from(this.options.keys());\n    }\n    get options() {\n        return this._def.options;\n    }\n    /**\n     * The constructor of the discriminated union schema. Its behaviour is very similar to that of the normal z.union() constructor.\n     * However, it only allows a union of objects, all of which need to share a discriminator property. This property must\n     * have a different value for each object in the union.\n     * @param discriminator the name of the discriminator property\n     * @param types an array of object schemas\n     * @param params\n     */\n    static create(discriminator, types, params) {\n        // Get all the valid discriminator values\n        const options = new Map();\n        try {\n            types.forEach((type) => {\n                const discriminatorValue = type.shape[discriminator].value;\n                options.set(discriminatorValue, type);\n            });\n        }\n        catch (e) {\n            throw new Error(\"The discriminator value could not be extracted from all the provided schemas\");\n        }\n        // Assert that all the discriminator values are unique\n        if (options.size !== types.length) {\n            throw new Error(\"Some of the discriminator values are not unique\");\n        }\n        return new ZodDiscriminatedUnion({\n            typeName: ZodFirstPartyTypeKind.ZodDiscriminatedUnion,\n            discriminator,\n            options,\n            ...processCreateParams(params),\n        });\n    }\n}\nfunction mergeValues(a, b) {\n    const aType = getParsedType(a);\n    const bType = getParsedType(b);\n    if (a === b) {\n        return { valid: true, data: a };\n    }\n    else if (aType === ZodParsedType.object && bType === ZodParsedType.object) {\n        const bKeys = util.objectKeys(b);\n        const sharedKeys = util\n            .objectKeys(a)\n            .filter((key) => bKeys.indexOf(key) !== -1);\n        const newObj = { ...a, ...b };\n        for (const key of sharedKeys) {\n            const sharedValue = mergeValues(a[key], b[key]);\n            if (!sharedValue.valid) {\n                return { valid: false };\n            }\n            newObj[key] = sharedValue.data;\n        }\n        return { valid: true, data: newObj };\n    }\n    else if (aType === ZodParsedType.array && bType === ZodParsedType.array) {\n        if (a.length !== b.length) {\n            return { valid: false };\n        }\n        const newArray = [];\n        for (let index = 0; index < a.length; index++) {\n            const itemA = a[index];\n            const itemB = b[index];\n            const sharedValue = mergeValues(itemA, itemB);\n            if (!sharedValue.valid) {\n                return { valid: false };\n            }\n            newArray.push(sharedValue.data);\n        }\n        return { valid: true, data: newArray };\n    }\n    else if (aType === ZodParsedType.date &&\n        bType === ZodParsedType.date &&\n        +a === +b) {\n        return { valid: true, data: a };\n    }\n    else {\n        return { valid: false };\n    }\n}\nclass ZodIntersection extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        const handleParsed = (parsedLeft, parsedRight) => {\n            if (isAborted(parsedLeft) || isAborted(parsedRight)) {\n                return INVALID;\n            }\n            const merged = mergeValues(parsedLeft.value, parsedRight.value);\n            if (!merged.valid) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.invalid_intersection_types,\n                });\n                return INVALID;\n            }\n            if (isDirty(parsedLeft) || isDirty(parsedRight)) {\n                status.dirty();\n            }\n            return { status: status.value, value: merged.data };\n        };\n        if (ctx.common.async) {\n            return Promise.all([\n                this._def.left._parseAsync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                }),\n                this._def.right._parseAsync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                }),\n            ]).then(([left, right]) => handleParsed(left, right));\n        }\n        else {\n            return handleParsed(this._def.left._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            }), this._def.right._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            }));\n        }\n    }\n}\nZodIntersection.create = (left, right, params) => {\n    return new ZodIntersection({\n        left: left,\n        right: right,\n        typeName: ZodFirstPartyTypeKind.ZodIntersection,\n        ...processCreateParams(params),\n    });\n};\nclass ZodTuple extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.array) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.array,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        if (ctx.data.length < this._def.items.length) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.too_small,\n                minimum: this._def.items.length,\n                inclusive: true,\n                type: \"array\",\n            });\n            return INVALID;\n        }\n        const rest = this._def.rest;\n        if (!rest && ctx.data.length > this._def.items.length) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.too_big,\n                maximum: this._def.items.length,\n                inclusive: true,\n                type: \"array\",\n            });\n            status.dirty();\n        }\n        const items = ctx.data\n            .map((item, itemIndex) => {\n            const schema = this._def.items[itemIndex] || this._def.rest;\n            if (!schema)\n                return null;\n            return schema._parse(new ParseInputLazyPath(ctx, item, ctx.path, itemIndex));\n        })\n            .filter((x) => !!x); // filter nulls\n        if (ctx.common.async) {\n            return Promise.all(items).then((results) => {\n                return ParseStatus.mergeArray(status, results);\n            });\n        }\n        else {\n            return ParseStatus.mergeArray(status, items);\n        }\n    }\n    get items() {\n        return this._def.items;\n    }\n    rest(rest) {\n        return new ZodTuple({\n            ...this._def,\n            rest,\n        });\n    }\n}\nZodTuple.create = (schemas, params) => {\n    return new ZodTuple({\n        items: schemas,\n        typeName: ZodFirstPartyTypeKind.ZodTuple,\n        rest: null,\n        ...processCreateParams(params),\n    });\n};\nclass ZodRecord extends ZodType {\n    get keySchema() {\n        return this._def.keyType;\n    }\n    get valueSchema() {\n        return this._def.valueType;\n    }\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.object) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.object,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const pairs = [];\n        const keyType = this._def.keyType;\n        const valueType = this._def.valueType;\n        for (const key in ctx.data) {\n            pairs.push({\n                key: keyType._parse(new ParseInputLazyPath(ctx, key, ctx.path, key)),\n                value: valueType._parse(new ParseInputLazyPath(ctx, ctx.data[key], ctx.path, key)),\n            });\n        }\n        if (ctx.common.async) {\n            return ParseStatus.mergeObjectAsync(status, pairs);\n        }\n        else {\n            return ParseStatus.mergeObjectSync(status, pairs);\n        }\n    }\n    get element() {\n        return this._def.valueType;\n    }\n    static create(first, second, third) {\n        if (second instanceof ZodType) {\n            return new ZodRecord({\n                keyType: first,\n                valueType: second,\n                typeName: ZodFirstPartyTypeKind.ZodRecord,\n                ...processCreateParams(third),\n            });\n        }\n        return new ZodRecord({\n            keyType: ZodString.create(),\n            valueType: first,\n            typeName: ZodFirstPartyTypeKind.ZodRecord,\n            ...processCreateParams(second),\n        });\n    }\n}\nclass ZodMap extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.map) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.map,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const keyType = this._def.keyType;\n        const valueType = this._def.valueType;\n        const pairs = [...ctx.data.entries()].map(([key, value], index) => {\n            return {\n                key: keyType._parse(new ParseInputLazyPath(ctx, key, ctx.path, [index, \"key\"])),\n                value: valueType._parse(new ParseInputLazyPath(ctx, value, ctx.path, [index, \"value\"])),\n            };\n        });\n        if (ctx.common.async) {\n            const finalMap = new Map();\n            return Promise.resolve().then(async () => {\n                for (const pair of pairs) {\n                    const key = await pair.key;\n                    const value = await pair.value;\n                    if (key.status === \"aborted\" || value.status === \"aborted\") {\n                        return INVALID;\n                    }\n                    if (key.status === \"dirty\" || value.status === \"dirty\") {\n                        status.dirty();\n                    }\n                    finalMap.set(key.value, value.value);\n                }\n                return { status: status.value, value: finalMap };\n            });\n        }\n        else {\n            const finalMap = new Map();\n            for (const pair of pairs) {\n                const key = pair.key;\n                const value = pair.value;\n                if (key.status === \"aborted\" || value.status === \"aborted\") {\n                    return INVALID;\n                }\n                if (key.status === \"dirty\" || value.status === \"dirty\") {\n                    status.dirty();\n                }\n                finalMap.set(key.value, value.value);\n            }\n            return { status: status.value, value: finalMap };\n        }\n    }\n}\nZodMap.create = (keyType, valueType, params) => {\n    return new ZodMap({\n        valueType,\n        keyType,\n        typeName: ZodFirstPartyTypeKind.ZodMap,\n        ...processCreateParams(params),\n    });\n};\nclass ZodSet extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.set) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.set,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const def = this._def;\n        if (def.minSize !== null) {\n            if (ctx.data.size < def.minSize.value) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_small,\n                    minimum: def.minSize.value,\n                    type: \"set\",\n                    inclusive: true,\n                    message: def.minSize.message,\n                });\n                status.dirty();\n            }\n        }\n        if (def.maxSize !== null) {\n            if (ctx.data.size > def.maxSize.value) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_big,\n                    maximum: def.maxSize.value,\n                    type: \"set\",\n                    inclusive: true,\n                    message: def.maxSize.message,\n                });\n                status.dirty();\n            }\n        }\n        const valueType = this._def.valueType;\n        function finalizeSet(elements) {\n            const parsedSet = new Set();\n            for (const element of elements) {\n                if (element.status === \"aborted\")\n                    return INVALID;\n                if (element.status === \"dirty\")\n                    status.dirty();\n                parsedSet.add(element.value);\n            }\n            return { status: status.value, value: parsedSet };\n        }\n        const elements = [...ctx.data.values()].map((item, i) => valueType._parse(new ParseInputLazyPath(ctx, item, ctx.path, i)));\n        if (ctx.common.async) {\n            return Promise.all(elements).then((elements) => finalizeSet(elements));\n        }\n        else {\n            return finalizeSet(elements);\n        }\n    }\n    min(minSize, message) {\n        return new ZodSet({\n            ...this._def,\n            minSize: { value: minSize, message: errorUtil.toString(message) },\n        });\n    }\n    max(maxSize, message) {\n        return new ZodSet({\n            ...this._def,\n            maxSize: { value: maxSize, message: errorUtil.toString(message) },\n        });\n    }\n    size(size, message) {\n        return this.min(size, message).max(size, message);\n    }\n    nonempty(message) {\n        return this.min(1, message);\n    }\n}\nZodSet.create = (valueType, params) => {\n    return new ZodSet({\n        valueType,\n        minSize: null,\n        maxSize: null,\n        typeName: ZodFirstPartyTypeKind.ZodSet,\n        ...processCreateParams(params),\n    });\n};\nclass ZodFunction extends ZodType {\n    constructor() {\n        super(...arguments);\n        this.validate = this.implement;\n    }\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.function) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.function,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        function makeArgsIssue(args, error) {\n            return makeIssue({\n                data: args,\n                path: ctx.path,\n                errorMaps: [\n                    ctx.common.contextualErrorMap,\n                    ctx.schemaErrorMap,\n                    getErrorMap(),\n                    defaultErrorMap,\n                ].filter((x) => !!x),\n                issueData: {\n                    code: ZodIssueCode.invalid_arguments,\n                    argumentsError: error,\n                },\n            });\n        }\n        function makeReturnsIssue(returns, error) {\n            return makeIssue({\n                data: returns,\n                path: ctx.path,\n                errorMaps: [\n                    ctx.common.contextualErrorMap,\n                    ctx.schemaErrorMap,\n                    getErrorMap(),\n                    defaultErrorMap,\n                ].filter((x) => !!x),\n                issueData: {\n                    code: ZodIssueCode.invalid_return_type,\n                    returnTypeError: error,\n                },\n            });\n        }\n        const params = { errorMap: ctx.common.contextualErrorMap };\n        const fn = ctx.data;\n        if (this._def.returns instanceof ZodPromise) {\n            return OK(async (...args) => {\n                const error = new ZodError([]);\n                const parsedArgs = await this._def.args\n                    .parseAsync(args, params)\n                    .catch((e) => {\n                    error.addIssue(makeArgsIssue(args, e));\n                    throw error;\n                });\n                const result = await fn(...parsedArgs);\n                const parsedReturns = await this._def.returns._def.type\n                    .parseAsync(result, params)\n                    .catch((e) => {\n                    error.addIssue(makeReturnsIssue(result, e));\n                    throw error;\n                });\n                return parsedReturns;\n            });\n        }\n        else {\n            return OK((...args) => {\n                const parsedArgs = this._def.args.safeParse(args, params);\n                if (!parsedArgs.success) {\n                    throw new ZodError([makeArgsIssue(args, parsedArgs.error)]);\n                }\n                const result = fn(...parsedArgs.data);\n                const parsedReturns = this._def.returns.safeParse(result, params);\n                if (!parsedReturns.success) {\n                    throw new ZodError([makeReturnsIssue(result, parsedReturns.error)]);\n                }\n                return parsedReturns.data;\n            });\n        }\n    }\n    parameters() {\n        return this._def.args;\n    }\n    returnType() {\n        return this._def.returns;\n    }\n    args(...items) {\n        return new ZodFunction({\n            ...this._def,\n            args: ZodTuple.create(items).rest(ZodUnknown.create()),\n        });\n    }\n    returns(returnType) {\n        return new ZodFunction({\n            ...this._def,\n            returns: returnType,\n        });\n    }\n    implement(func) {\n        const validatedFunc = this.parse(func);\n        return validatedFunc;\n    }\n    strictImplement(func) {\n        const validatedFunc = this.parse(func);\n        return validatedFunc;\n    }\n}\nZodFunction.create = (args, returns, params) => {\n    return new ZodFunction({\n        args: (args\n            ? args.rest(ZodUnknown.create())\n            : ZodTuple.create([]).rest(ZodUnknown.create())),\n        returns: returns || ZodUnknown.create(),\n        typeName: ZodFirstPartyTypeKind.ZodFunction,\n        ...processCreateParams(params),\n    });\n};\nclass ZodLazy extends ZodType {\n    get schema() {\n        return this._def.getter();\n    }\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        const lazySchema = this._def.getter();\n        return lazySchema._parse({ data: ctx.data, path: ctx.path, parent: ctx });\n    }\n}\nZodLazy.create = (getter, params) => {\n    return new ZodLazy({\n        getter: getter,\n        typeName: ZodFirstPartyTypeKind.ZodLazy,\n        ...processCreateParams(params),\n    });\n};\nclass ZodLiteral extends ZodType {\n    _parse(input) {\n        if (input.data !== this._def.value) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_literal,\n                expected: this._def.value,\n            });\n            return INVALID;\n        }\n        return { status: \"valid\", value: input.data };\n    }\n    get value() {\n        return this._def.value;\n    }\n}\nZodLiteral.create = (value, params) => {\n    return new ZodLiteral({\n        value: value,\n        typeName: ZodFirstPartyTypeKind.ZodLiteral,\n        ...processCreateParams(params),\n    });\n};\nfunction createZodEnum(values, params) {\n    return new ZodEnum({\n        values: values,\n        typeName: ZodFirstPartyTypeKind.ZodEnum,\n        ...processCreateParams(params),\n    });\n}\nclass ZodEnum extends ZodType {\n    _parse(input) {\n        if (typeof input.data !== \"string\") {\n            const ctx = this._getOrReturnCtx(input);\n            const expectedValues = this._def.values;\n            addIssueToContext(ctx, {\n                expected: util.joinValues(expectedValues),\n                received: ctx.parsedType,\n                code: ZodIssueCode.invalid_type,\n            });\n            return INVALID;\n        }\n        if (this._def.values.indexOf(input.data) === -1) {\n            const ctx = this._getOrReturnCtx(input);\n            const expectedValues = this._def.values;\n            addIssueToContext(ctx, {\n                received: ctx.data,\n                code: ZodIssueCode.invalid_enum_value,\n                options: expectedValues,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n    get options() {\n        return this._def.values;\n    }\n    get enum() {\n        const enumValues = {};\n        for (const val of this._def.values) {\n            enumValues[val] = val;\n        }\n        return enumValues;\n    }\n    get Values() {\n        const enumValues = {};\n        for (const val of this._def.values) {\n            enumValues[val] = val;\n        }\n        return enumValues;\n    }\n    get Enum() {\n        const enumValues = {};\n        for (const val of this._def.values) {\n            enumValues[val] = val;\n        }\n        return enumValues;\n    }\n}\nZodEnum.create = createZodEnum;\nclass ZodNativeEnum extends ZodType {\n    _parse(input) {\n        const nativeEnumValues = util.getValidEnumValues(this._def.values);\n        const ctx = this._getOrReturnCtx(input);\n        if (ctx.parsedType !== ZodParsedType.string &&\n            ctx.parsedType !== ZodParsedType.number) {\n            const expectedValues = util.objectValues(nativeEnumValues);\n            addIssueToContext(ctx, {\n                expected: util.joinValues(expectedValues),\n                received: ctx.parsedType,\n                code: ZodIssueCode.invalid_type,\n            });\n            return INVALID;\n        }\n        if (nativeEnumValues.indexOf(input.data) === -1) {\n            const expectedValues = util.objectValues(nativeEnumValues);\n            addIssueToContext(ctx, {\n                received: ctx.data,\n                code: ZodIssueCode.invalid_enum_value,\n                options: expectedValues,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n    get enum() {\n        return this._def.values;\n    }\n}\nZodNativeEnum.create = (values, params) => {\n    return new ZodNativeEnum({\n        values: values,\n        typeName: ZodFirstPartyTypeKind.ZodNativeEnum,\n        ...processCreateParams(params),\n    });\n};\nclass ZodPromise extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.promise &&\n            ctx.common.async === false) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.promise,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const promisified = ctx.parsedType === ZodParsedType.promise\n            ? ctx.data\n            : Promise.resolve(ctx.data);\n        return OK(promisified.then((data) => {\n            return this._def.type.parseAsync(data, {\n                path: ctx.path,\n                errorMap: ctx.common.contextualErrorMap,\n            });\n        }));\n    }\n}\nZodPromise.create = (schema, params) => {\n    return new ZodPromise({\n        type: schema,\n        typeName: ZodFirstPartyTypeKind.ZodPromise,\n        ...processCreateParams(params),\n    });\n};\nclass ZodEffects extends ZodType {\n    innerType() {\n        return this._def.schema;\n    }\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        const effect = this._def.effect || null;\n        if (effect.type === \"preprocess\") {\n            const processed = effect.transform(ctx.data);\n            if (ctx.common.async) {\n                return Promise.resolve(processed).then((processed) => {\n                    return this._def.schema._parseAsync({\n                        data: processed,\n                        path: ctx.path,\n                        parent: ctx,\n                    });\n                });\n            }\n            else {\n                return this._def.schema._parseSync({\n                    data: processed,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n            }\n        }\n        const checkCtx = {\n            addIssue: (arg) => {\n                addIssueToContext(ctx, arg);\n                if (arg.fatal) {\n                    status.abort();\n                }\n                else {\n                    status.dirty();\n                }\n            },\n            get path() {\n                return ctx.path;\n            },\n        };\n        checkCtx.addIssue = checkCtx.addIssue.bind(checkCtx);\n        if (effect.type === \"refinement\") {\n            const executeRefinement = (acc\n            // effect: RefinementEffect<any>\n            ) => {\n                const result = effect.refinement(acc, checkCtx);\n                if (ctx.common.async) {\n                    return Promise.resolve(result);\n                }\n                if (result instanceof Promise) {\n                    throw new Error(\"Async refinement encountered during synchronous parse operation. Use .parseAsync instead.\");\n                }\n                return acc;\n            };\n            if (ctx.common.async === false) {\n                const inner = this._def.schema._parseSync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (inner.status === \"aborted\")\n                    return INVALID;\n                if (inner.status === \"dirty\")\n                    status.dirty();\n                // return value is ignored\n                executeRefinement(inner.value);\n                return { status: status.value, value: inner.value };\n            }\n            else {\n                return this._def.schema\n                    ._parseAsync({ data: ctx.data, path: ctx.path, parent: ctx })\n                    .then((inner) => {\n                    if (inner.status === \"aborted\")\n                        return INVALID;\n                    if (inner.status === \"dirty\")\n                        status.dirty();\n                    return executeRefinement(inner.value).then(() => {\n                        return { status: status.value, value: inner.value };\n                    });\n                });\n            }\n        }\n        if (effect.type === \"transform\") {\n            if (ctx.common.async === false) {\n                const base = this._def.schema._parseSync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                // if (base.status === \"aborted\") return INVALID;\n                // if (base.status === \"dirty\") {\n                //   return { status: \"dirty\", value: base.value };\n                // }\n                if (!isValid(base))\n                    return base;\n                const result = effect.transform(base.value, checkCtx);\n                if (result instanceof Promise) {\n                    throw new Error(`Asynchronous transform encountered during synchronous parse operation. Use .parseAsync instead.`);\n                }\n                return { status: status.value, value: result };\n            }\n            else {\n                return this._def.schema\n                    ._parseAsync({ data: ctx.data, path: ctx.path, parent: ctx })\n                    .then((base) => {\n                    if (!isValid(base))\n                        return base;\n                    // if (base.status === \"aborted\") return INVALID;\n                    // if (base.status === \"dirty\") {\n                    //   return { status: \"dirty\", value: base.value };\n                    // }\n                    return Promise.resolve(effect.transform(base.value, checkCtx)).then((result) => ({ status: status.value, value: result }));\n                });\n            }\n        }\n        util.assertNever(effect);\n    }\n}\nZodEffects.create = (schema, effect, params) => {\n    return new ZodEffects({\n        schema,\n        typeName: ZodFirstPartyTypeKind.ZodEffects,\n        effect,\n        ...processCreateParams(params),\n    });\n};\nZodEffects.createWithPreprocess = (preprocess, schema, params) => {\n    return new ZodEffects({\n        schema,\n        effect: { type: \"preprocess\", transform: preprocess },\n        typeName: ZodFirstPartyTypeKind.ZodEffects,\n        ...processCreateParams(params),\n    });\n};\nclass ZodOptional extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType === ZodParsedType.undefined) {\n            return OK(undefined);\n        }\n        return this._def.innerType._parse(input);\n    }\n    unwrap() {\n        return this._def.innerType;\n    }\n}\nZodOptional.create = (type, params) => {\n    return new ZodOptional({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodOptional,\n        ...processCreateParams(params),\n    });\n};\nclass ZodNullable extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType === ZodParsedType.null) {\n            return OK(null);\n        }\n        return this._def.innerType._parse(input);\n    }\n    unwrap() {\n        return this._def.innerType;\n    }\n}\nZodNullable.create = (type, params) => {\n    return new ZodNullable({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodNullable,\n        ...processCreateParams(params),\n    });\n};\nclass ZodDefault extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        let data = ctx.data;\n        if (ctx.parsedType === ZodParsedType.undefined) {\n            data = this._def.defaultValue();\n        }\n        return this._def.innerType._parse({\n            data,\n            path: ctx.path,\n            parent: ctx,\n        });\n    }\n    removeDefault() {\n        return this._def.innerType;\n    }\n}\nZodDefault.create = (type, params) => {\n    return new ZodOptional({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodOptional,\n        ...processCreateParams(params),\n    });\n};\nclass ZodNaN extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.nan) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.nan,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return { status: \"valid\", value: input.data };\n    }\n}\nZodNaN.create = (params) => {\n    return new ZodNaN({\n        typeName: ZodFirstPartyTypeKind.ZodNaN,\n        ...processCreateParams(params),\n    });\n};\nconst BRAND = Symbol(\"zod_brand\");\nclass ZodBranded extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        const data = ctx.data;\n        return this._def.type._parse({\n            data,\n            path: ctx.path,\n            parent: ctx,\n        });\n    }\n    unwrap() {\n        return this._def.type;\n    }\n}\nconst custom = (check, params = {}, fatal) => {\n    if (check)\n        return ZodAny.create().superRefine((data, ctx) => {\n            if (!check(data)) {\n                const p = typeof params === \"function\" ? params(data) : params;\n                const p2 = typeof p === \"string\" ? { message: p } : p;\n                ctx.addIssue({ code: \"custom\", ...p2, fatal });\n            }\n        });\n    return ZodAny.create();\n};\nconst late = {\n    object: ZodObject.lazycreate,\n};\nvar ZodFirstPartyTypeKind;\n(function (ZodFirstPartyTypeKind) {\n    ZodFirstPartyTypeKind[\"ZodString\"] = \"ZodString\";\n    ZodFirstPartyTypeKind[\"ZodNumber\"] = \"ZodNumber\";\n    ZodFirstPartyTypeKind[\"ZodNaN\"] = \"ZodNaN\";\n    ZodFirstPartyTypeKind[\"ZodBigInt\"] = \"ZodBigInt\";\n    ZodFirstPartyTypeKind[\"ZodBoolean\"] = \"ZodBoolean\";\n    ZodFirstPartyTypeKind[\"ZodDate\"] = \"ZodDate\";\n    ZodFirstPartyTypeKind[\"ZodUndefined\"] = \"ZodUndefined\";\n    ZodFirstPartyTypeKind[\"ZodNull\"] = \"ZodNull\";\n    ZodFirstPartyTypeKind[\"ZodAny\"] = \"ZodAny\";\n    ZodFirstPartyTypeKind[\"ZodUnknown\"] = \"ZodUnknown\";\n    ZodFirstPartyTypeKind[\"ZodNever\"] = \"ZodNever\";\n    ZodFirstPartyTypeKind[\"ZodVoid\"] = \"ZodVoid\";\n    ZodFirstPartyTypeKind[\"ZodArray\"] = \"ZodArray\";\n    ZodFirstPartyTypeKind[\"ZodObject\"] = \"ZodObject\";\n    ZodFirstPartyTypeKind[\"ZodUnion\"] = \"ZodUnion\";\n    ZodFirstPartyTypeKind[\"ZodDiscriminatedUnion\"] = \"ZodDiscriminatedUnion\";\n    ZodFirstPartyTypeKind[\"ZodIntersection\"] = \"ZodIntersection\";\n    ZodFirstPartyTypeKind[\"ZodTuple\"] = \"ZodTuple\";\n    ZodFirstPartyTypeKind[\"ZodRecord\"] = \"ZodRecord\";\n    ZodFirstPartyTypeKind[\"ZodMap\"] = \"ZodMap\";\n    ZodFirstPartyTypeKind[\"ZodSet\"] = \"ZodSet\";\n    ZodFirstPartyTypeKind[\"ZodFunction\"] = \"ZodFunction\";\n    ZodFirstPartyTypeKind[\"ZodLazy\"] = \"ZodLazy\";\n    ZodFirstPartyTypeKind[\"ZodLiteral\"] = \"ZodLiteral\";\n    ZodFirstPartyTypeKind[\"ZodEnum\"] = \"ZodEnum\";\n    ZodFirstPartyTypeKind[\"ZodEffects\"] = \"ZodEffects\";\n    ZodFirstPartyTypeKind[\"ZodNativeEnum\"] = \"ZodNativeEnum\";\n    ZodFirstPartyTypeKind[\"ZodOptional\"] = \"ZodOptional\";\n    ZodFirstPartyTypeKind[\"ZodNullable\"] = \"ZodNullable\";\n    ZodFirstPartyTypeKind[\"ZodDefault\"] = \"ZodDefault\";\n    ZodFirstPartyTypeKind[\"ZodPromise\"] = \"ZodPromise\";\n    ZodFirstPartyTypeKind[\"ZodBranded\"] = \"ZodBranded\";\n})(ZodFirstPartyTypeKind || (ZodFirstPartyTypeKind = {}));\nconst instanceOfType = (cls, params = {\n    message: `Input not instance of ${cls.name}`,\n}) => custom((data) => data instanceof cls, params, true);\nconst stringType = ZodString.create;\nconst numberType = ZodNumber.create;\nconst nanType = ZodNaN.create;\nconst bigIntType = ZodBigInt.create;\nconst booleanType = ZodBoolean.create;\nconst dateType = ZodDate.create;\nconst undefinedType = ZodUndefined.create;\nconst nullType = ZodNull.create;\nconst anyType = ZodAny.create;\nconst unknownType = ZodUnknown.create;\nconst neverType = ZodNever.create;\nconst voidType = ZodVoid.create;\nconst arrayType = ZodArray.create;\nconst objectType = ZodObject.create;\nconst strictObjectType = ZodObject.strictCreate;\nconst unionType = ZodUnion.create;\nconst discriminatedUnionType = ZodDiscriminatedUnion.create;\nconst intersectionType = ZodIntersection.create;\nconst tupleType = ZodTuple.create;\nconst recordType = ZodRecord.create;\nconst mapType = ZodMap.create;\nconst setType = ZodSet.create;\nconst functionType = ZodFunction.create;\nconst lazyType = ZodLazy.create;\nconst literalType = ZodLiteral.create;\nconst enumType = ZodEnum.create;\nconst nativeEnumType = ZodNativeEnum.create;\nconst promiseType = ZodPromise.create;\nconst effectsType = ZodEffects.create;\nconst optionalType = ZodOptional.create;\nconst nullableType = ZodNullable.create;\nconst preprocessType = ZodEffects.createWithPreprocess;\nconst ostring = () => stringType().optional();\nconst onumber = () => numberType().optional();\nconst oboolean = () => booleanType().optional();\n\nvar mod = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    getParsedType: getParsedType,\n    ZodParsedType: ZodParsedType,\n    makeIssue: makeIssue,\n    EMPTY_PATH: EMPTY_PATH,\n    addIssueToContext: addIssueToContext,\n    ParseStatus: ParseStatus,\n    INVALID: INVALID,\n    DIRTY: DIRTY,\n    OK: OK,\n    isAborted: isAborted,\n    isDirty: isDirty,\n    isValid: isValid,\n    isAsync: isAsync,\n    jsonStringifyReplacer: jsonStringifyReplacer,\n    ZodType: ZodType,\n    ZodString: ZodString,\n    ZodNumber: ZodNumber,\n    ZodBigInt: ZodBigInt,\n    ZodBoolean: ZodBoolean,\n    ZodDate: ZodDate,\n    ZodUndefined: ZodUndefined,\n    ZodNull: ZodNull,\n    ZodAny: ZodAny,\n    ZodUnknown: ZodUnknown,\n    ZodNever: ZodNever,\n    ZodVoid: ZodVoid,\n    ZodArray: ZodArray,\n    get objectUtil () { return objectUtil; },\n    ZodObject: ZodObject,\n    ZodUnion: ZodUnion,\n    ZodDiscriminatedUnion: ZodDiscriminatedUnion,\n    ZodIntersection: ZodIntersection,\n    ZodTuple: ZodTuple,\n    ZodRecord: ZodRecord,\n    ZodMap: ZodMap,\n    ZodSet: ZodSet,\n    ZodFunction: ZodFunction,\n    ZodLazy: ZodLazy,\n    ZodLiteral: ZodLiteral,\n    ZodEnum: ZodEnum,\n    ZodNativeEnum: ZodNativeEnum,\n    ZodPromise: ZodPromise,\n    ZodEffects: ZodEffects,\n    ZodTransformer: ZodEffects,\n    ZodOptional: ZodOptional,\n    ZodNullable: ZodNullable,\n    ZodDefault: ZodDefault,\n    ZodNaN: ZodNaN,\n    BRAND: BRAND,\n    ZodBranded: ZodBranded,\n    custom: custom,\n    Schema: ZodType,\n    ZodSchema: ZodType,\n    late: late,\n    get ZodFirstPartyTypeKind () { return ZodFirstPartyTypeKind; },\n    any: anyType,\n    array: arrayType,\n    bigint: bigIntType,\n    boolean: booleanType,\n    date: dateType,\n    discriminatedUnion: discriminatedUnionType,\n    effect: effectsType,\n    'enum': enumType,\n    'function': functionType,\n    'instanceof': instanceOfType,\n    intersection: intersectionType,\n    lazy: lazyType,\n    literal: literalType,\n    map: mapType,\n    nan: nanType,\n    nativeEnum: nativeEnumType,\n    never: neverType,\n    'null': nullType,\n    nullable: nullableType,\n    number: numberType,\n    object: objectType,\n    oboolean: oboolean,\n    onumber: onumber,\n    optional: optionalType,\n    ostring: ostring,\n    preprocess: preprocessType,\n    promise: promiseType,\n    record: recordType,\n    set: setType,\n    strictObject: strictObjectType,\n    string: stringType,\n    transformer: effectsType,\n    tuple: tupleType,\n    'undefined': undefinedType,\n    union: unionType,\n    unknown: unknownType,\n    'void': voidType,\n    ZodIssueCode: ZodIssueCode,\n    quotelessJson: quotelessJson,\n    ZodError: ZodError,\n    defaultErrorMap: defaultErrorMap,\n    setErrorMap: setErrorMap,\n    getErrorMap: getErrorMap\n});\n\nexport { BRAND, DIRTY, EMPTY_PATH, INVALID, OK, ParseStatus, ZodType as Schema, ZodAny, ZodArray, ZodBigInt, ZodBoolean, ZodBranded, ZodDate, ZodDefault, ZodDiscriminatedUnion, ZodEffects, ZodEnum, ZodError, ZodFirstPartyTypeKind, ZodFunction, ZodIntersection, ZodIssueCode, ZodLazy, ZodLiteral, ZodMap, ZodNaN, ZodNativeEnum, ZodNever, ZodNull, ZodNullable, ZodNumber, ZodObject, ZodOptional, ZodParsedType, ZodPromise, ZodRecord, ZodType as ZodSchema, ZodSet, ZodString, ZodEffects as ZodTransformer, ZodTuple, ZodType, ZodUndefined, ZodUnion, ZodUnknown, ZodVoid, addIssueToContext, anyType as any, arrayType as array, bigIntType as bigint, booleanType as boolean, custom, dateType as date, mod as default, defaultErrorMap, discriminatedUnionType as discriminatedUnion, effectsType as effect, enumType as enum, functionType as function, getErrorMap, getParsedType, instanceOfType as instanceof, intersectionType as intersection, isAborted, isAsync, isDirty, isValid, jsonStringifyReplacer, late, lazyType as lazy, literalType as literal, makeIssue, mapType as map, nanType as nan, nativeEnumType as nativeEnum, neverType as never, nullType as null, nullableType as nullable, numberType as number, objectType as object, objectUtil, oboolean, onumber, optionalType as optional, ostring, preprocessType as preprocess, promiseType as promise, quotelessJson, recordType as record, setType as set, setErrorMap, strictObjectType as strictObject, stringType as string, effectsType as transformer, tupleType as tuple, undefinedType as undefined, unionType as union, unknownType as unknown, voidType as void, mod as z };\n", "export default [{\"displayName\":\"Cinnamonique\",\"userName\":\"cinnamonique\",\"profilePicUrl\":\"https://static-cdn.jtvnw.net/jtv_user_pictures/828eed05-e03d-4880-8a8d-de70a3d0f742-profile_image-300x300.png\",\"playerFlagName\":\"Unknown\",\"playerFlag\":\"unknown\",\"wasRandom\":false,\"score\":22028,\"distance\":877.2225426901051,\"timeTaken\":192132,\"streak\":0,\"countryCode\":null,\"exactCountryCode\":null,\"guessCount\":5,\"isStreamerResult\":false,\"guessedBefore\":false,\"gameId\":\"14nnQ0MRheHQOWG2\"},{\"displayName\":\"blushykate\",\"userName\":\"blushykate\",\"profilePicUrl\":\"https://static-cdn.jtvnw.net/jtv_user_pictures/77966a2c-8871-42e4-a75c-ab4efe2238b2-profile_image-300x300.png\",\"playerFlagName\":\"Greenland\",\"playerFlag\":\"gl\",\"wasRandom\":false,\"score\":21507.33,\"distance\":1154.8294920129265,\"timeTaken\":342776,\"streak\":0,\"countryCode\":null,\"exactCountryCode\":null,\"guessCount\":5,\"isStreamerResult\":false,\"guessedBefore\":false,\"gameId\":\"14nnQ0MRheHQOWG2\"},{\"displayName\":\"pigeon0427\",\"userName\":\"pigeon0427\",\"profilePicUrl\":\"https://static-cdn.jtvnw.net/user-default-pictures-uv/294c98b5-e34d-42cd-a8f0-140b72fba9b0-profile_image-300x300.png\",\"playerFlagName\":\"\",\"playerFlag\":null,\"wasRandom\":false,\"score\":20567.33,\"distance\":1260.1117104468244,\"timeTaken\":197929,\"streak\":0,\"countryCode\":null,\"exactCountryCode\":null,\"guessCount\":5,\"isStreamerResult\":false,\"guessedBefore\":false,\"gameId\":\"14nnQ0MRheHQOWG2\"},{\"displayName\":\"man_of_bananas\",\"userName\":\"man_of_bananas\",\"profilePicUrl\":\"https://static-cdn.jtvnw.net/jtv_user_pictures/3a62161a-3d67-42dd-bf47-0bf217662013-profile_image-300x300.png\",\"playerFlagName\":\"Alberta\",\"playerFlag\":\"ca-alberta\",\"wasRandom\":false,\"score\":19866.17,\"distance\":1799.1663750055902,\"timeTaken\":268736,\"streak\":0,\"countryCode\":null,\"exactCountryCode\":null,\"guessCount\":5,\"isStreamerResult\":false,\"guessedBefore\":false,\"gameId\":\"14nnQ0MRheHQOWG2\"},{\"displayName\":\"Hoschi3000\",\"userName\":\"hoschi3000\",\"profilePicUrl\":\"https://static-cdn.jtvnw.net/user-default-pictures-uv/de130ab0-def7-11e9-b668-784f43822e80-profile_image-300x300.png\",\"playerFlagName\":\"Germany\",\"playerFlag\":\"de\",\"wasRandom\":false,\"score\":19853.67,\"distance\":1742.6815677466202,\"timeTaken\":190549,\"streak\":0,\"countryCode\":null,\"exactCountryCode\":null,\"guessCount\":5,\"isStreamerResult\":false,\"guessedBefore\":false,\"gameId\":\"14nnQ0MRheHQOWG2\"},{\"displayName\":\"lysosome17\",\"userName\":\"lysosome17\",\"profilePicUrl\":\"https://static-cdn.jtvnw.net/user-default-pictures-uv/41780b5a-def8-11e9-94d9-784f43822e80-profile_image-300x300.png\",\"playerFlagName\":\"T\u00FCrkiye\",\"playerFlag\":\"tr\",\"wasRandom\":false,\"score\":19692.33,\"distance\":2065.89844387906,\"timeTaken\":449220,\"streak\":0,\"countryCode\":null,\"exactCountryCode\":null,\"guessCount\":5,\"isStreamerResult\":false,\"guessedBefore\":false,\"gameId\":\"14nnQ0MRheHQOWG2\"},{\"displayName\":\"mirandafreshfood\",\"userName\":\"mirandafreshfood\",\"profilePicUrl\":\"https://static-cdn.jtvnw.net/user-default-pictures-uv/215b7342-def9-11e9-9a66-784f43822e80-profile_image-300x300.png\",\"playerFlagName\":\"Croatia\",\"playerFlag\":\"hr\",\"wasRandom\":false,\"score\":19603.17,\"distance\":2235.900763220113,\"timeTaken\":363077,\"streak\":0,\"countryCode\":null,\"exactCountryCode\":null,\"guessCount\":5,\"isStreamerResult\":false,\"guessedBefore\":false,\"gameId\":\"14nnQ0MRheHQOWG2\"},{\"displayName\":\"valgue_\",\"userName\":\"valgue_\",\"profilePicUrl\":\"https://static-cdn.jtvnw.net/user-default-pictures-uv/ebb84563-db81-4b9c-8940-64ed33ccfc7b-profile_image-300x300.png\",\"playerFlagName\":\"France\",\"playerFlag\":\"fr\",\"wasRandom\":false,\"score\":19254.17,\"distance\":1888.0051810322757,\"timeTaken\":297049,\"streak\":0,\"countryCode\":null,\"exactCountryCode\":null,\"guessCount\":5,\"isStreamerResult\":false,\"guessedBefore\":false,\"gameId\":\"14nnQ0MRheHQOWG2\"},{\"displayName\":\"Rakef\",\"userName\":\"Rakef\",\"profilePicUrl\":\"https://lh3.googleusercontent.com/a-/ACNPEu_oMF3hlvQOsgQeRCmH7KUxrsmLSWh7aHcrKRNT-Q=s96-c\",\"playerFlagName\":\"Germany\",\"playerFlag\":\"de\",\"wasRandom\":false,\"score\":18731.5,\"distance\":3305.0608257014446,\"timeTaken\":384343,\"streak\":0,\"countryCode\":null,\"exactCountryCode\":null,\"guessCount\":5,\"isStreamerResult\":false,\"guessedBefore\":false,\"gameId\":\"14nnQ0MRheHQOWG2\"},{\"displayName\":\"Petery\",\"userName\":\"GeoPeter (YT)\",\"profilePicUrl\":\"pin/b8902ff7945cc5eec911fe15b6937b5b.png\",\"playerFlagName\":\"Latvia\",\"playerFlag\":\"lv\",\"wasRandom\":false,\"score\":18248.5,\"distance\":2767.5345392723107,\"timeTaken\":960401,\"streak\":0,\"countryCode\":null,\"exactCountryCode\":null,\"guessCount\":5,\"isStreamerResult\":false,\"guessedBefore\":false,\"gameId\":\"14nnQ0MRheHQOWG2\"},{\"displayName\":\"mollegah\",\"userName\":\"mollegah\",\"profilePicUrl\":\"https://static-cdn.jtvnw.net/jtv_user_pictures/78e7ec62-6158-414c-8842-b19929d5475a-profile_image-300x300.png\",\"playerFlagName\":\"Germany\",\"playerFlag\":\"de\",\"wasRandom\":false,\"score\":17532,\"distance\":6777.5411756164885,\"timeTaken\":336933,\"streak\":0,\"countryCode\":null,\"exactCountryCode\":null,\"guessCount\":5,\"isStreamerResult\":false,\"guessedBefore\":false,\"gameId\":\"14nnQ0MRheHQOWG2\"},{\"displayName\":\"Sraucel\",\"userName\":\"sraucel\",\"profilePicUrl\":\"https://static-cdn.jtvnw.net/jtv_user_pictures/504c85f8-cd50-48e1-b86a-55277aa48a95-profile_image-300x300.png\",\"playerFlagName\":\"\",\"playerFlag\":null,\"wasRandom\":false,\"score\":17287.16,\"distance\":4983.325235149516,\"timeTaken\":440027,\"streak\":0,\"countryCode\":null,\"exactCountryCode\":null,\"guessCount\":5,\"isStreamerResult\":false,\"guessedBefore\":false,\"gameId\":\"14nnQ0MRheHQOWG2\"},{\"displayName\":\"JohnnyC\",\"userName\":\"JohnnyC\",\"profilePicUrl\":\"https://lh3.googleusercontent.com/a/ALm5wu1MD_SE_Qy031tKJe8Wmly4JgcLiqtwush9NgF0=s96-c\",\"playerFlagName\":\"Portugal\",\"playerFlag\":\"pt\",\"wasRandom\":false,\"score\":17243.83,\"distance\":3131.7448548326265,\"timeTaken\":259701,\"streak\":0,\"countryCode\":null,\"exactCountryCode\":null,\"guessCount\":5,\"isStreamerResult\":false,\"guessedBefore\":false,\"gameId\":\"14nnQ0MRheHQOWG2\"},{\"displayName\":\"Stavboy\",\"userName\":\"Stavboy\",\"profilePicUrl\":\"https://lh3.googleusercontent.com/a/ALm5wu2svJChmHqBTSNNuMAQAjeO_f1RIXbb-EALPcr2=s96-c\",\"playerFlagName\":\"United Kingdom\",\"playerFlag\":\"gb\",\"wasRandom\":false,\"score\":17054.83,\"distance\":3585.578090957517,\"timeTaken\":361077,\"streak\":1,\"countryCode\":null,\"exactCountryCode\":null,\"guessCount\":5,\"isStreamerResult\":false,\"guessedBefore\":false,\"gameId\":\"14nnQ0MRheHQOWG2\"},{\"displayName\":\"Donald\",\"userName\":\"Donald\",\"profilePicUrl\":\"https://lh3.googleusercontent.com/a-/ACNPEu_YsXgymBK5FocyGQEMvbtUsIOnVFHf8hFnmbfB=s96-c\",\"playerFlagName\":\"North Carolina\",\"playerFlag\":\"usnc\",\"wasRandom\":false,\"score\":17048.66,\"distance\":6999.58894646637,\"timeTaken\":330278,\"streak\":0,\"countryCode\":null,\"exactCountryCode\":null,\"guessCount\":5,\"isStreamerResult\":false,\"guessedBefore\":false,\"gameId\":\"14nnQ0MRheHQOWG2\"},{\"displayName\":\"forrozeiro602\",\"userName\":\"forrozeiro602\",\"profilePicUrl\":\"https://static-cdn.jtvnw.net/user-default-pictures-uv/215b7342-def9-11e9-9a66-784f43822e80-profile_image-300x300.png\",\"playerFlagName\":\"Greece\",\"playerFlag\":\"gr\",\"wasRandom\":false,\"score\":16354.33,\"distance\":3349.2728267097236,\"timeTaken\":450680,\"streak\":0,\"countryCode\":null,\"exactCountryCode\":null,\"guessCount\":5,\"isStreamerResult\":false,\"guessedBefore\":false,\"gameId\":\"14nnQ0MRheHQOWG2\"},{\"displayName\":\"Akseli\",\"userName\":\"Akseli\",\"profilePicUrl\":\"https://lh3.googleusercontent.com/a-/ACNPEu-1f7DCXja5NCwIAmqPCNwNq_qFx2BI5WoWaosV=s96-c\",\"playerFlagName\":\"Finland\",\"playerFlag\":\"fi\",\"wasRandom\":false,\"score\":16278.5,\"distance\":7068.307641608214,\"timeTaken\":395182,\"streak\":0,\"countryCode\":null,\"exactCountryCode\":null,\"guessCount\":5,\"isStreamerResult\":false,\"guessedBefore\":false,\"gameId\":\"14nnQ0MRheHQOWG2\"},{\"displayName\":\"brunooo_ooo\",\"userName\":\"brunooo_ooo\",\"profilePicUrl\":\"https://static-cdn.jtvnw.net/jtv_user_pictures/2e45c27f-5e96-4989-beef-5c3e453867e6-profile_image-300x300.png\",\"playerFlagName\":\"Portugal\",\"playerFlag\":\"pt\",\"wasRandom\":false,\"score\":15920.16,\"distance\":3860.755118882282,\"timeTaken\":416076,\"streak\":0,\"countryCode\":null,\"exactCountryCode\":null,\"guessCount\":5,\"isStreamerResult\":false,\"guessedBefore\":false,\"gameId\":\"14nnQ0MRheHQOWG2\"},{\"displayName\":\"AstroCMB\",\"userName\":\"astrocmb\",\"profilePicUrl\":\"https://static-cdn.jtvnw.net/user-default-pictures-uv/dbdc9198-def8-11e9-8681-784f43822e80-profile_image-300x300.png\",\"playerFlagName\":\"Ireland\",\"playerFlag\":\"ie\",\"wasRandom\":false,\"score\":15911.99,\"distance\":4133.698355718264,\"timeTaken\":428964,\"streak\":0,\"countryCode\":null,\"exactCountryCode\":null,\"guessCount\":5,\"isStreamerResult\":false,\"guessedBefore\":false,\"gameId\":\"14nnQ0MRheHQOWG2\"},{\"displayName\":\"joachim472\",\"userName\":\"joachim472\",\"profilePicUrl\":\"https://static-cdn.jtvnw.net/user-default-pictures-uv/215b7342-def9-11e9-9a66-784f43822e80-profile_image-300x300.png\",\"playerFlagName\":\"Marshall Islands\",\"playerFlag\":\"mh\",\"wasRandom\":false,\"score\":15842.34,\"distance\":4324.856973711455,\"timeTaken\":292546,\"streak\":0,\"countryCode\":null,\"exactCountryCode\":null,\"guessCount\":5,\"isStreamerResult\":false,\"guessedBefore\":false,\"gameId\":\"14nnQ0MRheHQOWG2\"},{\"displayName\":\"Arthur Parssinen\",\"userName\":\"Arthur Parssinen\",\"profilePicUrl\":\"https://lh3.googleusercontent.com/a/ALm5wu16QSG4TCEJlVSpzxdWONFL0LJ_kUfHxoGhX08X=s96-c\",\"playerFlagName\":\"Finland\",\"playerFlag\":\"fi\",\"wasRandom\":false,\"score\":15470.34,\"distance\":4795.701513377983,\"timeTaken\":457322,\"streak\":0,\"countryCode\":null,\"exactCountryCode\":null,\"guessCount\":5,\"isStreamerResult\":false,\"guessedBefore\":false,\"gameId\":\"14nnQ0MRheHQOWG2\"},{\"displayName\":\"mofred\",\"userName\":\"mofred\",\"profilePicUrl\":\"https://static-cdn.jtvnw.net/jtv_user_pictures/mofred-profile_image-bf0e42f63f6b28ea-300x300.jpeg\",\"playerFlagName\":\"Germany\",\"playerFlag\":\"de\",\"wasRandom\":false,\"score\":15337.5,\"distance\":7183.029708506526,\"timeTaken\":344521,\"streak\":1,\"countryCode\":null,\"exactCountryCode\":null,\"guessCount\":5,\"isStreamerResult\":false,\"guessedBefore\":false,\"gameId\":\"14nnQ0MRheHQOWG2\"},{\"displayName\":\"nwreck\",\"userName\":\"nwreck\",\"profilePicUrl\":\"https://static-cdn.jtvnw.net/user-default-pictures-uv/13e5fa74-defa-11e9-809c-784f43822e80-profile_image-300x300.png\",\"playerFlagName\":\"Togo\",\"playerFlag\":\"tg\",\"wasRandom\":false,\"score\":15159.66,\"distance\":5849.6936272221465,\"timeTaken\":443264,\"streak\":0,\"countryCode\":null,\"exactCountryCode\":null,\"guessCount\":5,\"isStreamerResult\":false,\"guessedBefore\":false,\"gameId\":\"14nnQ0MRheHQOWG2\"},{\"displayName\":\"ssooozzz\",\"userName\":\"ssooozzz\",\"profilePicUrl\":\"https://static-cdn.jtvnw.net/jtv_user_pictures/373f8725-1e5c-4967-9b05-d8bdc2d3e024-profile_image-300x300.png\",\"playerFlagName\":\"United Kingdom\",\"playerFlag\":\"gb\",\"wasRandom\":false,\"score\":14781,\"distance\":4326.625333192403,\"timeTaken\":506559,\"streak\":0,\"countryCode\":null,\"exactCountryCode\":null,\"guessCount\":5,\"isStreamerResult\":false,\"guessedBefore\":false,\"gameId\":\"14nnQ0MRheHQOWG2\"},{\"displayName\":\"Epic_Cheese_Cat\",\"userName\":\"Epic_Cheese_Cat\",\"profilePicUrl\":\"https://lh3.googleusercontent.com/a-/ACNPEu-oNrLgIqktSeupbz3m8XJpVD43T4eUCMHFT-d7SQ=s96-c\",\"playerFlagName\":\"\",\"playerFlag\":null,\"wasRandom\":false,\"score\":14722,\"distance\":6950.727107508317,\"timeTaken\":463126,\"streak\":0,\"countryCode\":null,\"exactCountryCode\":null,\"guessCount\":5,\"isStreamerResult\":false,\"guessedBefore\":false,\"gameId\":\"14nnQ0MRheHQOWG2\"},{\"displayName\":\"Deniz Kiki\",\"userName\":\"Deniz Kiki\",\"profilePicUrl\":\"https://lh3.googleusercontent.com/a-/ACNPEu8fxJqNk2f9xuBIiDos4kRHwVUvLGl3quC4Ai150w=s96-c\",\"playerFlagName\":\"Bulgaria\",\"playerFlag\":\"bg\",\"wasRandom\":false,\"score\":14559.17,\"distance\":7296.826715372987,\"timeTaken\":415721,\"streak\":0,\"countryCode\":null,\"exactCountryCode\":null,\"guessCount\":5,\"isStreamerResult\":false,\"guessedBefore\":false,\"gameId\":\"14nnQ0MRheHQOWG2\"},{\"displayName\":\"Llamalas\",\"userName\":\"Llamalas\",\"profilePicUrl\":\"https://lh3.googleusercontent.com/a-/ACNPEu_KS7aIf1TNJVMNyPteIhJW7ZdmhZR8ZsIDuQuI=s96-c\",\"playerFlagName\":\"\",\"playerFlag\":null,\"wasRandom\":false,\"score\":14502.17,\"distance\":13985.748434088891,\"timeTaken\":226577,\"streak\":0,\"countryCode\":null,\"exactCountryCode\":null,\"guessCount\":5,\"isStreamerResult\":false,\"guessedBefore\":false,\"gameId\":\"14nnQ0MRheHQOWG2\"},{\"displayName\":\"Borislav Lukanov\",\"userName\":\"Borislav Lukanov\",\"profilePicUrl\":\"https://lh3.googleusercontent.com/a-/ACNPEu86bKb77_ruQNNx10VNMYml8KezWfSjTlngKeuYdQ=s96-c\",\"playerFlagName\":\"\",\"playerFlag\":null,\"wasRandom\":false,\"score\":14448.5,\"distance\":4984.99458812334,\"timeTaken\":460651,\"streak\":0,\"countryCode\":null,\"exactCountryCode\":null,\"guessCount\":5,\"isStreamerResult\":false,\"guessedBefore\":false,\"gameId\":\"14nnQ0MRheHQOWG2\"},{\"displayName\":\"jess795\",\"userName\":\"jess795\",\"profilePicUrl\":\"https://static-cdn.jtvnw.net/user-default-pictures-uv/de130ab0-def7-11e9-b668-784f43822e80-profile_image-300x300.png\",\"playerFlagName\":\"New Brunswick\",\"playerFlag\":\"ca-new-brunswick\",\"wasRandom\":false,\"score\":14085.34,\"distance\":7932.891334077041,\"timeTaken\":342710,\"streak\":0,\"countryCode\":null,\"exactCountryCode\":null,\"guessCount\":5,\"isStreamerResult\":false,\"guessedBefore\":false,\"gameId\":\"14nnQ0MRheHQOWG2\"},{\"displayName\":\"SHIAH SHIAH\",\"userName\":\"SHIAH SHIAH\",\"profilePicUrl\":\"https://lh3.googleusercontent.com/a-/ACNPEu-fWJWdDKNAErPvLRRICDdt85ekwpbWX4SsbbkE=s96-c\",\"playerFlagName\":\"Germany\",\"playerFlag\":\"de\",\"wasRandom\":false,\"score\":13967.5,\"distance\":6399.562711695083,\"timeTaken\":427728,\"streak\":0,\"countryCode\":null,\"exactCountryCode\":null,\"guessCount\":5,\"isStreamerResult\":false,\"guessedBefore\":false,\"gameId\":\"14nnQ0MRheHQOWG2\"},{\"displayName\":\"indigo__carmine\",\"userName\":\"indigo__carmine\",\"profilePicUrl\":\"https://static-cdn.jtvnw.net/jtv_user_pictures/a7939de4-b3f0-45ac-889d-2bf24827057e-profile_image-300x300.png\",\"playerFlagName\":\"Slovakia\",\"playerFlag\":\"sk\",\"wasRandom\":false,\"score\":13665.5,\"distance\":6867.260135762368,\"timeTaken\":414499,\"streak\":0,\"countryCode\":null,\"exactCountryCode\":null,\"guessCount\":5,\"isStreamerResult\":false,\"guessedBefore\":false,\"gameId\":\"14nnQ0MRheHQOWG2\"},{\"displayName\":\"Jason Lovett\",\"userName\":\"Jason Lovett\",\"profilePicUrl\":\"https://lh3.googleusercontent.com/a/ALm5wu2cCESKk8yuItJJhqxoq-X8kwR1ebZSpQtqpsGV=s96-c\",\"playerFlagName\":\"United Kingdom\",\"playerFlag\":\"gb\",\"wasRandom\":false,\"score\":13291,\"distance\":4942.905940323304,\"timeTaken\":290928,\"streak\":0,\"countryCode\":null,\"exactCountryCode\":null,\"guessCount\":5,\"isStreamerResult\":false,\"guessedBefore\":false,\"gameId\":\"14nnQ0MRheHQOWG2\"},{\"displayName\":\"Yuergenos\",\"userName\":\"yuergenos\",\"profilePicUrl\":\"https://static-cdn.jtvnw.net/jtv_user_pictures/29343774-087f-4458-9e6f-e61396e8b2ca-profile_image-300x300.png\",\"playerFlagName\":\"Yukon\",\"playerFlag\":\"ca-yukon\",\"wasRandom\":false,\"score\":13284,\"distance\":16420.98212765593,\"timeTaken\":254806,\"streak\":0,\"countryCode\":null,\"exactCountryCode\":null,\"guessCount\":5,\"isStreamerResult\":false,\"guessedBefore\":false,\"gameId\":\"14nnQ0MRheHQOWG2\"},{\"displayName\":\"YanitedRitchie\",\"userName\":\"yanitedritchie\",\"profilePicUrl\":\"https://static-cdn.jtvnw.net/jtv_user_pictures/37c6e030-94d6-44d2-ac77-761423f8f8a6-profile_image-300x300.png\",\"playerFlagName\":\"Sri Lanka\",\"playerFlag\":\"lk\",\"wasRandom\":false,\"score\":13184.66,\"distance\":8622.765930277454,\"timeTaken\":436795,\"streak\":1,\"countryCode\":null,\"exactCountryCode\":null,\"guessCount\":5,\"isStreamerResult\":false,\"guessedBefore\":false,\"gameId\":\"14nnQ0MRheHQOWG2\"},{\"displayName\":\"eskilate!\",\"userName\":\"eskilate!\",\"profilePicUrl\":\"https://lh3.googleusercontent.com/a-/ACNPEu-vBrNZyNBwRfu0i9jgdMI5ZGeCo1Ko-751Yhq_2A=s96-c\",\"playerFlagName\":\"\",\"playerFlag\":null,\"wasRandom\":false,\"score\":13155.5,\"distance\":7358.1401704357395,\"timeTaken\":418841,\"streak\":2,\"countryCode\":null,\"exactCountryCode\":null,\"guessCount\":5,\"isStreamerResult\":false,\"guessedBefore\":false,\"gameId\":\"14nnQ0MRheHQOWG2\"},{\"displayName\":\"Kryen 112\",\"userName\":\"Kryen 112\",\"profilePicUrl\":\"https://lh3.googleusercontent.com/a/ALm5wu2gRxHgbzFh02dnoYJA_GW6UCeroVSvW0CFcWlg=s96-c\",\"playerFlagName\":\"Netherlands\",\"playerFlag\":\"nl\",\"wasRandom\":false,\"score\":12965.67,\"distance\":12266.972088234883,\"timeTaken\":452806,\"streak\":0,\"countryCode\":null,\"exactCountryCode\":null,\"guessCount\":5,\"isStreamerResult\":false,\"guessedBefore\":false,\"gameId\":\"14nnQ0MRheHQOWG2\"},{\"displayName\":\"Socrates\",\"userName\":\"Socrates\",\"profilePicUrl\":\"https://lh3.googleusercontent.com/a-/ACNPEu9iTPFc6fKHi8dlGICpdPO4yXXXYw04YkOjrqTtjQ=s96-c\",\"playerFlagName\":\"\",\"playerFlag\":null,\"wasRandom\":false,\"score\":12947.5,\"distance\":6771.633292387641,\"timeTaken\":247021,\"streak\":0,\"countryCode\":null,\"exactCountryCode\":null,\"guessCount\":5,\"isStreamerResult\":false,\"guessedBefore\":false,\"gameId\":\"14nnQ0MRheHQOWG2\"},{\"displayName\":\"Missy Meyer\",\"userName\":\"Missy Meyer\",\"profilePicUrl\":\"https://lh3.googleusercontent.com/a-/ACNPEu9TEqA7WEw3UQH1nbLRcO4AqSRGl5mRisA2P1efXaY=s96-c\",\"playerFlagName\":\"\",\"playerFlag\":null,\"wasRandom\":false,\"score\":12788.17,\"distance\":9131.402715037224,\"timeTaken\":390304,\"streak\":0,\"countryCode\":null,\"exactCountryCode\":null,\"guessCount\":5,\"isStreamerResult\":false,\"guessedBefore\":false,\"gameId\":\"14nnQ0MRheHQOWG2\"},{\"displayName\":\"Sandy P\",\"userName\":\"Sandy P\",\"profilePicUrl\":\"https://lh3.googleusercontent.com/a-/ACNPEu8FnRQqWfdcDMmKonhYVGK5VMe_YcJk4w8rYoJj=s96-c\",\"playerFlagName\":\"\",\"playerFlag\":null,\"wasRandom\":false,\"score\":12664.83,\"distance\":14983.283411804405,\"timeTaken\":400324,\"streak\":0,\"countryCode\":null,\"exactCountryCode\":null,\"guessCount\":5,\"isStreamerResult\":false,\"guessedBefore\":false,\"gameId\":\"14nnQ0MRheHQOWG2\"},{\"displayName\":\"jim12__\",\"userName\":\"jim12__\",\"profilePicUrl\":\"https://static-cdn.jtvnw.net/jtv_user_pictures/7b44669d-29d9-4e09-bf3c-ca928ad94f06-profile_image-300x300.png\",\"playerFlagName\":\"Egypt\",\"playerFlag\":\"eg\",\"wasRandom\":false,\"score\":12643.5,\"distance\":6451.76377732052,\"timeTaken\":408200,\"streak\":0,\"countryCode\":null,\"exactCountryCode\":null,\"guessCount\":5,\"isStreamerResult\":false,\"guessedBefore\":false,\"gameId\":\"14nnQ0MRheHQOWG2\"},{\"displayName\":\"Mason Martinez\",\"userName\":\"Mason Martinez\",\"profilePicUrl\":\"https://lh3.googleusercontent.com/a-/ACNPEu9t2jzkv6R0K9mYxHiioVKfAo1jqaBH9d1oEIIH=s96-c\",\"playerFlagName\":\"\",\"playerFlag\":null,\"wasRandom\":false,\"score\":12624.33,\"distance\":15128.698069280701,\"timeTaken\":384538,\"streak\":0,\"countryCode\":null,\"exactCountryCode\":null,\"guessCount\":5,\"isStreamerResult\":false,\"guessedBefore\":false,\"gameId\":\"14nnQ0MRheHQOWG2\"},{\"displayName\":\"MiniGolfPhenom\",\"userName\":\"MiniGolfPhenom\",\"profilePicUrl\":\"https://lh3.googleusercontent.com/a/ALm5wu2Up0eAJpbSzlxrGC4pmQkmLO72Fr0SzJpojGDU=s96-c\",\"playerFlagName\":\"\",\"playerFlag\":null,\"wasRandom\":false,\"score\":12557.82,\"distance\":7389.050510242712,\"timeTaken\":409749,\"streak\":0,\"countryCode\":null,\"exactCountryCode\":null,\"guessCount\":5,\"isStreamerResult\":false,\"guessedBefore\":false,\"gameId\":\"14nnQ0MRheHQOWG2\"},{\"displayName\":\"Enrix\",\"userName\":\"Enrix\",\"profilePicUrl\":\"https://lh3.googleusercontent.com/a-/ACNPEu-C4fjilqdsAeM1kiRGxPOBH3E8S7barXGt38_c=s96-c\",\"playerFlagName\":\"\",\"playerFlag\":null,\"wasRandom\":false,\"score\":12456,\"distance\":9226.79152090565,\"timeTaken\":191778,\"streak\":1,\"countryCode\":null,\"exactCountryCode\":null,\"guessCount\":5,\"isStreamerResult\":false,\"guessedBefore\":false,\"gameId\":\"14nnQ0MRheHQOWG2\"},{\"displayName\":\"Wyatt Wilson\",\"userName\":\"Wyatt Wilson\",\"profilePicUrl\":\"https://lh3.googleusercontent.com/a-/ACNPEu960quHcKE9_OLQdwcgy7KDOWWBkSt7j4eKqlwd=s96-c\",\"playerFlagName\":\"\",\"playerFlag\":null,\"wasRandom\":false,\"score\":12150.17,\"distance\":6305.430588265376,\"timeTaken\":267222,\"streak\":0,\"countryCode\":null,\"exactCountryCode\":null,\"guessCount\":5,\"isStreamerResult\":false,\"guessedBefore\":false,\"gameId\":\"14nnQ0MRheHQOWG2\"},{\"displayName\":\"NexusView\",\"userName\":\"nexusview\",\"profilePicUrl\":\"https://static-cdn.jtvnw.net/jtv_user_pictures/450cf5f5-bea8-4d44-94b5-89ba0704a411-profile_image-300x300.png\",\"playerFlagName\":\"Denmark\",\"playerFlag\":\"dk\",\"wasRandom\":false,\"score\":12087.5,\"distance\":926.8687373037426,\"timeTaken\":105179,\"streak\":0,\"countryCode\":null,\"exactCountryCode\":null,\"guessCount\":3,\"isStreamerResult\":false,\"guessedBefore\":false,\"gameId\":\"14nnQ0MRheHQOWG2\"},{\"displayName\":\"DelCarlo\",\"userName\":\"delcarlo\",\"profilePicUrl\":\"https://static-cdn.jtvnw.net/user-default-pictures-uv/ead5c8b2-a4c9-4724-b1dd-9f00b46cbd3d-profile_image-300x300.png\",\"playerFlagName\":\"USA\",\"playerFlag\":\"us\",\"wasRandom\":false,\"score\":11952,\"distance\":6587.792925375624,\"timeTaken\":331933,\"streak\":0,\"countryCode\":null,\"exactCountryCode\":null,\"guessCount\":5,\"isStreamerResult\":false,\"guessedBefore\":false,\"gameId\":\"14nnQ0MRheHQOWG2\"},{\"displayName\":\"benofchess\",\"userName\":\"benofchess\",\"profilePicUrl\":\"https://static-cdn.jtvnw.net/user-default-pictures-uv/ebb84563-db81-4b9c-8940-64ed33ccfc7b-profile_image-300x300.png\",\"playerFlagName\":\"Canada\",\"playerFlag\":\"ca\",\"wasRandom\":false,\"score\":11909.83,\"distance\":15477.654580834966,\"timeTaken\":282802,\"streak\":0,\"countryCode\":null,\"exactCountryCode\":null,\"guessCount\":5,\"isStreamerResult\":false,\"guessedBefore\":false,\"gameId\":\"14nnQ0MRheHQOWG2\"},{\"displayName\":\"svlxprd\",\"userName\":\"svlxprd\",\"profilePicUrl\":\"https://static-cdn.jtvnw.net/jtv_user_pictures/802f9dc1-1f0f-4804-b505-4f2f3954fb97-profile_image-300x300.png\",\"playerFlagName\":\"\",\"playerFlag\":null,\"wasRandom\":false,\"score\":11892,\"distance\":956.3857545387127,\"timeTaken\":387323,\"streak\":0,\"countryCode\":null,\"exactCountryCode\":null,\"guessCount\":3,\"isStreamerResult\":false,\"guessedBefore\":false,\"gameId\":\"14nnQ0MRheHQOWG2\"},{\"displayName\":\"K\u00FCgul Stan\",\"userName\":\"K\u00FCgul Stan\",\"profilePicUrl\":\"https://lh3.googleusercontent.com/a-/ACNPEu-zArLjq9BPzDl47MUQAjA-nas2iLth-DtB13Cxpw=s96-c\",\"playerFlagName\":\"\",\"playerFlag\":null,\"wasRandom\":false,\"score\":11790.67,\"distance\":1056.1288509587964,\"timeTaken\":261369,\"streak\":1,\"countryCode\":null,\"exactCountryCode\":null,\"guessCount\":3,\"isStreamerResult\":false,\"guessedBefore\":false,\"gameId\":\"14nnQ0MRheHQOWG2\"},{\"displayName\":\"artification\",\"userName\":\"artification\",\"profilePicUrl\":\"https://static-cdn.jtvnw.net/user-default-pictures-uv/215b7342-def9-11e9-9a66-784f43822e80-profile_image-300x300.png\",\"playerFlagName\":\"\",\"playerFlag\":null,\"wasRandom\":false,\"score\":11747.17,\"distance\":6981.784737664651,\"timeTaken\":321017,\"streak\":0,\"countryCode\":null,\"exactCountryCode\":null,\"guessCount\":5,\"isStreamerResult\":false,\"guessedBefore\":false,\"gameId\":\"14nnQ0MRheHQOWG2\"},{\"displayName\":\"Sayan Singha\",\"userName\":\"Sayan Singha\",\"profilePicUrl\":\"https://lh3.googleusercontent.com/a/ALm5wu3hyakAolGYgnIU6sgyAsM8ldTyanAkjqsc1-nb=s96-c\",\"playerFlagName\":\"\",\"playerFlag\":null,\"wasRandom\":false,\"score\":11654,\"distance\":8390.615677965698,\"timeTaken\":430643,\"streak\":0,\"countryCode\":null,\"exactCountryCode\":null,\"guessCount\":5,\"isStreamerResult\":false,\"guessedBefore\":false,\"gameId\":\"14nnQ0MRheHQOWG2\"},{\"displayName\":\"Jonathan Post\",\"userName\":\"Jonathan Post\",\"profilePicUrl\":\"https://lh3.googleusercontent.com/a/ALm5wu0E8EMOTPn07qof2mGpQN4MwTjLcE7dnKkqsvQX=s96-c\",\"playerFlagName\":\"\",\"playerFlag\":null,\"wasRandom\":false,\"score\":11570.66,\"distance\":5774.350814253757,\"timeTaken\":289775,\"streak\":0,\"countryCode\":null,\"exactCountryCode\":null,\"guessCount\":4,\"isStreamerResult\":false,\"guessedBefore\":false,\"gameId\":\"14nnQ0MRheHQOWG2\"},{\"displayName\":\"Daniil Bejan\",\"userName\":\"Daniil Bejan\",\"profilePicUrl\":\"https://lh3.googleusercontent.com/a/ALm5wu27vJU6bCnz-NDpjnJYgDf19HYyv_JCMnxW55M=s96-c\",\"playerFlagName\":\"Moldova\",\"playerFlag\":\"md\",\"wasRandom\":false,\"score\":11443,\"distance\":10435.830173138838,\"timeTaken\":400836,\"streak\":0,\"countryCode\":null,\"exactCountryCode\":null,\"guessCount\":5,\"isStreamerResult\":false,\"guessedBefore\":false,\"gameId\":\"14nnQ0MRheHQOWG2\"},{\"displayName\":\"Non Aligned\",\"userName\":\"Non Aligned\",\"profilePicUrl\":\"https://lh3.googleusercontent.com/a-/ACNPEu_3TJwFPnPW0UqdH8Yb2wbp-7_va7Gx6CynOFtmtg=s96-c\",\"playerFlagName\":\"United Kingdom\",\"playerFlag\":\"gb\",\"wasRandom\":false,\"score\":11141.68,\"distance\":7778.480079006789,\"timeTaken\":454602,\"streak\":0,\"countryCode\":null,\"exactCountryCode\":null,\"guessCount\":5,\"isStreamerResult\":false,\"guessedBefore\":false,\"gameId\":\"14nnQ0MRheHQOWG2\"},{\"displayName\":\"Moses1979\",\"userName\":\"Moses1979\",\"profilePicUrl\":\"https://lh3.googleusercontent.com/a-/ACNPEu_27ed7jBURyGPcVoZ7CskY2vs8suGHPe0gHqrP=s96-c\",\"playerFlagName\":\"\",\"playerFlag\":null,\"wasRandom\":false,\"score\":11135.68,\"distance\":17260.198501410676,\"timeTaken\":467013,\"streak\":0,\"countryCode\":null,\"exactCountryCode\":null,\"guessCount\":5,\"isStreamerResult\":false,\"guessedBefore\":false,\"gameId\":\"14nnQ0MRheHQOWG2\"},{\"displayName\":\"wudilka\",\"userName\":\"wudilka\",\"profilePicUrl\":\"https://static-cdn.jtvnw.net/user-default-pictures-uv/dbdc9198-def8-11e9-8681-784f43822e80-profile_image-300x300.png\",\"playerFlagName\":\"\",\"playerFlag\":null,\"wasRandom\":false,\"score\":11125.33,\"distance\":17654.342514849577,\"timeTaken\":320677,\"streak\":1,\"countryCode\":null,\"exactCountryCode\":null,\"guessCount\":5,\"isStreamerResult\":false,\"guessedBefore\":false,\"gameId\":\"14nnQ0MRheHQOWG2\"},{\"displayName\":\"Ivo Abreu\",\"userName\":\"Ivo Abreu\",\"profilePicUrl\":\"https://lh3.googleusercontent.com/a-/ACNPEu81cvLZZeh4XK3_b2pr9mNvRhOgnlFj076uWh4=s96-c\",\"playerFlagName\":\"\",\"playerFlag\":null,\"wasRandom\":false,\"score\":11111.34,\"distance\":7727.864179193627,\"timeTaken\":415846,\"streak\":1,\"countryCode\":null,\"exactCountryCode\":null,\"guessCount\":5,\"isStreamerResult\":false,\"guessedBefore\":false,\"gameId\":\"14nnQ0MRheHQOWG2\"},{\"displayName\":\"Hei Chan\",\"userName\":\"Hei Chan\",\"profilePicUrl\":\"https://lh3.googleusercontent.com/a/ALm5wu0y_Jmt2KPlUuQv_x_Yr1XJKY_SO9_Rm4vSetoE=s96-c\",\"playerFlagName\":\"Hong Kong\",\"playerFlag\":\"hk\",\"wasRandom\":false,\"score\":10929.5,\"distance\":8134.26839222712,\"timeTaken\":208270,\"streak\":0,\"countryCode\":null,\"exactCountryCode\":null,\"guessCount\":4,\"isStreamerResult\":false,\"guessedBefore\":false,\"gameId\":\"14nnQ0MRheHQOWG2\"},{\"displayName\":\"wissensdigger\",\"userName\":\"wissensdigger\",\"profilePicUrl\":\"https://static-cdn.jtvnw.net/user-default-pictures-uv/998f01ae-def8-11e9-b95c-784f43822e80-profile_image-300x300.png\",\"playerFlagName\":\"\",\"playerFlag\":null,\"wasRandom\":false,\"score\":10647.51,\"distance\":9322.413817383242,\"timeTaken\":602877,\"streak\":0,\"countryCode\":null,\"exactCountryCode\":null,\"guessCount\":5,\"isStreamerResult\":false,\"guessedBefore\":false,\"gameId\":\"14nnQ0MRheHQOWG2\"},{\"displayName\":\"Dividenden Nerd\",\"userName\":\"Dividenden Nerd\",\"profilePicUrl\":\"https://lh3.googleusercontent.com/a-/ACNPEu_XZSa6yx5nk_z7nYhVHoew5L23yz6Kp62xlvyH=s96-c\",\"playerFlagName\":\"Germany\",\"playerFlag\":\"de\",\"wasRandom\":false,\"score\":10645.84,\"distance\":7005.003496416226,\"timeTaken\":292118,\"streak\":0,\"countryCode\":null,\"exactCountryCode\":null,\"guessCount\":5,\"isStreamerResult\":false,\"guessedBefore\":false,\"gameId\":\"14nnQ0MRheHQOWG2\"},{\"displayName\":\"absorbedrex2901\",\"userName\":\"absorbedrex2901\",\"profilePicUrl\":\"https://static-cdn.jtvnw.net/user-default-pictures-uv/13e5fa74-defa-11e9-809c-784f43822e80-profile_image-300x300.png\",\"playerFlagName\":\"\",\"playerFlag\":null,\"wasRandom\":false,\"score\":10456.67,\"distance\":7133.405216385553,\"timeTaken\":377287,\"streak\":0,\"countryCode\":null,\"exactCountryCode\":null,\"guessCount\":5,\"isStreamerResult\":false,\"guessedBefore\":false,\"gameId\":\"14nnQ0MRheHQOWG2\"},{\"displayName\":\"Sebastian Schmitt\",\"userName\":\"Sebastian Schmitt\",\"profilePicUrl\":\"https://lh3.googleusercontent.com/a/ALm5wu0SZp6vYGWPQIdr7dR91paRwkpn7AI5jWpgGpYS=s96-c\",\"playerFlagName\":\"Germany\",\"playerFlag\":\"de\",\"wasRandom\":false,\"score\":10318.5,\"distance\":12991.135209951288,\"timeTaken\":294125,\"streak\":0,\"countryCode\":null,\"exactCountryCode\":null,\"guessCount\":5,\"isStreamerResult\":false,\"guessedBefore\":false,\"gameId\":\"14nnQ0MRheHQOWG2\"},{\"displayName\":\"primemillennial\",\"userName\":\"primemillennial\",\"profilePicUrl\":\"https://static-cdn.jtvnw.net/jtv_user_pictures/8d4565b4-03c3-42c3-9b7f-8f6878b70eb0-profile_image-300x300.png\",\"playerFlagName\":\"USA\",\"playerFlag\":\"us\",\"wasRandom\":false,\"score\":10241.66,\"distance\":9540.044046284136,\"timeTaken\":548747,\"streak\":0,\"countryCode\":null,\"exactCountryCode\":null,\"guessCount\":5,\"isStreamerResult\":false,\"guessedBefore\":false,\"gameId\":\"14nnQ0MRheHQOWG2\"},{\"displayName\":\"Vyacheslav\",\"userName\":\"Vyacheslav\",\"profilePicUrl\":\"https://lh3.googleusercontent.com/a-/ACNPEu_OtUckiDtKWwXUrw_kHt0zJxzwWdEoT5hZDu176Q=s96-c\",\"playerFlagName\":\"\",\"playerFlag\":null,\"wasRandom\":false,\"score\":9886,\"distance\":14345.013348205548,\"timeTaken\":435489,\"streak\":0,\"countryCode\":null,\"exactCountryCode\":null,\"guessCount\":5,\"isStreamerResult\":false,\"guessedBefore\":false,\"gameId\":\"14nnQ0MRheHQOWG2\"},{\"displayName\":\"flaze\",\"userName\":\"flaze\",\"profilePicUrl\":\"https://lh3.googleusercontent.com/a-/ACNPEu-t7ycysugGzo3skatu-stIlbZ0Yug5o_UxCNb8pw=s96-c\",\"playerFlagName\":\"Germany\",\"playerFlag\":\"de\",\"wasRandom\":false,\"score\":9876.83,\"distance\":14219.62674877741,\"timeTaken\":444803,\"streak\":0,\"countryCode\":null,\"exactCountryCode\":null,\"guessCount\":4,\"isStreamerResult\":false,\"guessedBefore\":false,\"gameId\":\"14nnQ0MRheHQOWG2\"},{\"displayName\":\"ImPotassium_\",\"userName\":\"impotassium_\",\"profilePicUrl\":\"https://static-cdn.jtvnw.net/jtv_user_pictures/f5de9825-f46c-4ccf-8b24-b463fcda4e55-profile_image-300x300.png\",\"playerFlagName\":\"Seychelles\",\"playerFlag\":\"sc\",\"wasRandom\":false,\"score\":9696.5,\"distance\":16726.279914490904,\"timeTaken\":386348,\"streak\":0,\"countryCode\":null,\"exactCountryCode\":null,\"guessCount\":5,\"isStreamerResult\":false,\"guessedBefore\":false,\"gameId\":\"14nnQ0MRheHQOWG2\"},{\"displayName\":\"Gladias\",\"userName\":\"Gladias\",\"profilePicUrl\":\"https://lh3.googleusercontent.com/a-/ACNPEu_YCXpUg1ugU3wg1hLjsEZv_RbWQaNS5UVgD6WG=s96-c\",\"playerFlagName\":\"\",\"playerFlag\":null,\"wasRandom\":false,\"score\":9603.17,\"distance\":17506.623395496175,\"timeTaken\":349204,\"streak\":0,\"countryCode\":null,\"exactCountryCode\":null,\"guessCount\":5,\"isStreamerResult\":false,\"guessedBefore\":false,\"gameId\":\"14nnQ0MRheHQOWG2\"},{\"displayName\":\"Bla\u017E Nepu\u017Elan\",\"userName\":\"Bla\u017E Nepu\u017Elan\",\"profilePicUrl\":\"https://lh3.googleusercontent.com/a/ALm5wu1ZCmZKTXgUlCIhZlWxHSYQxc2f-2ZUY5ojizyn=s96-c\",\"playerFlagName\":\"\",\"playerFlag\":null,\"wasRandom\":false,\"score\":9540.83,\"distance\":9862.649419518928,\"timeTaken\":503861,\"streak\":0,\"countryCode\":null,\"exactCountryCode\":null,\"guessCount\":5,\"isStreamerResult\":false,\"guessedBefore\":false,\"gameId\":\"14nnQ0MRheHQOWG2\"},{\"displayName\":\"Isaac Tompkin\",\"userName\":\"Isaac Tompkin\",\"profilePicUrl\":\"https://lh3.googleusercontent.com/a/ALm5wu14nH879q10rTyGe2x6jLUAckrprFBQvc62Zpc=s96-c\",\"playerFlagName\":\"Andorra\",\"playerFlag\":\"ad\",\"wasRandom\":false,\"score\":9533.67,\"distance\":11347.888961902489,\"timeTaken\":626813,\"streak\":1,\"countryCode\":null,\"exactCountryCode\":null,\"guessCount\":5,\"isStreamerResult\":false,\"guessedBefore\":false,\"gameId\":\"14nnQ0MRheHQOWG2\"},{\"displayName\":\"Lawrence Chen\",\"userName\":\"Lawrence Chen\",\"profilePicUrl\":\"https://lh3.googleusercontent.com/a-/ACNPEu9BZzvUMpXA_gSHVKW-3h8oVbMrgKFHgZVl6HbVKQ=s96-c\",\"playerFlagName\":\"\",\"playerFlag\":null,\"wasRandom\":false,\"score\":9528.16,\"distance\":17904.733386207914,\"timeTaken\":532620,\"streak\":0,\"countryCode\":null,\"exactCountryCode\":null,\"guessCount\":5,\"isStreamerResult\":false,\"guessedBefore\":false,\"gameId\":\"14nnQ0MRheHQOWG2\"},{\"displayName\":\"No Name\",\"userName\":\"No Name\",\"profilePicUrl\":\"https://lh3.googleusercontent.com/a/ALm5wu25V1bhS9zbqJWRFviUM5oJACiPkNppL0eZXiVH=s96-c\",\"playerFlagName\":\"\",\"playerFlag\":null,\"wasRandom\":false,\"score\":9394.16,\"distance\":19694.02833694183,\"timeTaken\":341627,\"streak\":0,\"countryCode\":null,\"exactCountryCode\":null,\"guessCount\":5,\"isStreamerResult\":false,\"guessedBefore\":false,\"gameId\":\"14nnQ0MRheHQOWG2\"},{\"displayName\":\"mixmissed123\",\"userName\":\"mixmissed123\",\"profilePicUrl\":\"https://static-cdn.jtvnw.net/user-default-pictures-uv/215b7342-def9-11e9-9a66-784f43822e80-profile_image-300x300.png\",\"playerFlagName\":\"Norway\",\"playerFlag\":\"no\",\"wasRandom\":false,\"score\":9309.99,\"distance\":11028.28276100864,\"timeTaken\":316382,\"streak\":0,\"countryCode\":null,\"exactCountryCode\":null,\"guessCount\":5,\"isStreamerResult\":false,\"guessedBefore\":false,\"gameId\":\"14nnQ0MRheHQOWG2\"},{\"displayName\":\"IndyDeedy\",\"userName\":\"indydeedy\",\"profilePicUrl\":\"https://static-cdn.jtvnw.net/user-default-pictures-uv/cdd517fe-def4-11e9-948e-784f43822e80-profile_image-300x300.png\",\"playerFlagName\":\"New Zealand\",\"playerFlag\":\"nz\",\"wasRandom\":false,\"score\":9267.33,\"distance\":11368.041001079248,\"timeTaken\":556415,\"streak\":0,\"countryCode\":null,\"exactCountryCode\":null,\"guessCount\":5,\"isStreamerResult\":false,\"guessedBefore\":false,\"gameId\":\"14nnQ0MRheHQOWG2\"},{\"displayName\":\"Archer Watson\",\"userName\":\"Archer Watson\",\"profilePicUrl\":\"https://lh3.googleusercontent.com/a-/ACNPEu840ndFbV0xOllIkEBKdlVZPqSgZjEEjdWQp6-G6w=s96-c\",\"playerFlagName\":\"Kiribati\",\"playerFlag\":\"ki\",\"wasRandom\":false,\"score\":9253,\"distance\":6478.318559602943,\"timeTaken\":270813,\"streak\":0,\"countryCode\":null,\"exactCountryCode\":null,\"guessCount\":4,\"isStreamerResult\":false,\"guessedBefore\":false,\"gameId\":\"14nnQ0MRheHQOWG2\"},{\"displayName\":\"Nico Zoeschg\",\"userName\":\"Nico Zoeschg\",\"profilePicUrl\":\"https://lh3.googleusercontent.com/a/ALm5wu3ziQn22-884WM-pR3NP4Xve3kb110vQsd_5Ffs=s96-c\",\"playerFlagName\":\"\",\"playerFlag\":null,\"wasRandom\":false,\"score\":9204.5,\"distance\":3549.386687089949,\"timeTaken\":221972,\"streak\":0,\"countryCode\":null,\"exactCountryCode\":null,\"guessCount\":3,\"isStreamerResult\":false,\"guessedBefore\":false,\"gameId\":\"14nnQ0MRheHQOWG2\"},{\"displayName\":\"William Bolding\",\"userName\":\"William Bolding\",\"profilePicUrl\":\"https://lh3.googleusercontent.com/a-/ACNPEu_zfVuyr8urGtvjzuvU99pxMOmSYv0ZafkEtohZlQ=s96-c\",\"playerFlagName\":\"USA\",\"playerFlag\":\"us\",\"wasRandom\":false,\"score\":9087.5,\"distance\":16686.955894296338,\"timeTaken\":222153,\"streak\":0,\"countryCode\":null,\"exactCountryCode\":null,\"guessCount\":5,\"isStreamerResult\":false,\"guessedBefore\":false,\"gameId\":\"14nnQ0MRheHQOWG2\"},{\"displayName\":\"Jack Hughes\",\"userName\":\"Jack Hughes\",\"profilePicUrl\":\"https://lh3.googleusercontent.com/a-/ACNPEu8csHubpVo2TOqpjR3bEhF5U0mj6J13CItq4AOyug=s96-c\",\"playerFlagName\":\"\",\"playerFlag\":null,\"wasRandom\":false,\"score\":9002.83,\"distance\":20917.563558232563,\"timeTaken\":421009,\"streak\":0,\"countryCode\":null,\"exactCountryCode\":null,\"guessCount\":5,\"isStreamerResult\":false,\"guessedBefore\":false,\"gameId\":\"14nnQ0MRheHQOWG2\"},{\"displayName\":\"Jeroen ter Steeg\",\"userName\":\"Jeroen ter Steeg\",\"profilePicUrl\":\"https://lh3.googleusercontent.com/a-/ACNPEu86jKCrpVWGr_yhMm17RBEYdbJAh0D7FWagquCT8g=s96-c\",\"playerFlagName\":\"\",\"playerFlag\":null,\"wasRandom\":false,\"score\":8937.67,\"distance\":16554.894509806294,\"timeTaken\":432504,\"streak\":1,\"countryCode\":null,\"exactCountryCode\":null,\"guessCount\":5,\"isStreamerResult\":false,\"guessedBefore\":false,\"gameId\":\"14nnQ0MRheHQOWG2\"},{\"displayName\":\"m_room\",\"userName\":\"m_room\",\"profilePicUrl\":\"https://lh3.googleusercontent.com/a-/ACNPEu_rWHJmP0lDaw70Y097qhN1aqe8dOaaZj1p0TRH=s96-c\",\"playerFlagName\":\"\",\"playerFlag\":null,\"wasRandom\":false,\"score\":8915.83,\"distance\":16823.901750283556,\"timeTaken\":334706,\"streak\":0,\"countryCode\":null,\"exactCountryCode\":null,\"guessCount\":5,\"isStreamerResult\":false,\"guessedBefore\":false,\"gameId\":\"14nnQ0MRheHQOWG2\"},{\"displayName\":\"dsapikas\",\"userName\":\"dsapikas\",\"profilePicUrl\":\"https://static-cdn.jtvnw.net/user-default-pictures-uv/75305d54-c7cc-40d1-bb9c-91fbe85943c7-profile_image-300x300.png\",\"playerFlagName\":\"Greece\",\"playerFlag\":\"gr\",\"wasRandom\":false,\"score\":8893.33,\"distance\":6524.213899354515,\"timeTaken\":221549,\"streak\":0,\"countryCode\":null,\"exactCountryCode\":null,\"guessCount\":4,\"isStreamerResult\":false,\"guessedBefore\":false,\"gameId\":\"14nnQ0MRheHQOWG2\"},{\"displayName\":\"GuyOnMoose\",\"userName\":\"GuyOnMoose\",\"profilePicUrl\":\"https://lh3.googleusercontent.com/a/ALm5wu1YHiOycTpAUK7h4gCQlKrT1AymSP2OugBMU6jt=s96-c\",\"playerFlagName\":\"Canada\",\"playerFlag\":\"ca\",\"wasRandom\":false,\"score\":8866.67,\"distance\":11140.377323578254,\"timeTaken\":349043,\"streak\":0,\"countryCode\":null,\"exactCountryCode\":null,\"guessCount\":5,\"isStreamerResult\":false,\"guessedBefore\":false,\"gameId\":\"14nnQ0MRheHQOWG2\"},{\"displayName\":\"Carsten Marks\",\"userName\":\"Carsten Marks\",\"profilePicUrl\":\"https://lh3.googleusercontent.com/a/ALm5wu3rzltQDmSIdXU7nyCZUkZOJXq7U2WAiq1HP060=s96-c\",\"playerFlagName\":\"\",\"playerFlag\":null,\"wasRandom\":false,\"score\":8822.5,\"distance\":13773.101591546843,\"timeTaken\":357819,\"streak\":0,\"countryCode\":null,\"exactCountryCode\":null,\"guessCount\":5,\"isStreamerResult\":false,\"guessedBefore\":false,\"gameId\":\"14nnQ0MRheHQOWG2\"},{\"displayName\":\"elinaishere\",\"userName\":\"elinaishere\",\"profilePicUrl\":\"https://static-cdn.jtvnw.net/user-default-pictures-uv/dbdc9198-def8-11e9-8681-784f43822e80-profile_image-300x300.png\",\"playerFlagName\":\"Latvia\",\"playerFlag\":\"lv\",\"wasRandom\":false,\"score\":8572.51,\"distance\":9829.72005517715,\"timeTaken\":487698,\"streak\":0,\"countryCode\":null,\"exactCountryCode\":null,\"guessCount\":5,\"isStreamerResult\":false,\"guessedBefore\":false,\"gameId\":\"14nnQ0MRheHQOWG2\"},{\"displayName\":\"kisieliux\",\"userName\":\"kisieliux\",\"profilePicUrl\":\"https://static-cdn.jtvnw.net/user-default-pictures-uv/ce57700a-def9-11e9-842d-784f43822e80-profile_image-300x300.png\",\"playerFlagName\":\"Lithuania\",\"playerFlag\":\"lt\",\"wasRandom\":false,\"score\":8340.83,\"distance\":13854.895135783936,\"timeTaken\":316809,\"streak\":0,\"countryCode\":null,\"exactCountryCode\":null,\"guessCount\":5,\"isStreamerResult\":false,\"guessedBefore\":false,\"gameId\":\"14nnQ0MRheHQOWG2\"},{\"displayName\":\"Mihail Constantin\",\"userName\":\"Mihail Constantin\",\"profilePicUrl\":\"https://lh3.googleusercontent.com/a/ALm5wu3c_6Q1CkDJza-CWmOrjF2R8hlqKLtOJSSJ20nj=s96-c\",\"playerFlagName\":\"\",\"playerFlag\":null,\"wasRandom\":false,\"score\":8265,\"distance\":393.88413462907624,\"timeTaken\":188122,\"streak\":0,\"countryCode\":null,\"exactCountryCode\":null,\"guessCount\":2,\"isStreamerResult\":false,\"guessedBefore\":false,\"gameId\":\"14nnQ0MRheHQOWG2\"},{\"displayName\":\"V\u00EDt Hou\u0161ka\",\"userName\":\"V\u00EDt Hou\u0161ka\",\"profilePicUrl\":\"https://lh3.googleusercontent.com/a-/ACNPEu8vPkNE2rSg7AoW_pan7zCoi9wh9dxjUsDrxzyaEA=s96-c\",\"playerFlagName\":\"Czech Republic\",\"playerFlag\":\"cz\",\"wasRandom\":false,\"score\":8248.33,\"distance\":11859.19647728258,\"timeTaken\":407292,\"streak\":0,\"countryCode\":null,\"exactCountryCode\":null,\"guessCount\":5,\"isStreamerResult\":false,\"guessedBefore\":false,\"gameId\":\"14nnQ0MRheHQOWG2\"},{\"displayName\":\"sidc28\",\"userName\":\"sidc28\",\"profilePicUrl\":\"https://static-cdn.jtvnw.net/user-default-pictures-uv/ead5c8b2-a4c9-4724-b1dd-9f00b46cbd3d-profile_image-300x300.png\",\"playerFlagName\":\"India\",\"playerFlag\":\"in\",\"wasRandom\":false,\"score\":8072.17,\"distance\":3403.613584949939,\"timeTaken\":219645,\"streak\":0,\"countryCode\":null,\"exactCountryCode\":null,\"guessCount\":3,\"isStreamerResult\":false,\"guessedBefore\":false,\"gameId\":\"14nnQ0MRheHQOWG2\"},{\"displayName\":\"KSF0 Building\",\"userName\":\"KSF0 Building\",\"profilePicUrl\":\"https://lh3.googleusercontent.com/a/ALm5wu1P4ySaa-Pslbrys7Ek0r4tOJzl2XHqvkECnsQ=s96-c\",\"playerFlagName\":\"\",\"playerFlag\":null,\"wasRandom\":false,\"score\":8051.5,\"distance\":500.18958983690607,\"timeTaken\":155355,\"streak\":0,\"countryCode\":null,\"exactCountryCode\":null,\"guessCount\":2,\"isStreamerResult\":false,\"guessedBefore\":false,\"gameId\":\"14nnQ0MRheHQOWG2\"},{\"displayName\":\"UnWing\",\"userName\":\"UnWing\",\"profilePicUrl\":\"https://lh3.googleusercontent.com/a-/ACNPEu_faWhhii8V4j6vai-N__NfPq7O26DTnXljhHh9CQ=s96-c\",\"playerFlagName\":\"\",\"playerFlag\":null,\"wasRandom\":false,\"score\":7962.5,\"distance\":17665.55951441501,\"timeTaken\":510247,\"streak\":0,\"countryCode\":null,\"exactCountryCode\":null,\"guessCount\":5,\"isStreamerResult\":false,\"guessedBefore\":false,\"gameId\":\"14nnQ0MRheHQOWG2\"},{\"displayName\":\"Taylor Wyatt\",\"userName\":\"Taylor Wyatt\",\"profilePicUrl\":\"https://lh3.googleusercontent.com/a-/ACNPEu_VN0U5QBHyEuz2pz2Qz788x7sr_JdRuJ4EyNBg=s96-c\",\"playerFlagName\":\"\",\"playerFlag\":null,\"wasRandom\":false,\"score\":7786.67,\"distance\":6463.256267585255,\"timeTaken\":185985,\"streak\":0,\"countryCode\":null,\"exactCountryCode\":null,\"guessCount\":4,\"isStreamerResult\":false,\"guessedBefore\":false,\"gameId\":\"14nnQ0MRheHQOWG2\"},{\"displayName\":\"xrmich\",\"userName\":\"xrmich\",\"profilePicUrl\":\"https://static-cdn.jtvnw.net/user-default-pictures-uv/ead5c8b2-a4c9-4724-b1dd-9f00b46cbd3d-profile_image-300x300.png\",\"playerFlagName\":\"Spain\",\"playerFlag\":\"es\",\"wasRandom\":false,\"score\":7514.17,\"distance\":19500.35294298448,\"timeTaken\":334283,\"streak\":0,\"countryCode\":null,\"exactCountryCode\":null,\"guessCount\":5,\"isStreamerResult\":false,\"guessedBefore\":false,\"gameId\":\"14nnQ0MRheHQOWG2\"},{\"displayName\":\"Mats Niska\",\"userName\":\"Mats Niska\",\"profilePicUrl\":\"https://lh3.googleusercontent.com/a-/ACNPEu-N8_4JAmafV6evAW7vC8j8vmv1Bajj9QjyuEh-sA=s96-c\",\"playerFlagName\":\"\",\"playerFlag\":null,\"wasRandom\":false,\"score\":7489.16,\"distance\":3813.2224849561185,\"timeTaken\":186411,\"streak\":0,\"countryCode\":null,\"exactCountryCode\":null,\"guessCount\":3,\"isStreamerResult\":false,\"guessedBefore\":false,\"gameId\":\"14nnQ0MRheHQOWG2\"},{\"displayName\":\"Guybruh\",\"userName\":\"guybruh\",\"profilePicUrl\":\"https://static-cdn.jtvnw.net/user-default-pictures-uv/ebb84563-db81-4b9c-8940-64ed33ccfc7b-profile_image-300x300.png\",\"playerFlagName\":\"Portugal\",\"playerFlag\":\"pt\",\"wasRandom\":false,\"score\":7468.5,\"distance\":4503.6367714093085,\"timeTaken\":224729,\"streak\":0,\"countryCode\":null,\"exactCountryCode\":null,\"guessCount\":3,\"isStreamerResult\":false,\"guessedBefore\":false,\"gameId\":\"14nnQ0MRheHQOWG2\"},{\"displayName\":\"samuraicapt\",\"userName\":\"samuraicapt\",\"profilePicUrl\":\"https://static-cdn.jtvnw.net/jtv_user_pictures/dc6f5504-96a6-4a2e-a9af-4287c1d93c44-profile_image-300x300.png\",\"playerFlagName\":\"\",\"playerFlag\":null,\"wasRandom\":false,\"score\":7444.16,\"distance\":12483.721258726571,\"timeTaken\":283679,\"streak\":0,\"countryCode\":null,\"exactCountryCode\":null,\"guessCount\":5,\"isStreamerResult\":false,\"guessedBefore\":false,\"gameId\":\"14nnQ0MRheHQOWG2\"},{\"displayName\":\"Gonzague Valli\u00E8re\",\"userName\":\"Gonzague Valli\u00E8re\",\"profilePicUrl\":\"https://lh3.googleusercontent.com/a/ALm5wu0adoiQJuTcXzJTjHK-6Bc9SSYvNAPVD-z40ucjYQ=s96-c\",\"playerFlagName\":\"\",\"playerFlag\":null,\"wasRandom\":false,\"score\":7417.49,\"distance\":3441.5777693389828,\"timeTaken\":210867,\"streak\":0,\"countryCode\":null,\"exactCountryCode\":null,\"guessCount\":3,\"isStreamerResult\":false,\"guessedBefore\":false,\"gameId\":\"14nnQ0MRheHQOWG2\"},{\"displayName\":\"Ugiv\",\"userName\":\"Ugiv\",\"profilePicUrl\":\"https://lh3.googleusercontent.com/a-/ACNPEu_9NRZMkWcLX-0hJYStI-I4Uui_ld0wiU-41gON=s96-c\",\"playerFlagName\":\"\",\"playerFlag\":null,\"wasRandom\":false,\"score\":7410,\"distance\":13764.01131166876,\"timeTaken\":397240,\"streak\":0,\"countryCode\":null,\"exactCountryCode\":null,\"guessCount\":5,\"isStreamerResult\":false,\"guessedBefore\":false,\"gameId\":\"14nnQ0MRheHQOWG2\"},{\"displayName\":\"Antique Insider\",\"userName\":\"Antique Insider\",\"profilePicUrl\":\"https://lh3.googleusercontent.com/a/ALm5wu14MrL6OJS3S6BngfSm4t6ajKh39pEL4698H_N0=s96-c\",\"playerFlagName\":\"\",\"playerFlag\":null,\"wasRandom\":false,\"score\":7322.83,\"distance\":19130.769420796794,\"timeTaken\":507460,\"streak\":0,\"countryCode\":null,\"exactCountryCode\":null,\"guessCount\":5,\"isStreamerResult\":false,\"guessedBefore\":false,\"gameId\":\"14nnQ0MRheHQOWG2\"},{\"displayName\":\"Bongooose\",\"userName\":\"Bongooose\",\"profilePicUrl\":\"https://lh3.googleusercontent.com/a/ALm5wu2zw-_XFx3DhDhXrAjFaKwij5A5PjWm4eSTuJ5g=s96-c\",\"playerFlagName\":\"\",\"playerFlag\":null,\"wasRandom\":false,\"score\":7308.34,\"distance\":13705.831925409795,\"timeTaken\":360741,\"streak\":0,\"countryCode\":null,\"exactCountryCode\":null,\"guessCount\":5,\"isStreamerResult\":false,\"guessedBefore\":false,\"gameId\":\"14nnQ0MRheHQOWG2\"},{\"displayName\":\"Trippel\",\"userName\":\"Trippel\",\"profilePicUrl\":\"https://lh3.googleusercontent.com/a-/ACNPEu_fZds3xx4eR3_9UW6wMnnFsWaax7gep8nXhZC9=s96-c\",\"playerFlagName\":\"\",\"playerFlag\":null,\"wasRandom\":false,\"score\":7282.51,\"distance\":3786.121557169742,\"timeTaken\":217397,\"streak\":0,\"countryCode\":null,\"exactCountryCode\":null,\"guessCount\":3,\"isStreamerResult\":false,\"guessedBefore\":false,\"gameId\":\"14nnQ0MRheHQOWG2\"},{\"displayName\":\"QuiteAButterfly\",\"userName\":\"quiteabutterfly\",\"profilePicUrl\":\"https://static-cdn.jtvnw.net/user-default-pictures-uv/998f01ae-def8-11e9-b95c-784f43822e80-profile_image-300x300.png\",\"playerFlagName\":\"\",\"playerFlag\":null,\"wasRandom\":false,\"score\":7040,\"distance\":16589.22958253067,\"timeTaken\":345576,\"streak\":1,\"countryCode\":null,\"exactCountryCode\":null,\"guessCount\":5,\"isStreamerResult\":false,\"guessedBefore\":false,\"gameId\":\"14nnQ0MRheHQOWG2\"},{\"displayName\":\"Jan Raczkowski\",\"userName\":\"Jan Raczkowski\",\"profilePicUrl\":\"https://lh3.googleusercontent.com/a/ALm5wu14BowlQVHrX439dnHwQdzC23VU6jRVXY-iYBky=s96-c\",\"playerFlagName\":\"\",\"playerFlag\":null,\"wasRandom\":false,\"score\":7016.67,\"distance\":21489.398656377096,\"timeTaken\":312226,\"streak\":0,\"countryCode\":null,\"exactCountryCode\":null,\"guessCount\":5,\"isStreamerResult\":false,\"guessedBefore\":false,\"gameId\":\"14nnQ0MRheHQOWG2\"},{\"displayName\":\"bk_123456\",\"userName\":\"bk_123456\",\"profilePicUrl\":\"https://static-cdn.jtvnw.net/user-default-pictures-uv/ebe4cd89-b4f4-4cd9-adac-2f30151b4209-profile_image-300x300.png\",\"playerFlagName\":\"Germany\",\"playerFlag\":\"de\",\"wasRandom\":false,\"score\":6918,\"distance\":11822.057201024223,\"timeTaken\":257337,\"streak\":0,\"countryCode\":null,\"exactCountryCode\":null,\"guessCount\":4,\"isStreamerResult\":false,\"guessedBefore\":false,\"gameId\":\"14nnQ0MRheHQOWG2\"},{\"displayName\":\"Carsyn E\",\"userName\":\"\",\"profilePicUrl\":\"https://lh3.googleusercontent.com/a-/ACNPEu82c_fQgJVcIkhlhUjV8WYCYO2JMVs2biXvdKnY=s96-c\",\"playerFlagName\":\"Croatia\",\"playerFlag\":\"hr\",\"wasRandom\":false,\"score\":6845.83,\"distance\":22174.630362340693,\"timeTaken\":626588,\"streak\":0,\"countryCode\":null,\"exactCountryCode\":null,\"guessCount\":5,\"isStreamerResult\":false,\"guessedBefore\":false,\"gameId\":\"14nnQ0MRheHQOWG2\"},{\"displayName\":\"Nika\",\"userName\":\"Nika\",\"profilePicUrl\":\"https://lh3.googleusercontent.com/a/ALm5wu2VRQwYdDNKi41EfzYQltA-F4cJbEAUTq5NdBV2fg=s96-c\",\"playerFlagName\":\"\",\"playerFlag\":null,\"wasRandom\":false,\"score\":6740.5,\"distance\":4639.730880057806,\"timeTaken\":139281,\"streak\":1,\"countryCode\":null,\"exactCountryCode\":null,\"guessCount\":3,\"isStreamerResult\":false,\"guessedBefore\":false,\"gameId\":\"14nnQ0MRheHQOWG2\"},{\"displayName\":\"martin_terziev\",\"userName\":\"martin_terziev\",\"profilePicUrl\":\"https://static-cdn.jtvnw.net/jtv_user_pictures/55ef2f42-feda-4796-a489-5aef662e1ff1-profile_image-300x300.png\",\"playerFlagName\":\"\",\"playerFlag\":null,\"wasRandom\":false,\"score\":6629.67,\"distance\":1499.4189411398038,\"timeTaken\":135826,\"streak\":1,\"countryCode\":null,\"exactCountryCode\":null,\"guessCount\":2,\"isStreamerResult\":false,\"guessedBefore\":false,\"gameId\":\"14nnQ0MRheHQOWG2\"},{\"displayName\":\"Hoper Time\",\"userName\":\"Hoper Time\",\"profilePicUrl\":\"https://lh3.googleusercontent.com/a-/ACNPEu_JHeounTE5ihgcbl0mqGcEIZ52SYIKT1wHDcd9nw=s96-c\",\"playerFlagName\":\"\",\"playerFlag\":null,\"wasRandom\":false,\"score\":6517.5,\"distance\":15282.566238333957,\"timeTaken\":181053,\"streak\":0,\"countryCode\":null,\"exactCountryCode\":null,\"guessCount\":3,\"isStreamerResult\":false,\"guessedBefore\":false,\"gameId\":\"14nnQ0MRheHQOWG2\"},{\"displayName\":\"Dutch Countryball\",\"userName\":\"Dutch Countryball\",\"profilePicUrl\":\"https://lh3.googleusercontent.com/a/ALm5wu0QB6AJkk9Zi-ViPNx6t5nm-944hArhy907RoBB=s96-c\",\"playerFlagName\":\"\",\"playerFlag\":null,\"wasRandom\":false,\"score\":6338.5,\"distance\":14365.558394826025,\"timeTaken\":141076,\"streak\":0,\"countryCode\":null,\"exactCountryCode\":null,\"guessCount\":3,\"isStreamerResult\":false,\"guessedBefore\":false,\"gameId\":\"14nnQ0MRheHQOWG2\"},{\"displayName\":\"Vishal Patel\",\"userName\":\"Vishal Patel\",\"profilePicUrl\":\"https://lh3.googleusercontent.com/a-/ACNPEu89ySAQqZw8-pcXIaz-Tfxf9fiqjjvLq69k-JYLgg=s96-c\",\"playerFlagName\":\"\",\"playerFlag\":null,\"wasRandom\":false,\"score\":6263.5,\"distance\":7282.747754208571,\"timeTaken\":361262,\"streak\":0,\"countryCode\":null,\"exactCountryCode\":null,\"guessCount\":3,\"isStreamerResult\":false,\"guessedBefore\":false,\"gameId\":\"14nnQ0MRheHQOWG2\"},{\"displayName\":\"yoshiyamamoto7\",\"userName\":\"yoshiyamamoto7\",\"profilePicUrl\":\"https://static-cdn.jtvnw.net/user-default-pictures-uv/41780b5a-def8-11e9-94d9-784f43822e80-profile_image-300x300.png\",\"playerFlagName\":\"Yukon\",\"playerFlag\":\"ca-yukon\",\"wasRandom\":false,\"score\":6233.67,\"distance\":12216.052918726806,\"timeTaken\":383484,\"streak\":1,\"countryCode\":null,\"exactCountryCode\":null,\"guessCount\":4,\"isStreamerResult\":false,\"guessedBefore\":false,\"gameId\":\"14nnQ0MRheHQOWG2\"},{\"displayName\":\"DAFFY XIII\",\"userName\":\"DAFFY XIII\",\"profilePicUrl\":\"https://lh3.googleusercontent.com/a-/ACNPEu-3Tj2ke9Jaox9NCD4R-3R7ADdpZApkuUdjueQ6IQ=s96-c\",\"playerFlagName\":\"\",\"playerFlag\":null,\"wasRandom\":false,\"score\":6209.33,\"distance\":1945.8607694699394,\"timeTaken\":83691,\"streak\":1,\"countryCode\":null,\"exactCountryCode\":null,\"guessCount\":2,\"isStreamerResult\":false,\"guessedBefore\":false,\"gameId\":\"14nnQ0MRheHQOWG2\"},{\"displayName\":\"PeterPkp123\",\"userName\":\"peterpkp123\",\"profilePicUrl\":\"https://static-cdn.jtvnw.net/jtv_user_pictures/05aca998-e31e-44ee-95f2-36826aa71776-profile_image-300x300.png\",\"playerFlagName\":\"\",\"playerFlag\":null,\"wasRandom\":false,\"score\":6185.83,\"distance\":1247.3156260923672,\"timeTaken\":67382,\"streak\":0,\"countryCode\":null,\"exactCountryCode\":null,\"guessCount\":2,\"isStreamerResult\":false,\"guessedBefore\":false,\"gameId\":\"14nnQ0MRheHQOWG2\"},{\"displayName\":\"James \u201CJames C\u201D C\",\"userName\":\"James \u201CJames C\u201D C\",\"profilePicUrl\":\"https://lh3.googleusercontent.com/a/ALm5wu1wMCw4g_3ZictOTXN7XNoMmbgb-UlquydgHpXyWQ=s96-c\",\"playerFlagName\":\"Yorkshire\",\"playerFlag\":\"gb-yorkshire\",\"wasRandom\":false,\"score\":6090.83,\"distance\":14765.942886643179,\"timeTaken\":340371,\"streak\":0,\"countryCode\":null,\"exactCountryCode\":null,\"guessCount\":5,\"isStreamerResult\":false,\"guessedBefore\":false,\"gameId\":\"14nnQ0MRheHQOWG2\"},{\"displayName\":\"ryclemo\",\"userName\":\"ryclemo\",\"profilePicUrl\":\"https://static-cdn.jtvnw.net/jtv_user_pictures/2f3d1e99-f704-405b-b181-b75ee8f95527-profile_image-300x300.png\",\"playerFlagName\":\"\",\"playerFlag\":null,\"wasRandom\":false,\"score\":5939.16,\"distance\":1461.7686349084972,\"timeTaken\":208937,\"streak\":0,\"countryCode\":null,\"exactCountryCode\":null,\"guessCount\":2,\"isStreamerResult\":false,\"guessedBefore\":false,\"gameId\":\"14nnQ0MRheHQOWG2\"},{\"displayName\":\"Ashish Asthana\",\"userName\":\"Ashish Asthana\",\"profilePicUrl\":\"https://lh3.googleusercontent.com/a/ALm5wu1glLkNHpFWTMqZmpmDHHXhmwG-Ceku_v58S4_q=s96-c\",\"playerFlagName\":\"\",\"playerFlag\":null,\"wasRandom\":false,\"score\":5844.17,\"distance\":13795.785902630243,\"timeTaken\":483133,\"streak\":0,\"countryCode\":null,\"exactCountryCode\":null,\"guessCount\":5,\"isStreamerResult\":false,\"guessedBefore\":false,\"gameId\":\"14nnQ0MRheHQOWG2\"},{\"displayName\":\"Diah Rizqi\",\"userName\":\"Diah Rizqi\",\"profilePicUrl\":\"https://lh3.googleusercontent.com/a-/ACNPEu87H5xS9Qcxeq05msfnXPEwRTPwJVSjqvx1qv91ag=s96-c\",\"playerFlagName\":\"Indonesia\",\"playerFlag\":\"id\",\"wasRandom\":false,\"score\":5777.51,\"distance\":20750.478580335348,\"timeTaken\":338913,\"streak\":0,\"countryCode\":null,\"exactCountryCode\":null,\"guessCount\":5,\"isStreamerResult\":false,\"guessedBefore\":false,\"gameId\":\"14nnQ0MRheHQOWG2\"},{\"displayName\":\"bestformspielt\",\"userName\":\"bestformspielt\",\"profilePicUrl\":\"https://lh3.googleusercontent.com/a-/ACNPEu-INqsQdOb1yAmxX3qnNqyZ6AX13NjlvsgXxySc=s96-c\",\"playerFlagName\":\"\",\"playerFlag\":null,\"wasRandom\":false,\"score\":5769.17,\"distance\":5249.7218717487485,\"timeTaken\":192708,\"streak\":0,\"countryCode\":null,\"exactCountryCode\":null,\"guessCount\":3,\"isStreamerResult\":false,\"guessedBefore\":false,\"gameId\":\"14nnQ0MRheHQOWG2\"},{\"displayName\":\"Tobik\",\"userName\":\"Tobik\",\"profilePicUrl\":\"https://lh3.googleusercontent.com/a-/ACNPEu8zd3wR2uzuABhX54Yh4dBPcxq-UpK04aeviCk9Gw=s96-c\",\"playerFlagName\":\"\",\"playerFlag\":null,\"wasRandom\":false,\"score\":5638.33,\"distance\":13654.906850838659,\"timeTaken\":196314,\"streak\":0,\"countryCode\":null,\"exactCountryCode\":null,\"guessCount\":3,\"isStreamerResult\":false,\"guessedBefore\":false,\"gameId\":\"14nnQ0MRheHQOWG2\"},{\"displayName\":\"LY Ching\",\"userName\":\"LY Ching\",\"profilePicUrl\":\"https://lh3.googleusercontent.com/a-/ACNPEu9oO4ZUZtd4aNxhziIWAx1KvrSbopMNmKESCNaHBw=s96-c\",\"playerFlagName\":\"\",\"playerFlag\":null,\"wasRandom\":false,\"score\":5627,\"distance\":2919.7421463951473,\"timeTaken\":243314,\"streak\":0,\"countryCode\":null,\"exactCountryCode\":null,\"guessCount\":2,\"isStreamerResult\":false,\"guessedBefore\":false,\"gameId\":\"14nnQ0MRheHQOWG2\"},{\"displayName\":\"hahamuffingobrr\",\"userName\":\"hahamuffingobrr\",\"profilePicUrl\":\"https://static-cdn.jtvnw.net/jtv_user_pictures/27b9195e-fa14-4a8b-b32e-724e6b891285-profile_image-300x300.png\",\"playerFlagName\":\"Denmark\",\"playerFlag\":\"dk\",\"wasRandom\":false,\"score\":5540,\"distance\":20209.643507971312,\"timeTaken\":166578,\"streak\":0,\"countryCode\":null,\"exactCountryCode\":null,\"guessCount\":3,\"isStreamerResult\":false,\"guessedBefore\":false,\"gameId\":\"14nnQ0MRheHQOWG2\"},{\"displayName\":\"Mikko Vitug\",\"userName\":\"Mikko Vitug\",\"profilePicUrl\":\"https://lh3.googleusercontent.com/a/ALm5wu0b7P18OVrK4G6cT4YWkFP8ohkbW22pt8QsE9wk=s96-c\",\"playerFlagName\":\"\",\"playerFlag\":null,\"wasRandom\":false,\"score\":5270.83,\"distance\":1705.1732889903033,\"timeTaken\":132615,\"streak\":0,\"countryCode\":null,\"exactCountryCode\":null,\"guessCount\":2,\"isStreamerResult\":false,\"guessedBefore\":false,\"gameId\":\"14nnQ0MRheHQOWG2\"},{\"displayName\":\"Toast is me\",\"userName\":\"Toast is me\",\"profilePicUrl\":\"https://lh3.googleusercontent.com/a/ALm5wu3buhhgUKDq_2w7SwfxxOcMIJ1LI-ZYsGwcN_XR=s96-c\",\"playerFlagName\":\"\",\"playerFlag\":null,\"wasRandom\":false,\"score\":5204.17,\"distance\":4441.280269236381,\"timeTaken\":186481,\"streak\":1,\"countryCode\":null,\"exactCountryCode\":null,\"guessCount\":2,\"isStreamerResult\":false,\"guessedBefore\":false,\"gameId\":\"14nnQ0MRheHQOWG2\"},{\"displayName\":\"Ted last\",\"userName\":\"Ted last\",\"profilePicUrl\":\"https://lh3.googleusercontent.com/a/ALm5wu2XQicLgWh9wMOizL-mhJMNCpMnXp2yi4Z3CRo_=s96-c\",\"playerFlagName\":\"\",\"playerFlag\":null,\"wasRandom\":false,\"score\":5088.33,\"distance\":14668.429443680474,\"timeTaken\":421671,\"streak\":0,\"countryCode\":null,\"exactCountryCode\":null,\"guessCount\":4,\"isStreamerResult\":false,\"guessedBefore\":false,\"gameId\":\"14nnQ0MRheHQOWG2\"},{\"displayName\":\"DTAS T.\",\"userName\":\"DTAS T.\",\"profilePicUrl\":\"https://lh3.googleusercontent.com/a/ALm5wu2-xbgKPpBo7qZQKcWmnAH55TyAjgz02d6MCdb3=s96-c\",\"playerFlagName\":\"\",\"playerFlag\":null,\"wasRandom\":false,\"score\":5045,\"distance\":2094.1055105759588,\"timeTaken\":131522,\"streak\":0,\"countryCode\":null,\"exactCountryCode\":null,\"guessCount\":2,\"isStreamerResult\":false,\"guessedBefore\":false,\"gameId\":\"14nnQ0MRheHQOWG2\"},{\"displayName\":\"cukraus_tetukas\",\"userName\":\"cukraus_tetukas\",\"profilePicUrl\":\"https://static-cdn.jtvnw.net/jtv_user_pictures/8d024eba-1db8-401f-9e89-983508218228-profile_image-300x300.png\",\"playerFlagName\":\"Lithuania\",\"playerFlag\":\"lt\",\"wasRandom\":false,\"score\":4867.5,\"distance\":37558.68811874192,\"timeTaken\":327427,\"streak\":0,\"countryCode\":null,\"exactCountryCode\":null,\"guessCount\":5,\"isStreamerResult\":false,\"guessedBefore\":false,\"gameId\":\"14nnQ0MRheHQOWG2\"},{\"displayName\":\"Lord Lifre\",\"userName\":\"Lord Lifre\",\"profilePicUrl\":\"https://lh3.googleusercontent.com/a-/ACNPEu_6YNnlNy8V7oX3oPnlczQt0UE4YP0V5X0ZIsSL8A=s96-c\",\"playerFlagName\":\"\",\"playerFlag\":null,\"wasRandom\":false,\"score\":4773.34,\"distance\":2307.4651833293483,\"timeTaken\":142407,\"streak\":0,\"countryCode\":null,\"exactCountryCode\":null,\"guessCount\":2,\"isStreamerResult\":false,\"guessedBefore\":false,\"gameId\":\"14nnQ0MRheHQOWG2\"},{\"displayName\":\"MZV\",\"userName\":\"MZV\",\"profilePicUrl\":\"https://lh3.googleusercontent.com/a-/ACNPEu9qi9zOM-jX7BkjfonZVFzesrIBNKvkj6aEl3bnSw=s96-c\",\"playerFlagName\":\"Andorra\",\"playerFlag\":\"ad\",\"wasRandom\":false,\"score\":4305,\"distance\":5951.126362877071,\"timeTaken\":225267,\"streak\":0,\"countryCode\":null,\"exactCountryCode\":null,\"guessCount\":3,\"isStreamerResult\":false,\"guessedBefore\":false,\"gameId\":\"14nnQ0MRheHQOWG2\"},{\"displayName\":\"Magdalena Szepietowska\",\"userName\":\"Magdalena Szepietowska\",\"profilePicUrl\":\"https://lh3.googleusercontent.com/a/ALm5wu0-8oVx9ac_mS_y7TnqWj2QW-gvJQqyeNpFZcOT=s96-c\",\"playerFlagName\":\"\",\"playerFlag\":null,\"wasRandom\":false,\"score\":4265.84,\"distance\":2976.020731547742,\"timeTaken\":180697,\"streak\":0,\"countryCode\":null,\"exactCountryCode\":null,\"guessCount\":2,\"isStreamerResult\":false,\"guessedBefore\":false,\"gameId\":\"14nnQ0MRheHQOWG2\"},{\"displayName\":\"Ollie Smith\",\"userName\":\"Ollie Smith\",\"profilePicUrl\":\"https://lh3.googleusercontent.com/a/ALm5wu0CfM9-ZGXUK3Vi7czkLJOc6vJNzX_GPdEONt55=s96-c\",\"playerFlagName\":\"United Kingdom\",\"playerFlag\":\"gb\",\"wasRandom\":false,\"score\":4116.67,\"distance\":29186.67112172785,\"timeTaken\":355297,\"streak\":0,\"countryCode\":null,\"exactCountryCode\":null,\"guessCount\":4,\"isStreamerResult\":false,\"guessedBefore\":false,\"gameId\":\"14nnQ0MRheHQOWG2\"},{\"displayName\":\"piccabo21\",\"userName\":\"piccabo21\",\"profilePicUrl\":\"https://static-cdn.jtvnw.net/jtv_user_pictures/f4a18121-c39b-4368-ace1-944c228cdff7-profile_image-300x300.png\",\"playerFlagName\":\"Faroe Islands\",\"playerFlag\":\"fo\",\"wasRandom\":false,\"score\":3936.67,\"distance\":105.40229404837356,\"timeTaken\":36206,\"streak\":0,\"countryCode\":null,\"exactCountryCode\":null,\"guessCount\":1,\"isStreamerResult\":false,\"guessedBefore\":false,\"gameId\":\"14nnQ0MRheHQOWG2\"},{\"displayName\":\"Retisska\",\"userName\":\"retisska\",\"profilePicUrl\":\"https://static-cdn.jtvnw.net/jtv_user_pictures/08259190-b3f8-4a86-adfb-06851dbcead2-profile_image-300x300.png\",\"playerFlagName\":\"Denmark\",\"playerFlag\":\"dk\",\"wasRandom\":false,\"score\":3933.33,\"distance\":106.81826264747811,\"timeTaken\":66083,\"streak\":0,\"countryCode\":null,\"exactCountryCode\":null,\"guessCount\":1,\"isStreamerResult\":false,\"guessedBefore\":false,\"gameId\":\"14nnQ0MRheHQOWG2\"},{\"displayName\":\"SoulSeeke\",\"userName\":\"SoulSeeke\",\"profilePicUrl\":\"https://lh3.googleusercontent.com/a-/ACNPEu_VNHzmz2zDlUIHtEuJGCux1dKHTcrbHpVMrQE6=s96-c\",\"playerFlagName\":\"\",\"playerFlag\":null,\"wasRandom\":false,\"score\":3920,\"distance\":2983.8433362452956,\"timeTaken\":121710,\"streak\":0,\"countryCode\":null,\"exactCountryCode\":null,\"guessCount\":2,\"isStreamerResult\":false,\"guessedBefore\":false,\"gameId\":\"14nnQ0MRheHQOWG2\"},{\"displayName\":\"Torvald Ripel\",\"userName\":\"Torvald Ripel\",\"profilePicUrl\":\"https://lh3.googleusercontent.com/a/ALm5wu1c9CEpplUmPtJqHhxW1byuvTW6bfS4d3jqn_HT=s96-c\",\"playerFlagName\":\"\",\"playerFlag\":null,\"wasRandom\":false,\"score\":3761.67,\"distance\":2951.493594713862,\"timeTaken\":86049,\"streak\":0,\"countryCode\":null,\"exactCountryCode\":null,\"guessCount\":2,\"isStreamerResult\":false,\"guessedBefore\":false,\"gameId\":\"14nnQ0MRheHQOWG2\"},{\"displayName\":\"Maurits Ampe\",\"userName\":\"Maurits Ampe\",\"profilePicUrl\":\"https://lh3.googleusercontent.com/a-/ACNPEu9wKc3g9KYkToHY8CYL0-s78yCI-zQnMq-gObNY=s96-c\",\"playerFlagName\":\"\",\"playerFlag\":null,\"wasRandom\":false,\"score\":3603.34,\"distance\":3555.9498401726732,\"timeTaken\":99147,\"streak\":0,\"countryCode\":null,\"exactCountryCode\":null,\"guessCount\":2,\"isStreamerResult\":false,\"guessedBefore\":false,\"gameId\":\"14nnQ0MRheHQOWG2\"},{\"displayName\":\"Nikola Arsi\u0107\",\"userName\":\"Nikola Arsi\u0107\",\"profilePicUrl\":\"https://lh3.googleusercontent.com/a/ALm5wu04bZdCEL4AVeWl-indOaoVFvUUHrtuFJ_TSeN2=s96-c\",\"playerFlagName\":\"\",\"playerFlag\":null,\"wasRandom\":false,\"score\":3530,\"distance\":3848.524546892476,\"timeTaken\":154543,\"streak\":0,\"countryCode\":null,\"exactCountryCode\":null,\"guessCount\":2,\"isStreamerResult\":false,\"guessedBefore\":false,\"gameId\":\"14nnQ0MRheHQOWG2\"},{\"displayName\":\"quadrumane\",\"userName\":\"quadrumane\",\"profilePicUrl\":\"https://lh3.googleusercontent.com/a/ALm5wu12EpdmbyEAJ7VdXlqBpyX_YCsDqd1_bSm_ONAE=s96-c\",\"playerFlagName\":\"\",\"playerFlag\":null,\"wasRandom\":false,\"score\":3213.33,\"distance\":481.38543934897774,\"timeTaken\":100376,\"streak\":0,\"countryCode\":null,\"exactCountryCode\":null,\"guessCount\":1,\"isStreamerResult\":false,\"guessedBefore\":false,\"gameId\":\"14nnQ0MRheHQOWG2\"},{\"displayName\":\"John Yancey\",\"userName\":\"John Yancey\",\"profilePicUrl\":\"https://lh3.googleusercontent.com/a-/ACNPEu8mvOkihlHhRXrQ0Py3VlXcqeBeSxOlc4tbsb8tLQ=s96-c\",\"playerFlagName\":\"\",\"playerFlag\":null,\"wasRandom\":false,\"score\":3195.83,\"distance\":8364.597261944335,\"timeTaken\":164953,\"streak\":0,\"countryCode\":null,\"exactCountryCode\":null,\"guessCount\":3,\"isStreamerResult\":false,\"guessedBefore\":false,\"gameId\":\"14nnQ0MRheHQOWG2\"},{\"displayName\":\"frkjdhauzdnadpoi\",\"userName\":\"frkjdhauzdnadpoi\",\"profilePicUrl\":\"https://static-cdn.jtvnw.net/jtv_user_pictures/c6f62383-0d3f-4149-b31b-16cb98205626-profile_image-300x300.png\",\"playerFlagName\":\"Nepal\",\"playerFlag\":\"np\",\"wasRandom\":false,\"score\":3119.17,\"distance\":23194.842490222807,\"timeTaken\":299918,\"streak\":0,\"countryCode\":null,\"exactCountryCode\":null,\"guessCount\":5,\"isStreamerResult\":false,\"guessedBefore\":false,\"gameId\":\"14nnQ0MRheHQOWG2\"},{\"displayName\":\"Rodya\",\"userName\":\"Rodya\",\"profilePicUrl\":\"https://lh3.googleusercontent.com/a-/ACNPEu-Ep-mIGtw1PbLPI8aM6WsTf5jk_ZuxT4uDQ0Lp=s96-c\",\"playerFlagName\":\"\",\"playerFlag\":null,\"wasRandom\":false,\"score\":2807.5,\"distance\":9139.920629714406,\"timeTaken\":177629,\"streak\":0,\"countryCode\":null,\"exactCountryCode\":null,\"guessCount\":3,\"isStreamerResult\":false,\"guessedBefore\":false,\"gameId\":\"14nnQ0MRheHQOWG2\"},{\"displayName\":\"ADHITHYAN VP\",\"userName\":\"ADHITHYAN VP\",\"profilePicUrl\":\"https://lh3.googleusercontent.com/a-/ACNPEu9ZrdHiFKjYh52OpGUko_E9rH8Bmj42vaR_9HXd_Q=s96-c\",\"playerFlagName\":\"\",\"playerFlag\":null,\"wasRandom\":false,\"score\":2759.17,\"distance\":13485.485416270129,\"timeTaken\":261029,\"streak\":0,\"countryCode\":null,\"exactCountryCode\":null,\"guessCount\":3,\"isStreamerResult\":false,\"guessedBefore\":false,\"gameId\":\"14nnQ0MRheHQOWG2\"},{\"displayName\":\"NoTrespassingCRO\",\"userName\":\"NoTrespassingCRO\",\"profilePicUrl\":\"https://lh3.googleusercontent.com/a/ALm5wu0wmq6WKiBFQGrPXQxYJuxj9I6eYa_PGPTLIfI1=s96-c\",\"playerFlagName\":\"\",\"playerFlag\":null,\"wasRandom\":false,\"score\":2587.5,\"distance\":883.2071920356714,\"timeTaken\":60910,\"streak\":0,\"countryCode\":null,\"exactCountryCode\":null,\"guessCount\":1,\"isStreamerResult\":false,\"guessedBefore\":false,\"gameId\":\"14nnQ0MRheHQOWG2\"},{\"displayName\":\"Luke Houghton\",\"userName\":\"Luke Houghton\",\"profilePicUrl\":\"https://lh3.googleusercontent.com/a/ALm5wu2GuCs30SArB6f-b4-1RKw9C714gT9DxtBot7mQ=s96-c\",\"playerFlagName\":\"\",\"playerFlag\":null,\"wasRandom\":false,\"score\":2585.83,\"distance\":884.0522019140814,\"timeTaken\":72431,\"streak\":0,\"countryCode\":null,\"exactCountryCode\":null,\"guessCount\":1,\"isStreamerResult\":false,\"guessedBefore\":false,\"gameId\":\"14nnQ0MRheHQOWG2\"},{\"displayName\":\"undergroundbig\",\"userName\":\"undergroundbig\",\"profilePicUrl\":\"https://static-cdn.jtvnw.net/jtv_user_pictures/8892cc51-d547-4305-9cd0-ff5b22623d77-profile_image-300x300.png\",\"playerFlagName\":\"\",\"playerFlag\":null,\"wasRandom\":false,\"score\":2288.33,\"distance\":1110.7994897143508,\"timeTaken\":99531,\"streak\":0,\"countryCode\":null,\"exactCountryCode\":null,\"guessCount\":1,\"isStreamerResult\":false,\"guessedBefore\":false,\"gameId\":\"14nnQ0MRheHQOWG2\"},{\"displayName\":\"Joseph Evanson\",\"userName\":\"Joseph Evanson\",\"profilePicUrl\":\"https://lh3.googleusercontent.com/a-/ACNPEu9A2Nl6iE9tkD0Pr-y4vQYzfpCqLrL5e6EHHwCfpg=s96-c\",\"playerFlagName\":\"\",\"playerFlag\":null,\"wasRandom\":false,\"score\":2050.83,\"distance\":1313.8790415919495,\"timeTaken\":41585,\"streak\":0,\"countryCode\":null,\"exactCountryCode\":null,\"guessCount\":1,\"isStreamerResult\":false,\"guessedBefore\":false,\"gameId\":\"14nnQ0MRheHQOWG2\"},{\"displayName\":\"CocoaBlueTie2\",\"userName\":\"CocoaBlueTie2\",\"profilePicUrl\":\"https://lh3.googleusercontent.com/a-/ACNPEu9B6QQ-0Umz4XWBNPKlV-d0BKMosYTKSwJ__risXg=s96-c\",\"playerFlagName\":\"\",\"playerFlag\":null,\"wasRandom\":false,\"score\":1906.67,\"distance\":1448.7307588877036,\"timeTaken\":29387,\"streak\":0,\"countryCode\":null,\"exactCountryCode\":null,\"guessCount\":1,\"isStreamerResult\":false,\"guessedBefore\":false,\"gameId\":\"14nnQ0MRheHQOWG2\"},{\"displayName\":\"tns22\",\"userName\":\"tns22\",\"profilePicUrl\":\"https://lh3.googleusercontent.com/a/ALm5wu0hhPqdJbEzTPjCEsMv3kMPOyGYOpPg5-W2O_Js=s96-c\",\"playerFlagName\":\"Arizona\",\"playerFlag\":\"usaz\",\"wasRandom\":false,\"score\":1873.3400000000001,\"distance\":6075.979868579652,\"timeTaken\":121536,\"streak\":0,\"countryCode\":null,\"exactCountryCode\":null,\"guessCount\":2,\"isStreamerResult\":false,\"guessedBefore\":false,\"gameId\":\"14nnQ0MRheHQOWG2\"},{\"displayName\":\"Lucas \u00D6stman\",\"userName\":\"Lucas \u00D6stman\",\"profilePicUrl\":\"https://lh3.googleusercontent.com/a-/ACNPEu9qln8IHNLICelc0nPST3YJ7rmMQXnCFc6vt7Vo=s96-c\",\"playerFlagName\":\"Finland\",\"playerFlag\":\"fi\",\"wasRandom\":false,\"score\":1845.83,\"distance\":8843.675616516124,\"timeTaken\":101011,\"streak\":0,\"countryCode\":null,\"exactCountryCode\":null,\"guessCount\":2,\"isStreamerResult\":false,\"guessedBefore\":false,\"gameId\":\"14nnQ0MRheHQOWG2\"},{\"displayName\":\"XDgallahan YT\",\"userName\":\"XDgallahan YT\",\"profilePicUrl\":\"https://lh3.googleusercontent.com/a-/ACNPEu9lD5t9yC0XjsLqPnsLJHyGpgorfkDu50FhY3516w=s96-c\",\"playerFlagName\":\"\",\"playerFlag\":null,\"wasRandom\":false,\"score\":1835,\"distance\":1519.9045823861645,\"timeTaken\":34186,\"streak\":0,\"countryCode\":null,\"exactCountryCode\":null,\"guessCount\":1,\"isStreamerResult\":false,\"guessedBefore\":false,\"gameId\":\"14nnQ0MRheHQOWG2\"},{\"displayName\":\"S\u00F6ren Michaels\",\"userName\":\"S\u00F6ren Michaels\",\"profilePicUrl\":\"https://lh3.googleusercontent.com/a/ALm5wu26KIATlQ6F1FTtp26F-P1akvVvzVJJpm4oHYYroA=s96-c\",\"playerFlagName\":\"\",\"playerFlag\":null,\"wasRandom\":false,\"score\":1827.5,\"distance\":1528.0473578699498,\"timeTaken\":80515,\"streak\":0,\"countryCode\":null,\"exactCountryCode\":null,\"guessCount\":1,\"isStreamerResult\":false,\"guessedBefore\":false,\"gameId\":\"14nnQ0MRheHQOWG2\"},{\"displayName\":\"willewilliam123\",\"userName\":\"willewilliam123\",\"profilePicUrl\":\"https://static-cdn.jtvnw.net/jtv_user_pictures/350fef7d-f4fc-4587-a78b-09984ad00fe5-profile_image-300x300.png\",\"playerFlagName\":\"\",\"playerFlag\":null,\"wasRandom\":false,\"score\":1778.33,\"distance\":1578.4110942117284,\"timeTaken\":62992,\"streak\":0,\"countryCode\":null,\"exactCountryCode\":null,\"guessCount\":1,\"isStreamerResult\":false,\"guessedBefore\":false,\"gameId\":\"14nnQ0MRheHQOWG2\"},{\"displayName\":\"andy_dreax\",\"userName\":\"andy_dreax\",\"profilePicUrl\":\"https://static-cdn.jtvnw.net/jtv_user_pictures/6c233b44-5fff-48ff-a319-153c77b60111-profile_image-300x300.png\",\"playerFlagName\":\"Philippines\",\"playerFlag\":\"ph\",\"wasRandom\":false,\"score\":1698.33,\"distance\":1663.336111117588,\"timeTaken\":83359,\"streak\":0,\"countryCode\":null,\"exactCountryCode\":null,\"guessCount\":1,\"isStreamerResult\":false,\"guessedBefore\":false,\"gameId\":\"14nnQ0MRheHQOWG2\"},{\"displayName\":\"Mihika Peshwa\",\"userName\":\"Mihika Peshwa\",\"profilePicUrl\":\"https://lh3.googleusercontent.com/a/ALm5wu2DvIM0LDziAxEJwjDkVxr_qaNOn-lNHFQ8xAJnFA=s96-c\",\"playerFlagName\":\"\",\"playerFlag\":null,\"wasRandom\":false,\"score\":1247.5,\"distance\":2234.879819236272,\"timeTaken\":102852,\"streak\":0,\"countryCode\":null,\"exactCountryCode\":null,\"guessCount\":1,\"isStreamerResult\":false,\"guessedBefore\":false,\"gameId\":\"14nnQ0MRheHQOWG2\"},{\"displayName\":\"Fireninjata bg\",\"userName\":\"Fireninjata bg\",\"profilePicUrl\":\"https://lh3.googleusercontent.com/a-/ACNPEu_M5w0lDd5KRr5Gu-bAUKpkhrXebpu79SS4FB2S=s96-c\",\"playerFlagName\":\"\",\"playerFlag\":null,\"wasRandom\":false,\"score\":929.17,\"distance\":2782.073621762188,\"timeTaken\":33501,\"streak\":0,\"countryCode\":null,\"exactCountryCode\":null,\"guessCount\":1,\"isStreamerResult\":false,\"guessedBefore\":false,\"gameId\":\"14nnQ0MRheHQOWG2\"},{\"displayName\":\"Dan 14\",\"userName\":\"Dan 14\",\"profilePicUrl\":\"https://lh3.googleusercontent.com/a-/ACNPEu90S5qpYII0pwH3QROa4zqp6t1M1EBEdhj4Lx9u=s96-c\",\"playerFlagName\":\"\",\"playerFlag\":null,\"wasRandom\":false,\"score\":829.17,\"distance\":2992.8094227508504,\"timeTaken\":97324,\"streak\":0,\"countryCode\":null,\"exactCountryCode\":null,\"guessCount\":1,\"isStreamerResult\":false,\"guessedBefore\":false,\"gameId\":\"14nnQ0MRheHQOWG2\"},{\"displayName\":\"OneClickStream\",\"userName\":\"oneclickstream\",\"profilePicUrl\":\"https://static-cdn.jtvnw.net/user-default-pictures-uv/13e5fa74-defa-11e9-809c-784f43822e80-profile_image-300x300.png\",\"playerFlagName\":\"\",\"playerFlag\":null,\"wasRandom\":false,\"score\":795,\"distance\":14766.939681597829,\"timeTaken\":130367,\"streak\":0,\"countryCode\":null,\"exactCountryCode\":null,\"guessCount\":2,\"isStreamerResult\":false,\"guessedBefore\":false,\"gameId\":\"14nnQ0MRheHQOWG2\"},{\"displayName\":\"Oscar Conklin\",\"userName\":\"Oscar Conklin\",\"profilePicUrl\":\"https://lh3.googleusercontent.com/a-/ACNPEu_dIuBQQqSvsPOKSwxGZio3NPiY5nnRXEPFbtCp=s96-c\",\"playerFlagName\":\"\",\"playerFlag\":null,\"wasRandom\":false,\"score\":746.67,\"distance\":3185.984317603961,\"timeTaken\":53110,\"streak\":0,\"countryCode\":null,\"exactCountryCode\":null,\"guessCount\":1,\"isStreamerResult\":false,\"guessedBefore\":false,\"gameId\":\"14nnQ0MRheHQOWG2\"},{\"displayName\":\"VektorDS\",\"userName\":\"vektords\",\"profilePicUrl\":\"https://static-cdn.jtvnw.net/jtv_user_pictures/vektords-profile_image-2503ce96762cf366-300x300.jpeg\",\"playerFlagName\":\"\",\"playerFlag\":null,\"wasRandom\":false,\"score\":572.5,\"distance\":12096.546286587101,\"timeTaken\":103819,\"streak\":0,\"countryCode\":null,\"exactCountryCode\":null,\"guessCount\":2,\"isStreamerResult\":false,\"guessedBefore\":false,\"gameId\":\"14nnQ0MRheHQOWG2\"},{\"displayName\":\"alexhavefluffycats\",\"userName\":\"alexhavefluffycats\",\"profilePicUrl\":\"https://static-cdn.jtvnw.net/user-default-pictures-uv/13e5fa74-defa-11e9-809c-784f43822e80-profile_image-300x300.png\",\"playerFlagName\":\"Japan\",\"playerFlag\":\"jp\",\"wasRandom\":false,\"score\":444.15999999999997,\"distance\":20804.01211387591,\"timeTaken\":156933,\"streak\":0,\"countryCode\":null,\"exactCountryCode\":null,\"guessCount\":2,\"isStreamerResult\":false,\"guessedBefore\":false,\"gameId\":\"14nnQ0MRheHQOWG2\"},{\"displayName\":\"Tropic327\",\"userName\":\"tropic327\",\"profilePicUrl\":\"https://static-cdn.jtvnw.net/user-default-pictures-uv/de130ab0-def7-11e9-b668-784f43822e80-profile_image-300x300.png\",\"playerFlagName\":\"\",\"playerFlag\":null,\"wasRandom\":false,\"score\":72.5,\"distance\":7508.852146121096,\"timeTaken\":130398,\"streak\":0,\"countryCode\":null,\"exactCountryCode\":null,\"guessCount\":1,\"isStreamerResult\":false,\"guessedBefore\":false,\"gameId\":\"14nnQ0MRheHQOWG2\"},{\"displayName\":\"Jameson Velez\",\"userName\":\"Jameson Velez\",\"profilePicUrl\":\"https://lh3.googleusercontent.com/a/ALm5wu13IShKIHxhEcJ5hOcG4pR8tNaVg--a5CORtEAx=s96-c\",\"playerFlagName\":\"\",\"playerFlag\":null,\"wasRandom\":false,\"score\":7.5,\"distance\":11776.95516169688,\"timeTaken\":60026,\"streak\":0,\"countryCode\":null,\"exactCountryCode\":null,\"guessCount\":1,\"isStreamerResult\":false,\"guessedBefore\":false,\"gameId\":\"14nnQ0MRheHQOWG2\"},{\"displayName\":\"BOK\u51F1\",\"userName\":\"BOK\u51F1\",\"profilePicUrl\":\"https://lh3.googleusercontent.com/a-/ACNPEu9Iy3_5C4K_Tu_XJIwuRuBVJ8t0MGsgP8sq8CbV=s96-c\",\"playerFlagName\":\"Taiwan\",\"playerFlag\":\"tw\",\"wasRandom\":false,\"score\":5.83,\"distance\":12164.341924449534,\"timeTaken\":80724,\"streak\":0,\"countryCode\":null,\"exactCountryCode\":null,\"guessCount\":1,\"isStreamerResult\":false,\"guessedBefore\":false,\"gameId\":\"14nnQ0MRheHQOWG2\"},{\"displayName\":\"KarkLive\",\"userName\":\"KarkLive\",\"profilePicUrl\":\"https://lh3.googleusercontent.com/a-/ACNPEu-MvvH1z_IdFa2_J0KVWdL1TaJZHK1-QGhlmwGSDA=s96-c\",\"playerFlagName\":\"\",\"playerFlag\":null,\"wasRandom\":false,\"score\":5.83,\"distance\":12307.435375398407,\"timeTaken\":45102,\"streak\":0,\"countryCode\":null,\"exactCountryCode\":null,\"guessCount\":1,\"isStreamerResult\":false,\"guessedBefore\":false,\"gameId\":\"14nnQ0MRheHQOWG2\"}]", "export default {\"mapID\":0,\"mapName\":\"A Community World\",\"isInfinite\":false,\"isStreak\":false,\"gameType\":\"standard\",\"gameMode\":\"standard\",\"gameState\":\"started\",\"roundCount\":5,\"timeLimit\":0,\"forbidMoving\":true,\"forbidZooming\":true,\"forbidRotating\":true,\"streakType\":\"countrystreak\"}", "\nexport default { \"showStreamOverlay\": true, \"showFlags\": true, \"showBorders\": true, \"mapIdentifier\": \"GraphicGroupGoddart\", \"streamer\": \"56311e06acdaa11d50d8d141\", \"installedFlagPacks\": \"[]\", \"gameMode\": \"DEFAULT\", \"isUSStreak\": false, \"temporaryGuesses\": true, \"twitchChannelName\": \"Petery\" }\n", "export default { \"roundNumber\": 1, \"isMultiGuess\": false, \"startTime\": \"2022-09-25T15:37:58.5715788+00:00\" }\n\n ", "export default [{ \"displayName\": \"benofchess\", \"userName\": \"benofchess\", \"profilePicUrl\": \"https://static-cdn.jtvnw.net/user-default-pictures-uv/ebb84563-db81-4b9c-8940-64ed33ccfc7b-profile_image-300x300.png\", \"playerFlagName\": \"Canada\", \"playerFlag\": \"ca\", \"wasRandom\": false, \"score\": 4607, \"distance\": 151.87407282906725, \"timeTaken\": 31979.5434, \"streak\": 1, \"countryCode\": \"FR\", \"exactCountryCode\": \"FR\", \"guessCount\": 1, \"isStreamerResult\": false, \"guessedBefore\": false, \"gameId\": null }, { \"displayName\": \"jess795\", \"userName\": \"jess795\", \"profilePicUrl\": \"https://static-cdn.jtvnw.net/user-default-pictures-uv/de130ab0-def7-11e9-b668-784f43822e80-profile_image-300x300.png\", \"playerFlagName\": \"New Brunswick\", \"playerFlag\": \"ca-new-brunswick\", \"wasRandom\": false, \"score\": 4498, \"distance\": 195.93356426346097, \"timeTaken\": 64433.6315, \"streak\": 1, \"countryCode\": \"FR\", \"exactCountryCode\": \"FR\", \"guessCount\": 1, \"isStreamerResult\": false, \"guessedBefore\": false, \"gameId\": null }, { \"displayName\": \"blushykate\", \"userName\": \"blushykate\", \"profilePicUrl\": \"https://static-cdn.jtvnw.net/jtv_user_pictures/77966a2c-8871-42e4-a75c-ab4efe2238b2-profile_image-300x300.png\", \"playerFlagName\": \"Greenland\", \"playerFlag\": \"gl\", \"wasRandom\": false, \"score\": 4448, \"distance\": 216.79025146923792, \"timeTaken\": 73031.7159, \"streak\": 1, \"countryCode\": \"FR\", \"exactCountryCode\": \"FR\", \"guessCount\": 1, \"isStreamerResult\": false, \"guessedBefore\": false, \"gameId\": null }, { \"displayName\": \"Gonzague Valli\u00E8re\", \"userName\": \"Gonzague Valli\u00E8re\", \"profilePicUrl\": \"https://lh3.googleusercontent.com/a/ALm5wu0adoiQJuTcXzJTjHK-6Bc9SSYvNAPVD-z40ucjYQ=s96-c\", \"playerFlagName\": \"\", \"playerFlag\": null, \"wasRandom\": false, \"score\": 4359, \"distance\": 254.40616840297506, \"timeTaken\": 45852.6905, \"streak\": 1, \"countryCode\": \"FR\", \"exactCountryCode\": \"FR\", \"guessCount\": 1, \"isStreamerResult\": false, \"guessedBefore\": false, \"gameId\": null }, { \"displayName\": \"elkku48\", \"userName\": \"elkku48\", \"profilePicUrl\": \"https://static-cdn.jtvnw.net/user-default-pictures-uv/dbdc9198-def8-11e9-8681-784f43822e80-profile_image-300x300.png\", \"playerFlagName\": \"Finland\", \"playerFlag\": \"fi\", \"wasRandom\": false, \"score\": 4354, \"distance\": 256.32890501752416, \"timeTaken\": 92186.07, \"streak\": 1, \"countryCode\": \"FR\", \"exactCountryCode\": \"FR\", \"guessCount\": 1, \"isStreamerResult\": false, \"guessedBefore\": false, \"gameId\": null }, { \"displayName\": \"jim12__\", \"userName\": \"jim12__\", \"profilePicUrl\": \"https://static-cdn.jtvnw.net/jtv_user_pictures/7b44669d-29d9-4e09-bf3c-ca928ad94f06-profile_image-300x300.png\", \"playerFlagName\": \"Egypt\", \"playerFlag\": \"eg\", \"wasRandom\": false, \"score\": 4343, \"distance\": 261.00017337017255, \"timeTaken\": 97104.1672, \"streak\": 1, \"countryCode\": \"FR\", \"exactCountryCode\": \"FR\", \"guessCount\": 1, \"isStreamerResult\": false, \"guessedBefore\": false, \"gameId\": null }, { \"displayName\": \"Yuergenos\", \"userName\": \"yuergenos\", \"profilePicUrl\": \"https://static-cdn.jtvnw.net/jtv_user_pictures/29343774-087f-4458-9e6f-e61396e8b2ca-profile_image-300x300.png\", \"playerFlagName\": \"Yukon\", \"playerFlag\": \"ca-yukon\", \"wasRandom\": false, \"score\": 4217, \"distance\": 315.67593808467194, \"timeTaken\": 19486.0176, \"streak\": 1, \"countryCode\": \"FR\", \"exactCountryCode\": \"FR\", \"guessCount\": 1, \"isStreamerResult\": false, \"guessedBefore\": false, \"gameId\": null }, { \"displayName\": \"valgue_\", \"userName\": \"valgue_\", \"profilePicUrl\": \"https://static-cdn.jtvnw.net/user-default-pictures-uv/ebb84563-db81-4b9c-8940-64ed33ccfc7b-profile_image-300x300.png\", \"playerFlagName\": \"France\", \"playerFlag\": \"fr\", \"wasRandom\": false, \"score\": 4182, \"distance\": 331.1595322764625, \"timeTaken\": 59585.5115, \"streak\": 1, \"countryCode\": \"FR\", \"exactCountryCode\": \"FR\", \"guessCount\": 1, \"isStreamerResult\": false, \"guessedBefore\": false, \"gameId\": null }, { \"displayName\": \"DelCarlo\", \"userName\": \"delcarlo\", \"profilePicUrl\": \"https://static-cdn.jtvnw.net/user-default-pictures-uv/ead5c8b2-a4c9-4724-b1dd-9f00b46cbd3d-profile_image-300x300.png\", \"playerFlagName\": \"USA\", \"playerFlag\": \"us\", \"wasRandom\": false, \"score\": 4169, \"distance\": 336.7610954644199, \"timeTaken\": 31185.55, \"streak\": 1, \"countryCode\": \"FR\", \"exactCountryCode\": \"FR\", \"guessCount\": 1, \"isStreamerResult\": false, \"guessedBefore\": false, \"gameId\": null }, { \"displayName\": \"andy_dreax\", \"userName\": \"andy_dreax\", \"profilePicUrl\": \"https://static-cdn.jtvnw.net/jtv_user_pictures/6c233b44-5fff-48ff-a319-153c77b60111-profile_image-300x300.png\", \"playerFlagName\": \"Philippines\", \"playerFlag\": \"ph\", \"wasRandom\": false, \"score\": 4168, \"distance\": 337.4507558046157, \"timeTaken\": 35057.8828, \"streak\": 1, \"countryCode\": \"FR\", \"exactCountryCode\": \"FR\", \"guessCount\": 1, \"isStreamerResult\": false, \"guessedBefore\": false, \"gameId\": null }, { \"displayName\": \"Moses1979\", \"userName\": \"Moses1979\", \"profilePicUrl\": \"https://lh3.googleusercontent.com/a-/ACNPEu_27ed7jBURyGPcVoZ7CskY2vs8suGHPe0gHqrP=s96-c\", \"playerFlagName\": \"\", \"playerFlag\": null, \"wasRandom\": false, \"score\": 4157, \"distance\": 342.288839914959, \"timeTaken\": 66714.9654, \"streak\": 1, \"countryCode\": \"FR\", \"exactCountryCode\": \"FR\", \"guessCount\": 1, \"isStreamerResult\": false, \"guessedBefore\": false, \"gameId\": null }, { \"displayName\": \"IndyDeedy\", \"userName\": \"indydeedy\", \"profilePicUrl\": \"https://static-cdn.jtvnw.net/user-default-pictures-uv/cdd517fe-def4-11e9-948e-784f43822e80-profile_image-300x300.png\", \"playerFlagName\": \"New Zealand\", \"playerFlag\": \"nz\", \"wasRandom\": false, \"score\": 4148, \"distance\": 346.3224012790768, \"timeTaken\": 51405.218, \"streak\": 1, \"countryCode\": \"FR\", \"exactCountryCode\": \"FR\", \"guessCount\": 1, \"isStreamerResult\": false, \"guessedBefore\": false, \"gameId\": null }, { \"displayName\": \"Icy3P\", \"userName\": \"Icy3P\", \"profilePicUrl\": \"https://lh3.googleusercontent.com/a-/ACNPEu8sQJOlphZ4t6hazt4eYvdQ4GkJ4MVKe6cYjFZF_Q=s96-c\", \"playerFlagName\": \"\", \"playerFlag\": null, \"wasRandom\": false, \"score\": 4141, \"distance\": 349.5206699085141, \"timeTaken\": 97635.2813, \"streak\": 1, \"countryCode\": \"FR\", \"exactCountryCode\": \"FR\", \"guessCount\": 1, \"isStreamerResult\": false, \"guessedBefore\": false, \"gameId\": null }, { \"displayName\": \"Stavboy\", \"userName\": \"Stavboy\", \"profilePicUrl\": \"https://lh3.googleusercontent.com/a/ALm5wu2svJChmHqBTSNNuMAQAjeO_f1RIXbb-EALPcr2=s96-c\", \"playerFlagName\": \"United Kingdom\", \"playerFlag\": \"gb\", \"wasRandom\": false, \"score\": 4141, \"distance\": 349.57361306865937, \"timeTaken\": 50852.0076, \"streak\": 2, \"countryCode\": \"FR\", \"exactCountryCode\": \"FR\", \"guessCount\": 1, \"isStreamerResult\": false, \"guessedBefore\": false, \"gameId\": null }, { \"displayName\": \"Lawrence Chen\", \"userName\": \"Lawrence Chen\", \"profilePicUrl\": \"https://lh3.googleusercontent.com/a-/ACNPEu9BZzvUMpXA_gSHVKW-3h8oVbMrgKFHgZVl6HbVKQ=s96-c\", \"playerFlagName\": \"\", \"playerFlag\": null, \"wasRandom\": false, \"score\": 4140, \"distance\": 349.7908505460036, \"timeTaken\": 76217.9986, \"streak\": 1, \"countryCode\": \"FR\", \"exactCountryCode\": \"FR\", \"guessCount\": 1, \"isStreamerResult\": false, \"guessedBefore\": false, \"gameId\": null }, { \"displayName\": \"man_of_bananas\", \"userName\": \"man_of_bananas\", \"profilePicUrl\": \"https://static-cdn.jtvnw.net/jtv_user_pictures/3a62161a-3d67-42dd-bf47-0bf217662013-profile_image-300x300.png\", \"playerFlagName\": \"Alberta\", \"playerFlag\": \"ca-alberta\", \"wasRandom\": false, \"score\": 4114, \"distance\": 361.70271196844175, \"timeTaken\": 77484.6158, \"streak\": 1, \"countryCode\": \"FR\", \"exactCountryCode\": \"FR\", \"guessCount\": 1, \"isStreamerResult\": false, \"guessedBefore\": false, \"gameId\": null }, { \"displayName\": \"indigo__carmine\", \"userName\": \"indigo__carmine\", \"profilePicUrl\": \"https://static-cdn.jtvnw.net/jtv_user_pictures/a7939de4-b3f0-45ac-889d-2bf24827057e-profile_image-300x300.png\", \"playerFlagName\": \"Slovakia\", \"playerFlag\": \"sk\", \"wasRandom\": false, \"score\": 4096, \"distance\": 369.5928234114521, \"timeTaken\": 76558.1636, \"streak\": 1, \"countryCode\": \"FR\", \"exactCountryCode\": \"FR\", \"guessCount\": 1, \"isStreamerResult\": false, \"guessedBefore\": false, \"gameId\": null }, { \"displayName\": \"CocoaBlueTie2\", \"userName\": \"CocoaBlueTie2\", \"profilePicUrl\": \"https://lh3.googleusercontent.com/a-/ACNPEu9B6QQ-0Umz4XWBNPKlV-d0BKMosYTKSwJ__risXg=s96-c\", \"playerFlagName\": \"\", \"playerFlag\": null, \"wasRandom\": false, \"score\": 4054, \"distance\": 388.8434199528384, \"timeTaken\": 50310.9706, \"streak\": 1, \"countryCode\": \"FR\", \"exactCountryCode\": \"FR\", \"guessCount\": 1, \"isStreamerResult\": false, \"guessedBefore\": false, \"gameId\": null }, { \"displayName\": \"Carsten Marks\", \"userName\": \"Carsten Marks\", \"profilePicUrl\": \"https://lh3.googleusercontent.com/a/ALm5wu3rzltQDmSIdXU7nyCZUkZOJXq7U2WAiq1HP060=s96-c\", \"playerFlagName\": \"\", \"playerFlag\": null, \"wasRandom\": false, \"score\": 4047, \"distance\": 392.1636341273372, \"timeTaken\": 24596.0816, \"streak\": 1, \"countryCode\": \"FR\", \"exactCountryCode\": \"FR\", \"guessCount\": 1, \"isStreamerResult\": false, \"guessedBefore\": false, \"gameId\": null }, { \"displayName\": \"mein Humor\", \"userName\": \"mein Humor\", \"profilePicUrl\": \"https://lh3.googleusercontent.com/a-/ACNPEu-nyrvLXq_ZhDXVwTVfq1AaBVyyLIPIU5wFcJMkkw=s96-c\", \"playerFlagName\": \"\", \"playerFlag\": null, \"wasRandom\": false, \"score\": 4015, \"distance\": 406.5598028028569, \"timeTaken\": 91191.2099, \"streak\": 1, \"countryCode\": \"FR\", \"exactCountryCode\": \"FR\", \"guessCount\": 1, \"isStreamerResult\": false, \"guessedBefore\": false, \"gameId\": null }, { \"displayName\": \"Luke Houghton\", \"userName\": \"Luke Houghton\", \"profilePicUrl\": \"https://lh3.googleusercontent.com/a/ALm5wu2GuCs30SArB6f-b4-1RKw9C714gT9DxtBot7mQ=s96-c\", \"playerFlagName\": \"\", \"playerFlag\": null, \"wasRandom\": false, \"score\": 4014, \"distance\": 407.1780410693822, \"timeTaken\": 62775.865, \"streak\": 1, \"countryCode\": \"FR\", \"exactCountryCode\": \"FR\", \"guessCount\": 1, \"isStreamerResult\": false, \"guessedBefore\": false, \"gameId\": null }, { \"displayName\": \"ssooozzz\", \"userName\": \"ssooozzz\", \"profilePicUrl\": \"https://static-cdn.jtvnw.net/jtv_user_pictures/373f8725-1e5c-4967-9b05-d8bdc2d3e024-profile_image-300x300.png\", \"playerFlagName\": \"United Kingdom\", \"playerFlag\": \"gb\", \"wasRandom\": false, \"score\": 3985, \"distance\": 420.40914661226884, \"timeTaken\": 51650.8191, \"streak\": 1, \"countryCode\": \"FR\", \"exactCountryCode\": \"FR\", \"guessCount\": 1, \"isStreamerResult\": false, \"guessedBefore\": false, \"gameId\": null }, { \"displayName\": \"JohnnyC\", \"userName\": \"JohnnyC\", \"profilePicUrl\": \"https://lh3.googleusercontent.com/a/ALm5wu1MD_SE_Qy031tKJe8Wmly4JgcLiqtwush9NgF0=s96-c\", \"playerFlagName\": \"Portugal\", \"playerFlag\": \"pt\", \"wasRandom\": false, \"score\": 3978, \"distance\": 423.6644648928751, \"timeTaken\": 48972.7218, \"streak\": 1, \"countryCode\": \"FR\", \"exactCountryCode\": \"FR\", \"guessCount\": 1, \"isStreamerResult\": false, \"guessedBefore\": false, \"gameId\": null }, { \"displayName\": \"Carsyn E\", \"userName\": \"\", \"profilePicUrl\": \"https://lh3.googleusercontent.com/a-/ACNPEu82c_fQgJVcIkhlhUjV8WYCYO2JMVs2biXvdKnY=s96-c\", \"playerFlagName\": \"France\", \"playerFlag\": \"fr\", \"wasRandom\": false, \"score\": 3977, \"distance\": 424.2552972149714, \"timeTaken\": 113485.3308, \"streak\": 1, \"countryCode\": \"FR\", \"exactCountryCode\": \"FR\", \"guessCount\": 1, \"isStreamerResult\": false, \"guessedBefore\": false, \"gameId\": null }, { \"displayName\": \"Jack Hughes\", \"userName\": \"Jack Hughes\", \"profilePicUrl\": \"https://lh3.googleusercontent.com/a-/ACNPEu8csHubpVo2TOqpjR3bEhF5U0mj6J13CItq4AOyug=s96-c\", \"playerFlagName\": \"\", \"playerFlag\": null, \"wasRandom\": false, \"score\": 3959, \"distance\": 432.56381906190717, \"timeTaken\": 56627.14, \"streak\": 1, \"countryCode\": \"FR\", \"exactCountryCode\": \"FR\", \"guessCount\": 1, \"isStreamerResult\": false, \"guessedBefore\": false, \"gameId\": null }, { \"displayName\": \"wissensdigger\", \"userName\": \"wissensdigger\", \"profilePicUrl\": \"https://static-cdn.jtvnw.net/user-default-pictures-uv/998f01ae-def8-11e9-b95c-784f43822e80-profile_image-300x300.png\", \"playerFlagName\": \"\", \"playerFlag\": null, \"wasRandom\": false, \"score\": 3956, \"distance\": 434.10795078149226, \"timeTaken\": 113482.8852, \"streak\": 1, \"countryCode\": \"FR\", \"exactCountryCode\": \"FR\", \"guessCount\": 1, \"isStreamerResult\": false, \"guessedBefore\": false, \"gameId\": null }, { \"displayName\": \"ryclemo\", \"userName\": \"ryclemo\", \"profilePicUrl\": \"https://static-cdn.jtvnw.net/jtv_user_pictures/2f3d1e99-f704-405b-b181-b75ee8f95527-profile_image-300x300.png\", \"playerFlagName\": \"\", \"playerFlag\": null, \"wasRandom\": false, \"score\": 3918, \"distance\": 452.093694318192, \"timeTaken\": 81856.1747, \"streak\": 1, \"countryCode\": \"FR\", \"exactCountryCode\": \"FR\", \"guessCount\": 1, \"isStreamerResult\": false, \"guessedBefore\": false, \"gameId\": null }, { \"displayName\": \"Coleo21\", \"userName\": \"Coleo21\", \"profilePicUrl\": \"https://lh3.googleusercontent.com/a-/ACNPEu8RggNZU-FxpBAp5cOvnDxI52lHaVvpy3oNoRWhbg=s96-c\", \"playerFlagName\": \"\", \"playerFlag\": null, \"wasRandom\": false, \"score\": 3900, \"distance\": 460.66500026290083, \"timeTaken\": 42400.7319, \"streak\": 1, \"countryCode\": \"FR\", \"exactCountryCode\": \"FR\", \"guessCount\": 1, \"isStreamerResult\": false, \"guessedBefore\": false, \"gameId\": null }, { \"displayName\": \"mofred\", \"userName\": \"mofred\", \"profilePicUrl\": \"https://static-cdn.jtvnw.net/jtv_user_pictures/mofred-profile_image-bf0e42f63f6b28ea-300x300.jpeg\", \"playerFlagName\": \"Germany\", \"playerFlag\": \"de\", \"wasRandom\": false, \"score\": 3893, \"distance\": 463.9456620202149, \"timeTaken\": 71705.6081, \"streak\": 2, \"countryCode\": \"FR\", \"exactCountryCode\": \"FR\", \"guessCount\": 1, \"isStreamerResult\": false, \"guessedBefore\": false, \"gameId\": null }, { \"displayName\": \"Socrates\", \"userName\": \"Socrates\", \"profilePicUrl\": \"https://lh3.googleusercontent.com/a-/ACNPEu9iTPFc6fKHi8dlGICpdPO4yXXXYw04YkOjrqTtjQ=s96-c\", \"playerFlagName\": \"\", \"playerFlag\": null, \"wasRandom\": false, \"score\": 3870, \"distance\": 474.95804011324225, \"timeTaken\": 28516.7479, \"streak\": 1, \"countryCode\": \"FR\", \"exactCountryCode\": \"FR\", \"guessCount\": 1, \"isStreamerResult\": false, \"guessedBefore\": false, \"gameId\": null }, { \"displayName\": \"KaTzY BigBen\", \"userName\": \"KaTzY BigBen\", \"profilePicUrl\": \"https://lh3.googleusercontent.com/a-/ACNPEu9Y76Nwz4cv2OrZekM2QLpD0bhkAMPBuvhAkD6kxQ=s96-c\", \"playerFlagName\": \"\", \"playerFlag\": null, \"wasRandom\": false, \"score\": 3790, \"distance\": 513.7548285053656, \"timeTaken\": 98116.0246, \"streak\": 1, \"countryCode\": \"FR\", \"exactCountryCode\": \"FR\", \"guessCount\": 1, \"isStreamerResult\": false, \"guessedBefore\": false, \"gameId\": null }, { \"displayName\": \"Enrix\", \"userName\": \"Enrix\", \"profilePicUrl\": \"https://lh3.googleusercontent.com/a-/ACNPEu-C4fjilqdsAeM1kiRGxPOBH3E8S7barXGt38_c=s96-c\", \"playerFlagName\": \"\", \"playerFlag\": null, \"wasRandom\": false, \"score\": 3753, \"distance\": 531.7289789517233, \"timeTaken\": 24050.642, \"streak\": 2, \"countryCode\": \"FR\", \"exactCountryCode\": \"FR\", \"guessCount\": 1, \"isStreamerResult\": false, \"guessedBefore\": false, \"gameId\": null }, { \"displayName\": \"flaze\", \"userName\": \"flaze\", \"profilePicUrl\": \"https://lh3.googleusercontent.com/a-/ACNPEu-t7ycysugGzo3skatu-stIlbZ0Yug5o_UxCNb8pw=s96-c\", \"playerFlagName\": \"Germany\", \"playerFlag\": \"de\", \"wasRandom\": false, \"score\": 3732, \"distance\": 542.0604921299143, \"timeTaken\": 90741.0517, \"streak\": 1, \"countryCode\": \"FR\", \"exactCountryCode\": \"FR\", \"guessCount\": 1, \"isStreamerResult\": false, \"guessedBefore\": false, \"gameId\": null }, { \"displayName\": \"artification\", \"userName\": \"artification\", \"profilePicUrl\": \"https://static-cdn.jtvnw.net/user-default-pictures-uv/215b7342-def9-11e9-9a66-784f43822e80-profile_image-300x300.png\", \"playerFlagName\": \"\", \"playerFlag\": null, \"wasRandom\": false, \"score\": 3729, \"distance\": 543.8192390795806, \"timeTaken\": 59511.1973, \"streak\": 1, \"countryCode\": \"FR\", \"exactCountryCode\": \"FR\", \"guessCount\": 1, \"isStreamerResult\": false, \"guessedBefore\": false, \"gameId\": null }, { \"displayName\": \"SHIAH SHIAH\", \"userName\": \"SHIAH SHIAH\", \"profilePicUrl\": \"https://lh3.googleusercontent.com/a-/ACNPEu-fWJWdDKNAErPvLRRICDdt85ekwpbWX4SsbbkE=s96-c\", \"playerFlagName\": \"Germany\", \"playerFlag\": \"de\", \"wasRandom\": false, \"score\": 3707, \"distance\": 554.688419052664, \"timeTaken\": 91804.9385, \"streak\": 1, \"countryCode\": \"FR\", \"exactCountryCode\": \"FR\", \"guessCount\": 1, \"isStreamerResult\": false, \"guessedBefore\": false, \"gameId\": null }, { \"displayName\": \"Christian H\", \"userName\": \"Christian H\", \"profilePicUrl\": \"https://lh3.googleusercontent.com/a-/ACNPEu_8IfZGmXBE3T3mSKjnaUYFr4BgiYrS1XumJKkQLw=s96-c\", \"playerFlagName\": \"\", \"playerFlag\": null, \"wasRandom\": false, \"score\": 3161.67, \"distance\": 511.5501451737581, \"timeTaken\": 40703.6326, \"streak\": 0, \"countryCode\": \"ES\", \"exactCountryCode\": \"ES\", \"guessCount\": 1, \"isStreamerResult\": false, \"guessedBefore\": false, \"gameId\": null }, { \"displayName\": \"Dividenden Nerd\", \"userName\": \"Dividenden Nerd\", \"profilePicUrl\": \"https://lh3.googleusercontent.com/a-/ACNPEu_XZSa6yx5nk_z7nYhVHoew5L23yz6Kp62xlvyH=s96-c\", \"playerFlagName\": \"Germany\", \"playerFlag\": \"de\", \"wasRandom\": false, \"score\": 3160, \"distance\": 512.6480807238927, \"timeTaken\": 43422.0827, \"streak\": 0, \"countryCode\": \"ES\", \"exactCountryCode\": \"ES\", \"guessCount\": 1, \"isStreamerResult\": false, \"guessedBefore\": false, \"gameId\": null }, { \"displayName\": \"lysosome17\", \"userName\": \"lysosome17\", \"profilePicUrl\": \"https://static-cdn.jtvnw.net/user-default-pictures-uv/41780b5a-def8-11e9-94d9-784f43822e80-profile_image-300x300.png\", \"playerFlagName\": \"T\u00FCrkiye\", \"playerFlag\": \"tr\", \"wasRandom\": false, \"score\": 3080.83, \"distance\": 559.5328475621039, \"timeTaken\": 88519.9608, \"streak\": 0, \"countryCode\": \"BE\", \"exactCountryCode\": \"BE\", \"guessCount\": 1, \"isStreamerResult\": false, \"guessedBefore\": false, \"gameId\": null }, { \"displayName\": \"MZV\", \"userName\": \"MZV\", \"profilePicUrl\": \"https://lh3.googleusercontent.com/a-/ACNPEu9qi9zOM-jX7BkjfonZVFzesrIBNKvkj6aEl3bnSw=s96-c\", \"playerFlagName\": \"Andorra\", \"playerFlag\": \"ad\", \"wasRandom\": false, \"score\": 3015, \"distance\": 599.4408429517707, \"timeTaken\": 68956.9185, \"streak\": 0, \"countryCode\": \"LU\", \"exactCountryCode\": \"LU\", \"guessCount\": 1, \"isStreamerResult\": false, \"guessedBefore\": false, \"gameId\": null }, { \"displayName\": \"ADHITHYAN VP\", \"userName\": \"ADHITHYAN VP\", \"profilePicUrl\": \"https://lh3.googleusercontent.com/a-/ACNPEu9ZrdHiFKjYh52OpGUko_E9rH8Bmj42vaR_9HXd_Q=s96-c\", \"playerFlagName\": \"\", \"playerFlag\": null, \"wasRandom\": false, \"score\": 2987.5, \"distance\": 616.5512935098781, \"timeTaken\": 42921.5929, \"streak\": 0, \"countryCode\": \"BE\", \"exactCountryCode\": \"BE\", \"guessCount\": 1, \"isStreamerResult\": false, \"guessedBefore\": false, \"gameId\": null }, { \"displayName\": \"undergroundbig\", \"userName\": \"undergroundbig\", \"profilePicUrl\": \"https://static-cdn.jtvnw.net/jtv_user_pictures/8892cc51-d547-4305-9cd0-ff5b22623d77-profile_image-300x300.png\", \"playerFlagName\": \"\", \"playerFlag\": null, \"wasRandom\": false, \"score\": 2961.67, \"distance\": 632.6145675273094, \"timeTaken\": 77482.4765, \"streak\": 0, \"countryCode\": \"IT\", \"exactCountryCode\": \"IT\", \"guessCount\": 1, \"isStreamerResult\": false, \"guessedBefore\": false, \"gameId\": null }, { \"displayName\": \"Kryen 112\", \"userName\": \"Kryen 112\", \"profilePicUrl\": \"https://lh3.googleusercontent.com/a/ALm5wu2gRxHgbzFh02dnoYJA_GW6UCeroVSvW0CFcWlg=s96-c\", \"playerFlagName\": \"Netherlands\", \"playerFlag\": \"nl\", \"wasRandom\": false, \"score\": 2942.5, \"distance\": 644.7638176150175, \"timeTaken\": 101332.4095, \"streak\": 0, \"countryCode\": \"BE\", \"exactCountryCode\": \"BE\", \"guessCount\": 1, \"isStreamerResult\": false, \"guessedBefore\": false, \"gameId\": null }, { \"displayName\": \"Non Aligned\", \"userName\": \"Non Aligned\", \"profilePicUrl\": \"https://lh3.googleusercontent.com/a-/ACNPEu_3TJwFPnPW0UqdH8Yb2wbp-7_va7Gx6CynOFtmtg=s96-c\", \"playerFlagName\": \"United Kingdom\", \"playerFlag\": \"gb\", \"wasRandom\": false, \"score\": 2940.83, \"distance\": 645.8375681108497, \"timeTaken\": 54500.5944, \"streak\": 0, \"countryCode\": \"BE\", \"exactCountryCode\": \"BE\", \"guessCount\": 1, \"isStreamerResult\": false, \"guessedBefore\": false, \"gameId\": null }, { \"displayName\": \"Joseph Evanson\", \"userName\": \"Joseph Evanson\", \"profilePicUrl\": \"https://lh3.googleusercontent.com/a-/ACNPEu9A2Nl6iE9tkD0Pr-y4vQYzfpCqLrL5e6EHHwCfpg=s96-c\", \"playerFlagName\": \"\", \"playerFlag\": null, \"wasRandom\": false, \"score\": 2898.33, \"distance\": 672.7933940785518, \"timeTaken\": 58722.9544, \"streak\": 0, \"countryCode\": \"CH\", \"exactCountryCode\": \"CH\", \"guessCount\": 1, \"isStreamerResult\": false, \"guessedBefore\": false, \"gameId\": null }, { \"displayName\": \"xrmich\", \"userName\": \"xrmich\", \"profilePicUrl\": \"https://static-cdn.jtvnw.net/user-default-pictures-uv/ead5c8b2-a4c9-4724-b1dd-9f00b46cbd3d-profile_image-300x300.png\", \"playerFlagName\": \"Spain\", \"playerFlag\": \"es\", \"wasRandom\": false, \"score\": 2834.17, \"distance\": 714.5677967608844, \"timeTaken\": 62051.2174, \"streak\": 0, \"countryCode\": \"ES\", \"exactCountryCode\": \"ES\", \"guessCount\": 1, \"isStreamerResult\": false, \"guessedBefore\": false, \"gameId\": null }, { \"displayName\": \"Mihika Peshwa\", \"userName\": \"Mihika Peshwa\", \"profilePicUrl\": \"https://lh3.googleusercontent.com/a/ALm5wu2DvIM0LDziAxEJwjDkVxr_qaNOn-lNHFQ8xAJnFA=s96-c\", \"playerFlagName\": \"\", \"playerFlag\": null, \"wasRandom\": false, \"score\": 2830, \"distance\": 717.1161445399489, \"timeTaken\": 78883.4107, \"streak\": 0, \"countryCode\": \"ES\", \"exactCountryCode\": \"ES\", \"guessCount\": 1, \"isStreamerResult\": false, \"guessedBefore\": false, \"gameId\": null }, { \"displayName\": \"KSF0 Building\", \"userName\": \"KSF0 Building\", \"profilePicUrl\": \"https://lh3.googleusercontent.com/a/ALm5wu1P4ySaa-Pslbrys7Ek0r4tOJzl2XHqvkECnsQ=s96-c\", \"playerFlagName\": \"\", \"playerFlag\": null, \"wasRandom\": false, \"score\": 2813.33, \"distance\": 728.0880265296267, \"timeTaken\": 87887.7959, \"streak\": 0, \"countryCode\": \"IT\", \"exactCountryCode\": \"IT\", \"guessCount\": 1, \"isStreamerResult\": false, \"guessedBefore\": false, \"gameId\": null }, { \"displayName\": \"forrozeiro602\", \"userName\": \"forrozeiro602\", \"profilePicUrl\": \"https://static-cdn.jtvnw.net/user-default-pictures-uv/215b7342-def9-11e9-9a66-784f43822e80-profile_image-300x300.png\", \"playerFlagName\": \"Greece\", \"playerFlag\": \"gr\", \"wasRandom\": false, \"score\": 2752.5, \"distance\": 768.7214606389589, \"timeTaken\": 88600.3747, \"streak\": 0, \"countryCode\": \"ES\", \"exactCountryCode\": \"ES\", \"guessCount\": 1, \"isStreamerResult\": false, \"guessedBefore\": false, \"gameId\": null }, { \"displayName\": \"Gergely Kerenyi\", \"userName\": \"Gergely Kerenyi\", \"profilePicUrl\": \"https://lh3.googleusercontent.com/a-/ACNPEu-_siSeWILNfsDIudlkRrXYk2tsLiePOQpUMXfQ6A=s96-c\", \"playerFlagName\": \"\", \"playerFlag\": null, \"wasRandom\": false, \"score\": 2750.83, \"distance\": 769.8885895208839, \"timeTaken\": 31371.4402, \"streak\": 0, \"countryCode\": \"ES\", \"exactCountryCode\": \"ES\", \"guessCount\": 1, \"isStreamerResult\": false, \"guessedBefore\": false, \"gameId\": null }, { \"displayName\": \"piccabo21\", \"userName\": \"piccabo21\", \"profilePicUrl\": \"https://static-cdn.jtvnw.net/jtv_user_pictures/f4a18121-c39b-4368-ace1-944c228cdff7-profile_image-300x300.png\", \"playerFlagName\": \"Faroe Islands\", \"playerFlag\": \"fo\", \"wasRandom\": false, \"score\": 2679.17, \"distance\": 818.8134510344037, \"timeTaken\": 44701.0139, \"streak\": 0, \"countryCode\": \"ES\", \"exactCountryCode\": \"ES\", \"guessCount\": 1, \"isStreamerResult\": false, \"guessedBefore\": false, \"gameId\": null }, { \"displayName\": \"Jeroen ter Steeg\", \"userName\": \"Jeroen ter Steeg\", \"profilePicUrl\": \"https://lh3.googleusercontent.com/a-/ACNPEu86jKCrpVWGr_yhMm17RBEYdbJAh0D7FWagquCT8g=s96-c\", \"playerFlagName\": \"\", \"playerFlag\": null, \"wasRandom\": false, \"score\": 2595.83, \"distance\": 876.8221998498724, \"timeTaken\": 60609.2548, \"streak\": 0, \"countryCode\": \"PT\", \"exactCountryCode\": \"PT\", \"guessCount\": 1, \"isStreamerResult\": false, \"guessedBefore\": false, \"gameId\": null }, { \"displayName\": \"mixmissed123\", \"userName\": \"mixmissed123\", \"profilePicUrl\": \"https://static-cdn.jtvnw.net/user-default-pictures-uv/215b7342-def9-11e9-9a66-784f43822e80-profile_image-300x300.png\", \"playerFlagName\": \"Norway\", \"playerFlag\": \"no\", \"wasRandom\": false, \"score\": 2593.33, \"distance\": 879.1277918251312, \"timeTaken\": 18727.3772, \"streak\": 0, \"countryCode\": \"PT\", \"exactCountryCode\": \"PT\", \"guessCount\": 1, \"isStreamerResult\": false, \"guessedBefore\": false, \"gameId\": null }, { \"displayName\": \"m_room\", \"userName\": \"m_room\", \"profilePicUrl\": \"https://lh3.googleusercontent.com/a-/ACNPEu_rWHJmP0lDaw70Y097qhN1aqe8dOaaZj1p0TRH=s96-c\", \"playerFlagName\": \"\", \"playerFlag\": null, \"wasRandom\": false, \"score\": 2539.17, \"distance\": 917.8877350422047, \"timeTaken\": 92350.0054, \"streak\": 0, \"countryCode\": \"IT\", \"exactCountryCode\": \"IT\", \"guessCount\": 1, \"isStreamerResult\": false, \"guessedBefore\": false, \"gameId\": null }, { \"displayName\": \"James \u201CJames C\u201D C\", \"userName\": \"James \u201CJames C\u201D C\", \"profilePicUrl\": \"https://lh3.googleusercontent.com/a/ALm5wu1wMCw4g_3ZictOTXN7XNoMmbgb-UlquydgHpXyWQ=s96-c\", \"playerFlagName\": \"Yorkshire\", \"playerFlag\": \"gb-yorkshire\", \"wasRandom\": false, \"score\": 2506.67, \"distance\": 941.9063898811683, \"timeTaken\": 77650.3015, \"streak\": 0, \"countryCode\": \"PT\", \"exactCountryCode\": \"PT\", \"guessCount\": 1, \"isStreamerResult\": false, \"guessedBefore\": false, \"gameId\": null }, { \"displayName\": \"Daniil Bejan\", \"userName\": \"Daniil Bejan\", \"profilePicUrl\": \"https://lh3.googleusercontent.com/a/ALm5wu27vJU6bCnz-NDpjnJYgDf19HYyv_JCMnxW55M=s96-c\", \"playerFlagName\": \"Moldova\", \"playerFlag\": \"md\", \"wasRandom\": false, \"score\": 2465, \"distance\": 972.6915501133707, \"timeTaken\": 75263.0054, \"streak\": 0, \"countryCode\": \"IT\", \"exactCountryCode\": \"IT\", \"guessCount\": 1, \"isStreamerResult\": false, \"guessedBefore\": false, \"gameId\": null }, { \"displayName\": \"Vyacheslav\", \"userName\": \"Vyacheslav\", \"profilePicUrl\": \"https://lh3.googleusercontent.com/a-/ACNPEu_OtUckiDtKWwXUrw_kHt0zJxzwWdEoT5hZDu176Q=s96-c\", \"playerFlagName\": \"\", \"playerFlag\": null, \"wasRandom\": false, \"score\": 2417.5, \"distance\": 1008.8830831571378, \"timeTaken\": 75082.2336, \"streak\": 0, \"countryCode\": \"IT\", \"exactCountryCode\": \"IT\", \"guessCount\": 1, \"isStreamerResult\": false, \"guessedBefore\": false, \"gameId\": null }, { \"displayName\": \"QuiteAButterfly\", \"userName\": \"quiteabutterfly\", \"profilePicUrl\": \"https://static-cdn.jtvnw.net/user-default-pictures-uv/998f01ae-def8-11e9-b95c-784f43822e80-profile_image-300x300.png\", \"playerFlagName\": \"\", \"playerFlag\": null, \"wasRandom\": false, \"score\": 2416.67, \"distance\": 1009.6438168156542, \"timeTaken\": 85207.8258, \"streak\": 0, \"countryCode\": \"IT\", \"exactCountryCode\": \"IT\", \"guessCount\": 1, \"isStreamerResult\": false, \"guessedBefore\": false, \"gameId\": null }, { \"displayName\": \"Trippel\", \"userName\": \"Trippel\", \"profilePicUrl\": \"https://lh3.googleusercontent.com/a-/ACNPEu_fZds3xx4eR3_9UW6wMnnFsWaax7gep8nXhZC9=s96-c\", \"playerFlagName\": \"\", \"playerFlag\": null, \"wasRandom\": false, \"score\": 2401.67, \"distance\": 1021.0197957486326, \"timeTaken\": 63555.4621, \"streak\": 0, \"countryCode\": \"SM\", \"exactCountryCode\": \"SM\", \"guessCount\": 1, \"isStreamerResult\": false, \"guessedBefore\": false, \"gameId\": null }, { \"displayName\": \"bestformspielt\", \"userName\": \"bestformspielt\", \"profilePicUrl\": \"https://lh3.googleusercontent.com/a-/ACNPEu-INqsQdOb1yAmxX3qnNqyZ6AX13NjlvsgXxySc=s96-c\", \"playerFlagName\": \"\", \"playerFlag\": null, \"wasRandom\": false, \"score\": 2396.67, \"distance\": 1024.9185589332044, \"timeTaken\": 69232.2796, \"streak\": 0, \"countryCode\": \"IT\", \"exactCountryCode\": \"IT\", \"guessCount\": 1, \"isStreamerResult\": false, \"guessedBefore\": false, \"gameId\": null }, { \"displayName\": \"Jason Lovett\", \"userName\": \"Jason Lovett\", \"profilePicUrl\": \"https://lh3.googleusercontent.com/a/ALm5wu2cCESKk8yuItJJhqxoq-X8kwR1ebZSpQtqpsGV=s96-c\", \"playerFlagName\": \"United Kingdom\", \"playerFlag\": \"gb\", \"wasRandom\": false, \"score\": 2366.67, \"distance\": 1048.575753597338, \"timeTaken\": 28457.0391, \"streak\": 0, \"countryCode\": \"IT\", \"exactCountryCode\": \"IT\", \"guessCount\": 1, \"isStreamerResult\": false, \"guessedBefore\": false, \"gameId\": null }, { \"displayName\": \"MiniGolfPhenom\", \"userName\": \"MiniGolfPhenom\", \"profilePicUrl\": \"https://lh3.googleusercontent.com/a/ALm5wu2Up0eAJpbSzlxrGC4pmQkmLO72Fr0SzJpojGDU=s96-c\", \"playerFlagName\": \"\", \"playerFlag\": null, \"wasRandom\": false, \"score\": 2365.83, \"distance\": 1048.8353199915805, \"timeTaken\": 49801.3512, \"streak\": 0, \"countryCode\": \"ES\", \"exactCountryCode\": \"ES\", \"guessCount\": 1, \"isStreamerResult\": false, \"guessedBefore\": false, \"gameId\": null }, { \"displayName\": \"Bla\u017E Nepu\u017Elan\", \"userName\": \"Bla\u017E Nepu\u017Elan\", \"profilePicUrl\": \"https://lh3.googleusercontent.com/a/ALm5wu1ZCmZKTXgUlCIhZlWxHSYQxc2f-2ZUY5ojizyn=s96-c\", \"playerFlagName\": \"\", \"playerFlag\": null, \"wasRandom\": false, \"score\": 2332.5, \"distance\": 1075.2723550865164, \"timeTaken\": 81866.3388, \"streak\": 0, \"countryCode\": \"SI\", \"exactCountryCode\": \"SI\", \"guessCount\": 1, \"isStreamerResult\": false, \"guessedBefore\": false, \"gameId\": null }, { \"displayName\": \"Sebastian Persson\", \"userName\": \"Sebastian Persson\", \"profilePicUrl\": \"https://lh3.googleusercontent.com/a-/ACNPEu8BzWj4awgIuOHtzi5l1eozbyXt41x7C_-EYBtGvg=s96-c\", \"playerFlagName\": \"\", \"playerFlag\": null, \"wasRandom\": false, \"score\": 2313.33, \"distance\": 1090.4031990854394, \"timeTaken\": 57992.1945, \"streak\": 0, \"countryCode\": \"IT\", \"exactCountryCode\": \"IT\", \"guessCount\": 1, \"isStreamerResult\": false, \"guessedBefore\": false, \"gameId\": null }, { \"displayName\": \"Mikko Vitug\", \"userName\": \"Mikko Vitug\", \"profilePicUrl\": \"https://lh3.googleusercontent.com/a/ALm5wu0b7P18OVrK4G6cT4YWkFP8ohkbW22pt8QsE9wk=s96-c\", \"playerFlagName\": \"\", \"playerFlag\": null, \"wasRandom\": false, \"score\": 2297.5, \"distance\": 1103.6425372342612, \"timeTaken\": 75174.9128, \"streak\": 0, \"countryCode\": \"CZ\", \"exactCountryCode\": \"CZ\", \"guessCount\": 1, \"isStreamerResult\": false, \"guessedBefore\": false, \"gameId\": null }, { \"displayName\": \"Eric Eggert\", \"userName\": \"Eric Eggert\", \"profilePicUrl\": \"https://lh3.googleusercontent.com/a-/ACNPEu8Q7V6soLK5NYLNkQPscHheH1SeKKldW-E9kPhNUA=s96-c\", \"playerFlagName\": \"Europe\", \"playerFlag\": \"eu\", \"wasRandom\": false, \"score\": 2295, \"distance\": 1105.5817212479383, \"timeTaken\": 77486.785, \"streak\": 0, \"countryCode\": \"PT\", \"exactCountryCode\": \"PT\", \"guessCount\": 1, \"isStreamerResult\": false, \"guessedBefore\": false, \"gameId\": null }, { \"displayName\": \"wudilka\", \"userName\": \"wudilka\", \"profilePicUrl\": \"https://static-cdn.jtvnw.net/user-default-pictures-uv/dbdc9198-def8-11e9-8681-784f43822e80-profile_image-300x300.png\", \"playerFlagName\": \"\", \"playerFlag\": null, \"wasRandom\": false, \"score\": 2281.67, \"distance\": 1116.447526302153, \"timeTaken\": 46542.8171, \"streak\": 0, \"countryCode\": \"IT\", \"exactCountryCode\": \"IT\", \"guessCount\": 1, \"isStreamerResult\": false, \"guessedBefore\": false, \"gameId\": null }, { \"displayName\": \"NoTrespassingCRO\", \"userName\": \"NoTrespassingCRO\", \"profilePicUrl\": \"https://lh3.googleusercontent.com/a/ALm5wu0wmq6WKiBFQGrPXQxYJuxj9I6eYa_PGPTLIfI1=s96-c\", \"playerFlagName\": \"\", \"playerFlag\": null, \"wasRandom\": false, \"score\": 2280, \"distance\": 1117.6667844714202, \"timeTaken\": 55070.2873, \"streak\": 0, \"countryCode\": \"IT\", \"exactCountryCode\": \"IT\", \"guessCount\": 1, \"isStreamerResult\": false, \"guessedBefore\": false, \"gameId\": null }, { \"displayName\": \"sidc28\", \"userName\": \"sidc28\", \"profilePicUrl\": \"https://static-cdn.jtvnw.net/user-default-pictures-uv/ead5c8b2-a4c9-4724-b1dd-9f00b46cbd3d-profile_image-300x300.png\", \"playerFlagName\": \"India\", \"playerFlag\": \"in\", \"wasRandom\": false, \"score\": 2277.5, \"distance\": 1119.298652125734, \"timeTaken\": 90744.8981, \"streak\": 0, \"countryCode\": \"PT\", \"exactCountryCode\": \"PT\", \"guessCount\": 1, \"isStreamerResult\": false, \"guessedBefore\": false, \"gameId\": null }, { \"displayName\": \"Ollie Smith\", \"userName\": \"Ollie Smith\", \"profilePicUrl\": \"https://lh3.googleusercontent.com/a/ALm5wu0CfM9-ZGXUK3Vi7czkLJOc6vJNzX_GPdEONt55=s96-c\", \"playerFlagName\": \"United Kingdom\", \"playerFlag\": \"gb\", \"wasRandom\": false, \"score\": 2270, \"distance\": 1125.6394136742047, \"timeTaken\": 34701.937, \"streak\": 0, \"countryCode\": \"IT\", \"exactCountryCode\": \"IT\", \"guessCount\": 1, \"isStreamerResult\": false, \"guessedBefore\": false, \"gameId\": null }, { \"displayName\": \"pigeon0427\", \"userName\": \"pigeon0427\", \"profilePicUrl\": \"https://static-cdn.jtvnw.net/user-default-pictures-uv/294c98b5-e34d-42cd-a8f0-140b72fba9b0-profile_image-300x300.png\", \"playerFlagName\": \"\", \"playerFlag\": null, \"wasRandom\": false, \"score\": 2261.67, \"distance\": 1132.6823875870714, \"timeTaken\": 69800.9414, \"streak\": 0, \"countryCode\": \"HR\", \"exactCountryCode\": \"HR\", \"guessCount\": 1, \"isStreamerResult\": false, \"guessedBefore\": false, \"gameId\": null }, { \"displayName\": \"No Name\", \"userName\": \"No Name\", \"profilePicUrl\": \"https://lh3.googleusercontent.com/a/ALm5wu25V1bhS9zbqJWRFviUM5oJACiPkNppL0eZXiVH=s96-c\", \"playerFlagName\": \"\", \"playerFlag\": null, \"wasRandom\": false, \"score\": 2232.5, \"distance\": 1156.8516512104907, \"timeTaken\": 63508.773, \"streak\": 0, \"countryCode\": \"CZ\", \"exactCountryCode\": \"CZ\", \"guessCount\": 1, \"isStreamerResult\": false, \"guessedBefore\": false, \"gameId\": null }, { \"displayName\": \"Sandy P\", \"userName\": \"Sandy P\", \"profilePicUrl\": \"https://lh3.googleusercontent.com/a-/ACNPEu8FnRQqWfdcDMmKonhYVGK5VMe_YcJk4w8rYoJj=s96-c\", \"playerFlagName\": \"\", \"playerFlag\": null, \"wasRandom\": false, \"score\": 2224.17, \"distance\": 1163.5235483631643, \"timeTaken\": 65824.4279, \"streak\": 0, \"countryCode\": \"CZ\", \"exactCountryCode\": \"CZ\", \"guessCount\": 1, \"isStreamerResult\": false, \"guessedBefore\": false, \"gameId\": null }, { \"displayName\": \"Guybruh\", \"userName\": \"guybruh\", \"profilePicUrl\": \"https://static-cdn.jtvnw.net/user-default-pictures-uv/ebb84563-db81-4b9c-8940-64ed33ccfc7b-profile_image-300x300.png\", \"playerFlagName\": \"Portugal\", \"playerFlag\": \"pt\", \"wasRandom\": false, \"score\": 2212.5, \"distance\": 1173.5157377146777, \"timeTaken\": 73825.5697, \"streak\": 0, \"countryCode\": \"IT\", \"exactCountryCode\": \"IT\", \"guessCount\": 1, \"isStreamerResult\": false, \"guessedBefore\": false, \"gameId\": null }, { \"displayName\": \"DTAS T.\", \"userName\": \"DTAS T.\", \"profilePicUrl\": \"https://lh3.googleusercontent.com/a/ALm5wu2-xbgKPpBo7qZQKcWmnAH55TyAjgz02d6MCdb3=s96-c\", \"playerFlagName\": \"\", \"playerFlag\": null, \"wasRandom\": false, \"score\": 2211.67, \"distance\": 1174.0163764007755, \"timeTaken\": 82118.6889, \"streak\": 0, \"countryCode\": \"IT\", \"exactCountryCode\": \"IT\", \"guessCount\": 1, \"isStreamerResult\": false, \"guessedBefore\": false, \"gameId\": null }, { \"displayName\": \"Deniz Kiki\", \"userName\": \"Deniz Kiki\", \"profilePicUrl\": \"https://lh3.googleusercontent.com/a-/ACNPEu8fxJqNk2f9xuBIiDos4kRHwVUvLGl3quC4Ai150w=s96-c\", \"playerFlagName\": \"Bulgaria\", \"playerFlag\": \"bg\", \"wasRandom\": false, \"score\": 2185, \"distance\": 1196.659316482909, \"timeTaken\": 88309.4509, \"streak\": 0, \"countryCode\": \"HR\", \"exactCountryCode\": \"HR\", \"guessCount\": 1, \"isStreamerResult\": false, \"guessedBefore\": false, \"gameId\": null }, { \"displayName\": \"Epic_Cheese_Cat\", \"userName\": \"Epic_Cheese_Cat\", \"profilePicUrl\": \"https://lh3.googleusercontent.com/a-/ACNPEu-oNrLgIqktSeupbz3m8XJpVD43T4eUCMHFT-d7SQ=s96-c\", \"playerFlagName\": \"\", \"playerFlag\": null, \"wasRandom\": false, \"score\": 2132.5, \"distance\": 1241.371232750891, \"timeTaken\": 50771.7941, \"streak\": 0, \"countryCode\": \"HR\", \"exactCountryCode\": \"HR\", \"guessCount\": 1, \"isStreamerResult\": false, \"guessedBefore\": false, \"gameId\": null }, { \"displayName\": \"Akseli\", \"userName\": \"Akseli\", \"profilePicUrl\": \"https://lh3.googleusercontent.com/a-/ACNPEu-1f7DCXja5NCwIAmqPCNwNq_qFx2BI5WoWaosV=s96-c\", \"playerFlagName\": \"Finland\", \"playerFlag\": \"fi\", \"wasRandom\": false, \"score\": 2129.17, \"distance\": 1244.3621455245793, \"timeTaken\": 50817.2207, \"streak\": 0, \"countryCode\": \"HR\", \"exactCountryCode\": \"HR\", \"guessCount\": 1, \"isStreamerResult\": false, \"guessedBefore\": false, \"gameId\": null }, { \"displayName\": \"svlxprd\", \"userName\": \"svlxprd\", \"profilePicUrl\": \"https://static-cdn.jtvnw.net/jtv_user_pictures/802f9dc1-1f0f-4804-b505-4f2f3954fb97-profile_image-300x300.png\", \"playerFlagName\": \"\", \"playerFlag\": null, \"wasRandom\": false, \"score\": 2128.33, \"distance\": 1245.1026100950746, \"timeTaken\": 113479.9902, \"streak\": 0, \"countryCode\": \"HR\", \"exactCountryCode\": \"HR\", \"guessCount\": 1, \"isStreamerResult\": false, \"guessedBefore\": false, \"gameId\": null }, { \"displayName\": \"kisieliux\", \"userName\": \"kisieliux\", \"profilePicUrl\": \"https://static-cdn.jtvnw.net/user-default-pictures-uv/ce57700a-def9-11e9-842d-784f43822e80-profile_image-300x300.png\", \"playerFlagName\": \"Lithuania\", \"playerFlag\": \"lt\", \"wasRandom\": false, \"score\": 2127.5, \"distance\": 1245.5396956975574, \"timeTaken\": 52884.543, \"streak\": 0, \"countryCode\": \"HR\", \"exactCountryCode\": \"HR\", \"guessCount\": 1, \"isStreamerResult\": false, \"guessedBefore\": false, \"gameId\": null }, { \"displayName\": \"Isaac Tompkin\", \"userName\": \"Isaac Tompkin\", \"profilePicUrl\": \"https://lh3.googleusercontent.com/a/ALm5wu14nH879q10rTyGe2x6jLUAckrprFBQvc62Zpc=s96-c\", \"playerFlagName\": \"Andorra\", \"playerFlag\": \"ad\", \"wasRandom\": false, \"score\": 2121.67, \"distance\": 1251.2457883352856, \"timeTaken\": 113487.6095, \"streak\": 0, \"countryCode\": \"CZ\", \"exactCountryCode\": \"CZ\", \"guessCount\": 1, \"isStreamerResult\": false, \"guessedBefore\": false, \"gameId\": null }, { \"displayName\": \"Wyatt Wilson\", \"userName\": \"Wyatt Wilson\", \"profilePicUrl\": \"https://lh3.googleusercontent.com/a-/ACNPEu960quHcKE9_OLQdwcgy7KDOWWBkSt7j4eKqlwd=s96-c\", \"playerFlagName\": \"\", \"playerFlag\": null, \"wasRandom\": false, \"score\": 2104.17, \"distance\": 1266.524821950604, \"timeTaken\": 36653.3422, \"streak\": 0, \"countryCode\": \"AT\", \"exactCountryCode\": \"AT\", \"guessCount\": 1, \"isStreamerResult\": false, \"guessedBefore\": false, \"gameId\": null }, { \"displayName\": \"Ashish Asthana\", \"userName\": \"Ashish Asthana\", \"profilePicUrl\": \"https://lh3.googleusercontent.com/a/ALm5wu1glLkNHpFWTMqZmpmDHHXhmwG-Ceku_v58S4_q=s96-c\", \"playerFlagName\": \"\", \"playerFlag\": null, \"wasRandom\": false, \"score\": 2096.67, \"distance\": 1272.6753087911138, \"timeTaken\": 34300.1158, \"streak\": 0, \"countryCode\": \"CZ\", \"exactCountryCode\": \"CZ\", \"guessCount\": 1, \"isStreamerResult\": false, \"guessedBefore\": false, \"gameId\": null }, { \"displayName\": \"Hoschi3000\", \"userName\": \"hoschi3000\", \"profilePicUrl\": \"https://static-cdn.jtvnw.net/user-default-pictures-uv/de130ab0-def7-11e9-b668-784f43822e80-profile_image-300x300.png\", \"playerFlagName\": \"Germany\", \"playerFlag\": \"de\", \"wasRandom\": false, \"score\": 2075.83, \"distance\": 1291.5236983271498, \"timeTaken\": 44137.2584, \"streak\": 0, \"countryCode\": \"IT\", \"exactCountryCode\": \"IT\", \"guessCount\": 1, \"isStreamerResult\": false, \"guessedBefore\": false, \"gameId\": null }, { \"displayName\": \"Donald\", \"userName\": \"Donald\", \"profilePicUrl\": \"https://lh3.googleusercontent.com/a-/ACNPEu_YsXgymBK5FocyGQEMvbtUsIOnVFHf8hFnmbfB=s96-c\", \"playerFlagName\": \"North Carolina\", \"playerFlag\": \"usnc\", \"wasRandom\": false, \"score\": 2073.33, \"distance\": 1294.0176787113803, \"timeTaken\": 66717.4048, \"streak\": 0, \"countryCode\": \"CZ\", \"exactCountryCode\": \"CZ\", \"guessCount\": 1, \"isStreamerResult\": false, \"guessedBefore\": false, \"gameId\": null }, { \"displayName\": \"Sayan Singha\", \"userName\": \"Sayan Singha\", \"profilePicUrl\": \"https://lh3.googleusercontent.com/a/ALm5wu3hyakAolGYgnIU6sgyAsM8ldTyanAkjqsc1-nb=s96-c\", \"playerFlagName\": \"\", \"playerFlag\": null, \"wasRandom\": false, \"score\": 2061.67, \"distance\": 1304.005945892722, \"timeTaken\": 100791.8256, \"streak\": 0, \"countryCode\": \"IT\", \"exactCountryCode\": \"IT\", \"guessCount\": 1, \"isStreamerResult\": false, \"guessedBefore\": false, \"gameId\": null }, { \"displayName\": \"Gladias\", \"userName\": \"Gladias\", \"profilePicUrl\": \"https://lh3.googleusercontent.com/a-/ACNPEu_YCXpUg1ugU3wg1hLjsEZv_RbWQaNS5UVgD6WG=s96-c\", \"playerFlagName\": \"\", \"playerFlag\": null, \"wasRandom\": false, \"score\": 2050, \"distance\": 1314.4376057109184, \"timeTaken\": 50502.7607, \"streak\": 0, \"countryCode\": \"CZ\", \"exactCountryCode\": \"CZ\", \"guessCount\": 1, \"isStreamerResult\": false, \"guessedBefore\": false, \"gameId\": null }, { \"displayName\": \"Bongooose\", \"userName\": \"Bongooose\", \"profilePicUrl\": \"https://lh3.googleusercontent.com/a/ALm5wu2zw-_XFx3DhDhXrAjFaKwij5A5PjWm4eSTuJ5g=s96-c\", \"playerFlagName\": \"\", \"playerFlag\": null, \"wasRandom\": false, \"score\": 2022.5, \"distance\": 1339.7666790839057, \"timeTaken\": 45513.339, \"streak\": 0, \"countryCode\": \"HR\", \"exactCountryCode\": \"HR\", \"guessCount\": 1, \"isStreamerResult\": false, \"guessedBefore\": false, \"gameId\": null }, { \"displayName\": \"Micro\", \"userName\": \"Micro\", \"profilePicUrl\": \"https://lh3.googleusercontent.com/a-/ACNPEu-rg73HeAuIZtrNNREmc99-Hn7rd9KkJTDBJPo=s96-c\", \"playerFlagName\": \"\", \"playerFlag\": null, \"wasRandom\": false, \"score\": 1987.5, \"distance\": 1372.412515753211, \"timeTaken\": 37921.831, \"streak\": 0, \"countryCode\": \"DK\", \"exactCountryCode\": \"DK\", \"guessCount\": 1, \"isStreamerResult\": false, \"guessedBefore\": false, \"gameId\": null }, { \"displayName\": \"Antique Insider\", \"userName\": \"Antique Insider\", \"profilePicUrl\": \"https://lh3.googleusercontent.com/a/ALm5wu14MrL6OJS3S6BngfSm4t6ajKh39pEL4698H_N0=s96-c\", \"playerFlagName\": \"\", \"playerFlag\": null, \"wasRandom\": false, \"score\": 1900, \"distance\": 1455.4719742104692, \"timeTaken\": 61535.175, \"streak\": 0, \"countryCode\": \"IT\", \"exactCountryCode\": \"IT\", \"guessCount\": 1, \"isStreamerResult\": false, \"guessedBefore\": false, \"gameId\": null }, { \"displayName\": \"Masimaz\", \"userName\": \"Masimaz\", \"profilePicUrl\": \"https://lh3.googleusercontent.com/a-/ACNPEu-wB_n0YmKStJ2sDIQ9q9FtCIjiIfkT3IkblBwOeA=s96-c\", \"playerFlagName\": \"\", \"playerFlag\": null, \"wasRandom\": false, \"score\": 1878.33, \"distance\": 1476.6696922373105, \"timeTaken\": 88815.7536, \"streak\": 0, \"countryCode\": \"SK\", \"exactCountryCode\": \"SK\", \"guessCount\": 1, \"isStreamerResult\": false, \"guessedBefore\": false, \"gameId\": null }, { \"displayName\": \"samuraicapt\", \"userName\": \"samuraicapt\", \"profilePicUrl\": \"https://static-cdn.jtvnw.net/jtv_user_pictures/dc6f5504-96a6-4a2e-a9af-4287c1d93c44-profile_image-300x300.png\", \"playerFlagName\": \"\", \"playerFlag\": null, \"wasRandom\": false, \"score\": 1876.67, \"distance\": 1478.67061731671, \"timeTaken\": 28469.2999, \"streak\": 0, \"countryCode\": \"BA\", \"exactCountryCode\": \"BA\", \"guessCount\": 1, \"isStreamerResult\": false, \"guessedBefore\": false, \"gameId\": null }, { \"displayName\": \"mollegah\", \"userName\": \"mollegah\", \"profilePicUrl\": \"https://static-cdn.jtvnw.net/jtv_user_pictures/78e7ec62-6158-414c-8842-b19929d5475a-profile_image-300x300.png\", \"playerFlagName\": \"Germany\", \"playerFlag\": \"de\", \"wasRandom\": false, \"score\": 1805.83, \"distance\": 1549.4263312557432, \"timeTaken\": 84051.0608, \"streak\": 0, \"countryCode\": \"RS\", \"exactCountryCode\": \"RS\", \"guessCount\": 1, \"isStreamerResult\": false, \"guessedBefore\": false, \"gameId\": null }, { \"displayName\": \"Jan Raczkowski\", \"userName\": \"Jan Raczkowski\", \"profilePicUrl\": \"https://lh3.googleusercontent.com/a/ALm5wu14BowlQVHrX439dnHwQdzC23VU6jRVXY-iYBky=s96-c\", \"playerFlagName\": \"\", \"playerFlag\": null, \"wasRandom\": false, \"score\": 1785, \"distance\": 1571.6824152321115, \"timeTaken\": 80221.0661, \"streak\": 0, \"countryCode\": \"IT\", \"exactCountryCode\": \"IT\", \"guessCount\": 1, \"isStreamerResult\": false, \"guessedBefore\": false, \"gameId\": null }, { \"displayName\": \"nwreck\", \"userName\": \"nwreck\", \"profilePicUrl\": \"https://static-cdn.jtvnw.net/user-default-pictures-uv/13e5fa74-defa-11e9-809c-784f43822e80-profile_image-300x300.png\", \"playerFlagName\": \"Togo\", \"playerFlag\": \"tg\", \"wasRandom\": false, \"score\": 1782.5, \"distance\": 1573.5028047679043, \"timeTaken\": 51803.0115, \"streak\": 0, \"countryCode\": \"IT\", \"exactCountryCode\": \"IT\", \"guessCount\": 1, \"isStreamerResult\": false, \"guessedBefore\": false, \"gameId\": null }, { \"displayName\": \"Missy Meyer\", \"userName\": \"Missy Meyer\", \"profilePicUrl\": \"https://lh3.googleusercontent.com/a-/ACNPEu9TEqA7WEw3UQH1nbLRcO4AqSRGl5mRisA2P1efXaY=s96-c\", \"playerFlagName\": \"\", \"playerFlag\": null, \"wasRandom\": false, \"score\": 1780, \"distance\": 1576.245432661949, \"timeTaken\": 64281.5765, \"streak\": 0, \"countryCode\": \"IT\", \"exactCountryCode\": \"IT\", \"guessCount\": 1, \"isStreamerResult\": false, \"guessedBefore\": false, \"gameId\": null }, { \"displayName\": \"jegelan\", \"userName\": \"jegelan\", \"profilePicUrl\": \"https://static-cdn.jtvnw.net/user-default-pictures-uv/13e5fa74-defa-11e9-809c-784f43822e80-profile_image-300x300.png\", \"playerFlagName\": \"Norway\", \"playerFlag\": \"no\", \"wasRandom\": false, \"score\": 1775, \"distance\": 1581.37626077429, \"timeTaken\": 70803.1829, \"streak\": 0, \"countryCode\": \"IT\", \"exactCountryCode\": \"IT\", \"guessCount\": 1, \"isStreamerResult\": false, \"guessedBefore\": false, \"gameId\": null }, { \"displayName\": \"eskilate!\", \"userName\": \"eskilate!\", \"profilePicUrl\": \"https://lh3.googleusercontent.com/a-/ACNPEu-vBrNZyNBwRfu0i9jgdMI5ZGeCo1Ko-751Yhq_2A=s96-c\", \"playerFlagName\": \"\", \"playerFlag\": null, \"wasRandom\": false, \"score\": 1707.5, \"distance\": 1653.7663762437319, \"timeTaken\": 75368.1738, \"streak\": 0, \"countryCode\": \"RO\", \"exactCountryCode\": \"RO\", \"guessCount\": 1, \"isStreamerResult\": false, \"guessedBefore\": false, \"gameId\": null }, { \"displayName\": \"Bunny Elixir\", \"userName\": \"Bunny Elixir\", \"profilePicUrl\": \"https://lh3.googleusercontent.com/a-/ACNPEu-y8Png4rBKHS8MheC4uhcb8d-wSFP7I1fuALCK=s96-c\", \"playerFlagName\": \"\", \"playerFlag\": null, \"wasRandom\": false, \"score\": 1696.67, \"distance\": 1665.7194644022652, \"timeTaken\": 44758.4673, \"streak\": 0, \"countryCode\": \"MT\", \"exactCountryCode\": \"MT\", \"guessCount\": 1, \"isStreamerResult\": false, \"guessedBefore\": false, \"gameId\": null }, { \"displayName\": \"Andy A\", \"userName\": \"Andy A\", \"profilePicUrl\": \"https://lh3.googleusercontent.com/a/ALm5wu3Ic2kLPHcfyIlCc2Ni_A1Y2kY8nLWHFBJQeUbo=s96-c\", \"playerFlagName\": \"USA\", \"playerFlag\": \"us\", \"wasRandom\": false, \"score\": 1694.17, \"distance\": 1668.194698032474, \"timeTaken\": 31865.711, \"streak\": 0, \"countryCode\": \"MT\", \"exactCountryCode\": \"MT\", \"guessCount\": 1, \"isStreamerResult\": false, \"guessedBefore\": false, \"gameId\": null }, { \"displayName\": \"GuyOnMoose\", \"userName\": \"GuyOnMoose\", \"profilePicUrl\": \"https://lh3.googleusercontent.com/a/ALm5wu1YHiOycTpAUK7h4gCQlKrT1AymSP2OugBMU6jt=s96-c\", \"playerFlagName\": \"Canada\", \"playerFlag\": \"ca\", \"wasRandom\": false, \"score\": 1691.67, \"distance\": 1670.48843744289, \"timeTaken\": 28733.7516, \"streak\": 0, \"countryCode\": \"MT\", \"exactCountryCode\": \"MT\", \"guessCount\": 1, \"isStreamerResult\": false, \"guessedBefore\": false, \"gameId\": null }, { \"displayName\": \"Mats Niska\", \"userName\": \"Mats Niska\", \"profilePicUrl\": \"https://lh3.googleusercontent.com/a-/ACNPEu-N8_4JAmafV6evAW7vC8j8vmv1Bajj9QjyuEh-sA=s96-c\", \"playerFlagName\": \"\", \"playerFlag\": null, \"wasRandom\": false, \"score\": 1691.67, \"distance\": 1670.6857640074033, \"timeTaken\": 46204.0405, \"streak\": 0, \"countryCode\": \"MT\", \"exactCountryCode\": \"MT\", \"guessCount\": 1, \"isStreamerResult\": false, \"guessedBefore\": false, \"gameId\": null }, { \"displayName\": \"primemillennial\", \"userName\": \"primemillennial\", \"profilePicUrl\": \"https://static-cdn.jtvnw.net/jtv_user_pictures/8d4565b4-03c3-42c3-9b7f-8f6878b70eb0-profile_image-300x300.png\", \"playerFlagName\": \"USA\", \"playerFlag\": \"us\", \"wasRandom\": false, \"score\": 1689.17, \"distance\": 1673.3458895872236, \"timeTaken\": 59812.8232, \"streak\": 0, \"countryCode\": \"MT\", \"exactCountryCode\": \"MT\", \"guessCount\": 1, \"isStreamerResult\": false, \"guessedBefore\": false, \"gameId\": null }, { \"displayName\": \"elinaishere\", \"userName\": \"elinaishere\", \"profilePicUrl\": \"https://static-cdn.jtvnw.net/user-default-pictures-uv/dbdc9198-def8-11e9-8681-784f43822e80-profile_image-300x300.png\", \"playerFlagName\": \"Latvia\", \"playerFlag\": \"lv\", \"wasRandom\": false, \"score\": 1689.17, \"distance\": 1673.5748724563723, \"timeTaken\": 69603.1746, \"streak\": 0, \"countryCode\": \"MT\", \"exactCountryCode\": \"MT\", \"guessCount\": 1, \"isStreamerResult\": false, \"guessedBefore\": false, \"gameId\": null }, { \"displayName\": \"Sebastian Schmitt\", \"userName\": \"Sebastian Schmitt\", \"profilePicUrl\": \"https://lh3.googleusercontent.com/a/ALm5wu0SZp6vYGWPQIdr7dR91paRwkpn7AI5jWpgGpYS=s96-c\", \"playerFlagName\": \"Germany\", \"playerFlag\": \"de\", \"wasRandom\": false, \"score\": 1689.17, \"distance\": 1673.8213165846403, \"timeTaken\": 87032.2726, \"streak\": 0, \"countryCode\": \"MT\", \"exactCountryCode\": \"MT\", \"guessCount\": 1, \"isStreamerResult\": false, \"guessedBefore\": false, \"gameId\": null }, { \"displayName\": \"YanitedRitchie\", \"userName\": \"yanitedritchie\", \"profilePicUrl\": \"https://static-cdn.jtvnw.net/jtv_user_pictures/37c6e030-94d6-44d2-ac77-761423f8f8a6-profile_image-300x300.png\", \"playerFlagName\": \"Sri Lanka\", \"playerFlag\": \"lk\", \"wasRandom\": false, \"score\": 1688.33, \"distance\": 1674.3111447067063, \"timeTaken\": 91217.8709, \"streak\": 0, \"countryCode\": \"MT\", \"exactCountryCode\": \"MT\", \"guessCount\": 1, \"isStreamerResult\": false, \"guessedBefore\": false, \"gameId\": null }, { \"displayName\": \"Ivo Abreu\", \"userName\": \"Ivo Abreu\", \"profilePicUrl\": \"https://lh3.googleusercontent.com/a-/ACNPEu81cvLZZeh4XK3_b2pr9mNvRhOgnlFj076uWh4=s96-c\", \"playerFlagName\": \"\", \"playerFlag\": null, \"wasRandom\": false, \"score\": 1687.5, \"distance\": 1675.0373359609766, \"timeTaken\": 81072.6852, \"streak\": 0, \"countryCode\": \"MT\", \"exactCountryCode\": \"MT\", \"guessCount\": 1, \"isStreamerResult\": false, \"guessedBefore\": false, \"gameId\": null }, { \"displayName\": \"FIRE_KG\", \"userName\": \"fire_kg\", \"profilePicUrl\": \"https://static-cdn.jtvnw.net/jtv_user_pictures/f2b64e95-1851-4099-ab86-7a12b65dc7b5-profile_image-300x300.png\", \"playerFlagName\": \"Romania\", \"playerFlag\": \"ro\", \"wasRandom\": false, \"score\": 1687.5, \"distance\": 1675.0999491757882, \"timeTaken\": 58315.2314, \"streak\": 0, \"countryCode\": \"MT\", \"exactCountryCode\": \"MT\", \"guessCount\": 1, \"isStreamerResult\": false, \"guessedBefore\": false, \"gameId\": null }, { \"displayName\": \"Mihail Constantin\", \"userName\": \"Mihail Constantin\", \"profilePicUrl\": \"https://lh3.googleusercontent.com/a/ALm5wu3c_6Q1CkDJza-CWmOrjF2R8hlqKLtOJSSJ20nj=s96-c\", \"playerFlagName\": \"\", \"playerFlag\": null, \"wasRandom\": false, \"score\": 1686.67, \"distance\": 1675.989546851637, \"timeTaken\": 74236.7726, \"streak\": 0, \"countryCode\": \"MT\", \"exactCountryCode\": \"MT\", \"guessCount\": 1, \"isStreamerResult\": false, \"guessedBefore\": false, \"gameId\": null }, { \"displayName\": \"Rakef\", \"userName\": \"Rakef\", \"profilePicUrl\": \"https://lh3.googleusercontent.com/a-/ACNPEu_oMF3hlvQOsgQeRCmH7KUxrsmLSWh7aHcrKRNT-Q=s96-c\", \"playerFlagName\": \"Germany\", \"playerFlag\": \"de\", \"wasRandom\": false, \"score\": 1686.67, \"distance\": 1676.1240380992638, \"timeTaken\": 81074.9259, \"streak\": 0, \"countryCode\": \"MT\", \"exactCountryCode\": \"MT\", \"guessCount\": 1, \"isStreamerResult\": false, \"guessedBefore\": false, \"gameId\": null }, { \"displayName\": \"Diah Rizqi\", \"userName\": \"Diah Rizqi\", \"profilePicUrl\": \"https://lh3.googleusercontent.com/a-/ACNPEu87H5xS9Qcxeq05msfnXPEwRTPwJVSjqvx1qv91ag=s96-c\", \"playerFlagName\": \"Indonesia\", \"playerFlag\": \"id\", \"wasRandom\": false, \"score\": 1686.67, \"distance\": 1676.4052319119578, \"timeTaken\": 46087.9309, \"streak\": 0, \"countryCode\": \"MT\", \"exactCountryCode\": \"MT\", \"guessCount\": 1, \"isStreamerResult\": false, \"guessedBefore\": false, \"gameId\": null }, { \"displayName\": \"Nico Zoeschg\", \"userName\": \"Nico Zoeschg\", \"profilePicUrl\": \"https://lh3.googleusercontent.com/a/ALm5wu3ziQn22-884WM-pR3NP4Xve3kb110vQsd_5Ffs=s96-c\", \"playerFlagName\": \"\", \"playerFlag\": null, \"wasRandom\": false, \"score\": 1686.67, \"distance\": 1676.629677447315, \"timeTaken\": 43367.4678, \"streak\": 0, \"countryCode\": \"MT\", \"exactCountryCode\": \"MT\", \"guessCount\": 1, \"isStreamerResult\": false, \"guessedBefore\": false, \"gameId\": null }, { \"displayName\": \"K\u00FCgul Stan\", \"userName\": \"K\u00FCgul Stan\", \"profilePicUrl\": \"https://lh3.googleusercontent.com/a-/ACNPEu-zArLjq9BPzDl47MUQAjA-nas2iLth-DtB13Cxpw=s96-c\", \"playerFlagName\": \"\", \"playerFlag\": null, \"wasRandom\": false, \"score\": 1686.67, \"distance\": 1676.6989033148777, \"timeTaken\": 56575.0606, \"streak\": 0, \"countryCode\": \"MT\", \"exactCountryCode\": \"MT\", \"guessCount\": 1, \"isStreamerResult\": false, \"guessedBefore\": false, \"gameId\": null }, { \"displayName\": \"Sraucel\", \"userName\": \"sraucel\", \"profilePicUrl\": \"https://static-cdn.jtvnw.net/jtv_user_pictures/504c85f8-cd50-48e1-b86a-55277aa48a95-profile_image-300x300.png\", \"playerFlagName\": \"\", \"playerFlag\": null, \"wasRandom\": false, \"score\": 1686.67, \"distance\": 1676.7301510990922, \"timeTaken\": 72555.7652, \"streak\": 0, \"countryCode\": \"MT\", \"exactCountryCode\": \"MT\", \"guessCount\": 1, \"isStreamerResult\": false, \"guessedBefore\": false, \"gameId\": null }, { \"displayName\": \"Mason Martinez\", \"userName\": \"Mason Martinez\", \"profilePicUrl\": \"https://lh3.googleusercontent.com/a-/ACNPEu9t2jzkv6R0K9mYxHiioVKfAo1jqaBH9d1oEIIH=s96-c\", \"playerFlagName\": \"\", \"playerFlag\": null, \"wasRandom\": false, \"score\": 1686.67, \"distance\": 1676.7342057944047, \"timeTaken\": 52851.7169, \"streak\": 0, \"countryCode\": \"MT\", \"exactCountryCode\": \"MT\", \"guessCount\": 1, \"isStreamerResult\": false, \"guessedBefore\": false, \"gameId\": null }, { \"displayName\": \"Arthur Parssinen\", \"userName\": \"Arthur Parssinen\", \"profilePicUrl\": \"https://lh3.googleusercontent.com/a/ALm5wu16QSG4TCEJlVSpzxdWONFL0LJ_kUfHxoGhX08X=s96-c\", \"playerFlagName\": \"Finland\", \"playerFlag\": \"fi\", \"wasRandom\": false, \"score\": 1683.33, \"distance\": 1680.1393588323203, \"timeTaken\": 81362.6422, \"streak\": 0, \"countryCode\": \"MT\", \"exactCountryCode\": \"MT\", \"guessCount\": 1, \"isStreamerResult\": false, \"guessedBefore\": false, \"gameId\": null }, { \"displayName\": \"Lord Lifre\", \"userName\": \"Lord Lifre\", \"profilePicUrl\": \"https://lh3.googleusercontent.com/a-/ACNPEu_6YNnlNy8V7oX3oPnlczQt0UE4YP0V5X0ZIsSL8A=s96-c\", \"playerFlagName\": \"\", \"playerFlag\": null, \"wasRandom\": false, \"score\": 1677.5, \"distance\": 1686.5252147597032, \"timeTaken\": 72385.2697, \"streak\": 0, \"countryCode\": \"AL\", \"exactCountryCode\": \"AL\", \"guessCount\": 1, \"isStreamerResult\": false, \"guessedBefore\": false, \"gameId\": null }, { \"displayName\": \"PeterPkp123\", \"userName\": \"peterpkp123\", \"profilePicUrl\": \"https://static-cdn.jtvnw.net/jtv_user_pictures/05aca998-e31e-44ee-95f2-36826aa71776-profile_image-300x300.png\", \"playerFlagName\": \"\", \"playerFlag\": null, \"wasRandom\": false, \"score\": 1676.67, \"distance\": 1687.0037692617107, \"timeTaken\": 18521.6732, \"streak\": 0, \"countryCode\": \"AL\", \"exactCountryCode\": \"AL\", \"guessCount\": 1, \"isStreamerResult\": false, \"guessedBefore\": false, \"gameId\": null }, { \"displayName\": \"Jonathan Post\", \"userName\": \"Jonathan Post\", \"profilePicUrl\": \"https://lh3.googleusercontent.com/a/ALm5wu0E8EMOTPn07qof2mGpQN4MwTjLcE7dnKkqsvQX=s96-c\", \"playerFlagName\": \"\", \"playerFlag\": null, \"wasRandom\": false, \"score\": 1415, \"distance\": 2002.081619641605, \"timeTaken\": 71291.8919, \"streak\": 0, \"countryCode\": \"GR\", \"exactCountryCode\": \"GR\", \"guessCount\": 1, \"isStreamerResult\": false, \"guessedBefore\": false, \"gameId\": null }, { \"displayName\": \"cukraus_tetukas\", \"userName\": \"cukraus_tetukas\", \"profilePicUrl\": \"https://static-cdn.jtvnw.net/jtv_user_pictures/8d024eba-1db8-401f-9e89-983508218228-profile_image-300x300.png\", \"playerFlagName\": \"Lithuania\", \"playerFlag\": \"lt\", \"wasRandom\": false, \"score\": 1405.83, \"distance\": 2013.4917299484193, \"timeTaken\": 29387.548, \"streak\": 0, \"countryCode\": \"LT\", \"exactCountryCode\": \"LT\", \"guessCount\": 1, \"isStreamerResult\": false, \"guessedBefore\": false, \"gameId\": null }, { \"displayName\": \"V\u00EDt Hou\u0161ka\", \"userName\": \"V\u00EDt Hou\u0161ka\", \"profilePicUrl\": \"https://lh3.googleusercontent.com/a-/ACNPEu8vPkNE2rSg7AoW_pan7zCoi9wh9dxjUsDrxzyaEA=s96-c\", \"playerFlagName\": \"Czech Republic\", \"playerFlag\": \"cz\", \"wasRandom\": false, \"score\": 1376.67, \"distance\": 2052.2103548847463, \"timeTaken\": 82201.9734, \"streak\": 0, \"countryCode\": \"RO\", \"exactCountryCode\": \"RO\", \"guessCount\": 1, \"isStreamerResult\": false, \"guessedBefore\": false, \"gameId\": null }, { \"displayName\": \"LY Ching\", \"userName\": \"LY Ching\", \"profilePicUrl\": \"https://lh3.googleusercontent.com/a-/ACNPEu9oO4ZUZtd4aNxhziIWAx1KvrSbopMNmKESCNaHBw=s96-c\", \"playerFlagName\": \"\", \"playerFlag\": null, \"wasRandom\": false, \"score\": 1358.33, \"distance\": 2077.5368434924567, \"timeTaken\": 113477.8753, \"streak\": 0, \"countryCode\": \"PT\", \"exactCountryCode\": \"PT\", \"guessCount\": 1, \"isStreamerResult\": false, \"guessedBefore\": false, \"gameId\": null }, { \"displayName\": \"Petery\", \"userName\": \"GeoPeter (YT)\", \"profilePicUrl\": \"pin/b8902ff7945cc5eec911fe15b6937b5b.png\", \"playerFlagName\": \"Latvia\", \"playerFlag\": \"lv\", \"wasRandom\": false, \"score\": 1330, \"distance\": 2116.1089706928215, \"timeTaken\": 175707.9507, \"streak\": 0, \"countryCode\": \"GR\", \"exactCountryCode\": \"GR\", \"guessCount\": 1, \"isStreamerResult\": true, \"guessedBefore\": false, \"gameId\": null }, { \"displayName\": \"yoshiyamamoto7\", \"userName\": \"yoshiyamamoto7\", \"profilePicUrl\": \"https://static-cdn.jtvnw.net/user-default-pictures-uv/41780b5a-def8-11e9-94d9-784f43822e80-profile_image-300x300.png\", \"playerFlagName\": \"Yukon\", \"playerFlag\": \"ca-yukon\", \"wasRandom\": false, \"score\": 1268.33, \"distance\": 2204.7467397116507, \"timeTaken\": 87077.2366, \"streak\": 0, \"countryCode\": \"TR\", \"exactCountryCode\": \"TR\", \"guessCount\": 1, \"isStreamerResult\": false, \"guessedBefore\": false, \"gameId\": null }, { \"displayName\": \"Ugiv\", \"userName\": \"Ugiv\", \"profilePicUrl\": \"https://lh3.googleusercontent.com/a-/ACNPEu_9NRZMkWcLX-0hJYStI-I4Uui_ld0wiU-41gON=s96-c\", \"playerFlagName\": \"\", \"playerFlag\": null, \"wasRandom\": false, \"score\": 1226.67, \"distance\": 2266.719699211209, \"timeTaken\": 49366.1187, \"streak\": 0, \"countryCode\": \"UA\", \"exactCountryCode\": \"UA\", \"guessCount\": 1, \"isStreamerResult\": false, \"guessedBefore\": false, \"gameId\": null }, { \"displayName\": \"UnWing\", \"userName\": \"UnWing\", \"profilePicUrl\": \"https://lh3.googleusercontent.com/a-/ACNPEu_faWhhii8V4j6vai-N__NfPq7O26DTnXljhHh9CQ=s96-c\", \"playerFlagName\": \"\", \"playerFlag\": null, \"wasRandom\": false, \"score\": 1133.33, \"distance\": 2412.9945395512364, \"timeTaken\": 68750.7413, \"streak\": 0, \"countryCode\": \"TR\", \"exactCountryCode\": \"TR\", \"guessCount\": 1, \"isStreamerResult\": false, \"guessedBefore\": false, \"gameId\": null }, { \"displayName\": \"Dan 14\", \"userName\": \"Dan 14\", \"profilePicUrl\": \"https://lh3.googleusercontent.com/a-/ACNPEu90S5qpYII0pwH3QROa4zqp6t1M1EBEdhj4Lx9u=s96-c\", \"playerFlagName\": \"\", \"playerFlag\": null, \"wasRandom\": false, \"score\": 1005.83, \"distance\": 2634.0420749251916, \"timeTaken\": 80777.0367, \"streak\": 0, \"countryCode\": \"TR\", \"exactCountryCode\": \"TR\", \"guessCount\": 1, \"isStreamerResult\": false, \"guessedBefore\": false, \"gameId\": null }, { \"displayName\": \"Nika\", \"userName\": \"Nika\", \"profilePicUrl\": \"https://lh3.googleusercontent.com/a/ALm5wu2VRQwYdDNKi41EfzYQltA-F4cJbEAUTq5NdBV2fg=s96-c\", \"playerFlagName\": \"\", \"playerFlag\": null, \"wasRandom\": false, \"score\": 803.33, \"distance\": 3051.0854238670554, \"timeTaken\": 63276.5689, \"streak\": 0, \"countryCode\": \"CY\", \"exactCountryCode\": \"CY\", \"guessCount\": 1, \"isStreamerResult\": false, \"guessedBefore\": false, \"gameId\": null }, { \"displayName\": \"ImPotassium_\", \"userName\": \"impotassium_\", \"profilePicUrl\": \"https://static-cdn.jtvnw.net/jtv_user_pictures/f5de9825-f46c-4ccf-8b24-b463fcda4e55-profile_image-300x300.png\", \"playerFlagName\": \"Seychelles\", \"playerFlag\": \"sc\", \"wasRandom\": false, \"score\": 672.5, \"distance\": 3379.931085441902, \"timeTaken\": 64749.4836, \"streak\": 0, \"countryCode\": \"IL\", \"exactCountryCode\": \"IL\", \"guessCount\": 1, \"isStreamerResult\": false, \"guessedBefore\": false, \"gameId\": null }, { \"displayName\": \"Bas Garretsen\", \"userName\": \"Bas Garretsen\", \"profilePicUrl\": \"https://lh3.googleusercontent.com/a-/ACNPEu8kh0k9LQpdn5BpZCBYfqR0BfNK6FFH3hF-UthJ=s96-c\", \"playerFlagName\": \"\", \"playerFlag\": null, \"wasRandom\": false, \"score\": 134.17, \"distance\": 6365.871075966808, \"timeTaken\": 8461.1084, \"streak\": 0, \"countryCode\": \"CN\", \"exactCountryCode\": \"CN\", \"guessCount\": 1, \"isStreamerResult\": false, \"guessedBefore\": false, \"gameId\": null }, { \"displayName\": \"SoulSeeke\", \"userName\": \"SoulSeeke\", \"profilePicUrl\": \"https://lh3.googleusercontent.com/a-/ACNPEu_VNHzmz2zDlUIHtEuJGCux1dKHTcrbHpVMrQE6=s96-c\", \"playerFlagName\": \"\", \"playerFlag\": null, \"wasRandom\": false, \"score\": 19.17, \"distance\": 9970.781650935189, \"timeTaken\": 46374.4216, \"streak\": 0, \"countryCode\": \"JP\", \"exactCountryCode\": \"JP\", \"guessCount\": 1, \"isStreamerResult\": false, \"guessedBefore\": false, \"gameId\": null }]", "import { z } from \"zod\"\n\nimport { MapGameEndResult, MapGameSettings, MapOptions, MapRoundResult, MapRoundSettings  } from \"../index\";\nimport fakeGameEndResults from \"./fakeGameEndResults\";\nimport fakeGameSettings from \"./fakeGameSettings\";\nimport fakeMapOptions from \"./fakeMapOptions\"\nimport fakeRoundInfo from \"./fakeRoundInfo\";\nimport fakeRoundResults from \"./fakeRoundResults\";\n\nexport class MockConnectionBuilder {\n\n    constructor() {\n        console.log(\"using MockConnectionBuilder\")\n    }\n\n    registeredHandlers: { [key: string]: (data?: unknown) => void; } = {}\n\n    connection = {\n        state: \"Closed\",\n\n        start: () => {this.connection.state = \"Connected\" },\n        stop: () => {\n            this.connection.onclose(new Error(\"mock error\"))\n            this.connection.state = \"Closed\"\n            console.log(\"connection closed\")\n        },\n        on: (method: string, func: (data: unknown) => void) => {\n            this.registeredHandlers[method] = func\n        },\n\n        // eslint-disable-next-line @typescript-eslint/no-empty-function\n        onclose: (e: Error) => {\n         },\n        // eslint-disable-next-line @typescript-eslint/no-empty-function\n        onreconnecting: (e: Error) => { },\n\n\n        invoke: (method: string, args: unknown): (z.infer<typeof MapOptions> | void) => {\n            if (method === \"MapLogin\") {\n                // FIXME: RETURN REAL DATA HERE SOME DAY\n                return this.mapOptions\n            }\n        }\n\n    }\n\n    withUrl(_url: string, _: any) {\n        return {\n            build: () => this.connection\n        }\n    }\n\n    startGame = () => {\n        this.registeredHandlers.StartGame(this.mapGameSettings)\n    }\n\n    sendMapOptions = () => {\n        this.registeredHandlers.MapOptions(this.mapOptions)\n    }\n\n    startRound = () => {\n        this.registeredHandlers.StartRound(this.mapRoundSettings)\n    }\n    endRound = () => {\n        this.registeredHandlers.EndRound(this.mapRoundResult)\n    }\n\n    endGame = () => {\n        this.registeredHandlers.EndGame(this.mapGameEndResult)\n    }\n    exitGame = () => { \n        this.registeredHandlers.ExitGame()\n    }\n\n    mapOptions  = fakeMapOptions as z.infer<typeof MapOptions>\n\n    mapGameSettings  = fakeGameSettings as z.infer<typeof MapGameSettings>\n\n\n    mapRoundResult: z.infer<typeof MapRoundResult> =  fakeRoundResults\n\n    mapGameEndResult: z.infer<typeof MapGameEndResult> = fakeGameEndResults\n\n    mapRoundSettings: z.infer<typeof MapRoundSettings> = fakeRoundInfo \n}\n"],
  "mappings": "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",
  "names": ["LogLevel", "MessageType", "HubConnectionState", "HttpTransportType", "TransferFormat", "AbortController", "HubConnectionBuilder", "util", "errorUtil", "ctx", "result", "objectUtil", "issues", "elements", "processed", "ZodFirstPartyTypeKind", "GuessState"]
}
